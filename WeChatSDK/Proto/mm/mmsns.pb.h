// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmsns.proto

#ifndef PROTOBUF_mmsns_2eproto__INCLUDED
#define PROTOBUF_mmsns_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class AdvertiseObject;
class AdvertiseObjectDefaultTypeInternal;
extern AdvertiseObjectDefaultTypeInternal _AdvertiseObject_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsADCommentRequest;
class SnsADCommentRequestDefaultTypeInternal;
extern SnsADCommentRequestDefaultTypeInternal _SnsADCommentRequest_default_instance_;
class SnsADCommentResponse;
class SnsADCommentResponseDefaultTypeInternal;
extern SnsADCommentResponseDefaultTypeInternal _SnsADCommentResponse_default_instance_;
class SnsADObject;
class SnsADObjectDefaultTypeInternal;
extern SnsADObjectDefaultTypeInternal _SnsADObject_default_instance_;
class SnsADObjectDetailRequest;
class SnsADObjectDetailRequestDefaultTypeInternal;
extern SnsADObjectDetailRequestDefaultTypeInternal _SnsADObjectDetailRequest_default_instance_;
class SnsADObjectDetailResponse;
class SnsADObjectDetailResponseDefaultTypeInternal;
extern SnsADObjectDetailResponseDefaultTypeInternal _SnsADObjectDetailResponse_default_instance_;
class SnsADObjectOpDeleteComment;
class SnsADObjectOpDeleteCommentDefaultTypeInternal;
extern SnsADObjectOpDeleteCommentDefaultTypeInternal _SnsADObjectOpDeleteComment_default_instance_;
class SnsAction;
class SnsActionDefaultTypeInternal;
extern SnsActionDefaultTypeInternal _SnsAction_default_instance_;
class SnsActionGroup;
class SnsActionGroupDefaultTypeInternal;
extern SnsActionGroupDefaultTypeInternal _SnsActionGroup_default_instance_;
class SnsBufferUrl;
class SnsBufferUrlDefaultTypeInternal;
extern SnsBufferUrlDefaultTypeInternal _SnsBufferUrl_default_instance_;
class SnsClassifyTimeLineRequest;
class SnsClassifyTimeLineRequestDefaultTypeInternal;
extern SnsClassifyTimeLineRequestDefaultTypeInternal _SnsClassifyTimeLineRequest_default_instance_;
class SnsClassifyTimeLineResponse;
class SnsClassifyTimeLineResponseDefaultTypeInternal;
extern SnsClassifyTimeLineResponseDefaultTypeInternal _SnsClassifyTimeLineResponse_default_instance_;
class SnsCommentInfo;
class SnsCommentInfoDefaultTypeInternal;
extern SnsCommentInfoDefaultTypeInternal _SnsCommentInfo_default_instance_;
class SnsCommentRequest;
class SnsCommentRequestDefaultTypeInternal;
extern SnsCommentRequestDefaultTypeInternal _SnsCommentRequest_default_instance_;
class SnsCommentResponse;
class SnsCommentResponseDefaultTypeInternal;
extern SnsCommentResponseDefaultTypeInternal _SnsCommentResponse_default_instance_;
class SnsDownloadRequest;
class SnsDownloadRequestDefaultTypeInternal;
extern SnsDownloadRequestDefaultTypeInternal _SnsDownloadRequest_default_instance_;
class SnsDownloadResponse;
class SnsDownloadResponseDefaultTypeInternal;
extern SnsDownloadResponseDefaultTypeInternal _SnsDownloadResponse_default_instance_;
class SnsGetCityRequest;
class SnsGetCityRequestDefaultTypeInternal;
extern SnsGetCityRequestDefaultTypeInternal _SnsGetCityRequest_default_instance_;
class SnsGetCityResponse;
class SnsGetCityResponseDefaultTypeInternal;
extern SnsGetCityResponseDefaultTypeInternal _SnsGetCityResponse_default_instance_;
class SnsGroup;
class SnsGroupDefaultTypeInternal;
extern SnsGroupDefaultTypeInternal _SnsGroup_default_instance_;
class SnsLbsContactInfo;
class SnsLbsContactInfoDefaultTypeInternal;
extern SnsLbsContactInfoDefaultTypeInternal _SnsLbsContactInfo_default_instance_;
class SnsLbsRequest;
class SnsLbsRequestDefaultTypeInternal;
extern SnsLbsRequestDefaultTypeInternal _SnsLbsRequest_default_instance_;
class SnsLbsResponse;
class SnsLbsResponseDefaultTypeInternal;
extern SnsLbsResponseDefaultTypeInternal _SnsLbsResponse_default_instance_;
class SnsObject;
class SnsObjectDefaultTypeInternal;
extern SnsObjectDefaultTypeInternal _SnsObject_default_instance_;
class SnsObjectDetailRequest;
class SnsObjectDetailRequestDefaultTypeInternal;
extern SnsObjectDetailRequestDefaultTypeInternal _SnsObjectDetailRequest_default_instance_;
class SnsObjectDetailResponse;
class SnsObjectDetailResponseDefaultTypeInternal;
extern SnsObjectDetailResponseDefaultTypeInternal _SnsObjectDetailResponse_default_instance_;
class SnsObjectOp;
class SnsObjectOpDefaultTypeInternal;
extern SnsObjectOpDefaultTypeInternal _SnsObjectOp_default_instance_;
class SnsObjectOpDeleteComment;
class SnsObjectOpDeleteCommentDefaultTypeInternal;
extern SnsObjectOpDeleteCommentDefaultTypeInternal _SnsObjectOpDeleteComment_default_instance_;
class SnsObjectOpRequest;
class SnsObjectOpRequestDefaultTypeInternal;
extern SnsObjectOpRequestDefaultTypeInternal _SnsObjectOpRequest_default_instance_;
class SnsObjectOpResponse;
class SnsObjectOpResponseDefaultTypeInternal;
extern SnsObjectOpResponseDefaultTypeInternal _SnsObjectOpResponse_default_instance_;
class SnsPostCtocUploadInfo;
class SnsPostCtocUploadInfoDefaultTypeInternal;
extern SnsPostCtocUploadInfoDefaultTypeInternal _SnsPostCtocUploadInfo_default_instance_;
class SnsPostRequest;
class SnsPostRequestDefaultTypeInternal;
extern SnsPostRequestDefaultTypeInternal _SnsPostRequest_default_instance_;
class SnsPostResponse;
class SnsPostResponseDefaultTypeInternal;
extern SnsPostResponseDefaultTypeInternal _SnsPostResponse_default_instance_;
class SnsServerConfig;
class SnsServerConfigDefaultTypeInternal;
extern SnsServerConfigDefaultTypeInternal _SnsServerConfig_default_instance_;
class SnsSyncRequest;
class SnsSyncRequestDefaultTypeInternal;
extern SnsSyncRequestDefaultTypeInternal _SnsSyncRequest_default_instance_;
class SnsSyncResponse;
class SnsSyncResponseDefaultTypeInternal;
extern SnsSyncResponseDefaultTypeInternal _SnsSyncResponse_default_instance_;
class SnsTimeLineRequest;
class SnsTimeLineRequestDefaultTypeInternal;
extern SnsTimeLineRequestDefaultTypeInternal _SnsTimeLineRequest_default_instance_;
class SnsTimeLineResponse;
class SnsTimeLineResponseDefaultTypeInternal;
extern SnsTimeLineResponseDefaultTypeInternal _SnsTimeLineResponse_default_instance_;
class SnsTimeLineWithTypeRequest;
class SnsTimeLineWithTypeRequestDefaultTypeInternal;
extern SnsTimeLineWithTypeRequestDefaultTypeInternal _SnsTimeLineWithTypeRequest_default_instance_;
class SnsTimeLineWithTypeResponse;
class SnsTimeLineWithTypeResponseDefaultTypeInternal;
extern SnsTimeLineWithTypeResponseDefaultTypeInternal _SnsTimeLineWithTypeResponse_default_instance_;
class SnsUploadRequest;
class SnsUploadRequestDefaultTypeInternal;
extern SnsUploadRequestDefaultTypeInternal _SnsUploadRequest_default_instance_;
class SnsUploadResponse;
class SnsUploadResponseDefaultTypeInternal;
extern SnsUploadResponseDefaultTypeInternal _SnsUploadResponse_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class SnsUserPageRequest;
class SnsUserPageRequestDefaultTypeInternal;
extern SnsUserPageRequestDefaultTypeInternal _SnsUserPageRequest_default_instance_;
class SnsUserPageResponse;
class SnsUserPageResponseDefaultTypeInternal;
extern SnsUserPageResponseDefaultTypeInternal _SnsUserPageResponse_default_instance_;
class SnsWhatsnewRequest;
class SnsWhatsnewRequestDefaultTypeInternal;
extern SnsWhatsnewRequestDefaultTypeInternal _SnsWhatsnewRequest_default_instance_;
class SnsWhatsnewResponse;
class SnsWhatsnewResponseDefaultTypeInternal;
extern SnsWhatsnewResponseDefaultTypeInternal _SnsWhatsnewResponse_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class TwitterInfo;
class TwitterInfoDefaultTypeInternal;
extern TwitterInfoDefaultTypeInternal _TwitterInfo_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
class Whatsnew61;
class Whatsnew61DefaultTypeInternal;
extern Whatsnew61DefaultTypeInternal _Whatsnew61_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmsns_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmsns_2eproto

// ===================================================================

class TwitterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.TwitterInfo) */ {
 public:
  TwitterInfo();
  virtual ~TwitterInfo();

  TwitterInfo(const TwitterInfo& from);

  inline TwitterInfo& operator=(const TwitterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TwitterInfo& default_instance();

  static inline const TwitterInfo* internal_default_instance() {
    return reinterpret_cast<const TwitterInfo*>(
               &_TwitterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TwitterInfo* other);

  // implements Message ----------------------------------------------

  inline TwitterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TwitterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TwitterInfo& from);
  void MergeFrom(const TwitterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TwitterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Oauth_Token = 1;
  bool has_oauth_token() const;
  void clear_oauth_token();
  static const int kOauthTokenFieldNumber = 1;
  const ::std::string& oauth_token() const;
  void set_oauth_token(const ::std::string& value);
  #if LANG_CXX11
  void set_oauth_token(::std::string&& value);
  #endif
  void set_oauth_token(const char* value);
  void set_oauth_token(const char* value, size_t size);
  ::std::string* mutable_oauth_token();
  ::std::string* release_oauth_token();
  void set_allocated_oauth_token(::std::string* oauth_token);

  // optional string Oauth_Token_Secret = 2;
  bool has_oauth_token_secret() const;
  void clear_oauth_token_secret();
  static const int kOauthTokenSecretFieldNumber = 2;
  const ::std::string& oauth_token_secret() const;
  void set_oauth_token_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_oauth_token_secret(::std::string&& value);
  #endif
  void set_oauth_token_secret(const char* value);
  void set_oauth_token_secret(const char* value, size_t size);
  ::std::string* mutable_oauth_token_secret();
  ::std::string* release_oauth_token_secret();
  void set_allocated_oauth_token_secret(::std::string* oauth_token_secret);

  // @@protoc_insertion_point(class_scope:micromsg.TwitterInfo)
 private:
  void set_has_oauth_token();
  void clear_has_oauth_token();
  void set_has_oauth_token_secret();
  void clear_has_oauth_token_secret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr oauth_token_;
  ::google::protobuf::internal::ArenaStringPtr oauth_token_secret_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsBufferUrl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsBufferUrl) */ {
 public:
  SnsBufferUrl();
  virtual ~SnsBufferUrl();

  SnsBufferUrl(const SnsBufferUrl& from);

  inline SnsBufferUrl& operator=(const SnsBufferUrl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsBufferUrl& default_instance();

  static inline const SnsBufferUrl* internal_default_instance() {
    return reinterpret_cast<const SnsBufferUrl*>(
               &_SnsBufferUrl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SnsBufferUrl* other);

  // implements Message ----------------------------------------------

  inline SnsBufferUrl* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsBufferUrl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsBufferUrl& from);
  void MergeFrom(const SnsBufferUrl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsBufferUrl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required uint32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsBufferUrl)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsUploadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsUploadRequest) */ {
 public:
  SnsUploadRequest();
  virtual ~SnsUploadRequest();

  SnsUploadRequest(const SnsUploadRequest& from);

  inline SnsUploadRequest& operator=(const SnsUploadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsUploadRequest& default_instance();

  static inline const SnsUploadRequest* internal_default_instance() {
    return reinterpret_cast<const SnsUploadRequest*>(
               &_SnsUploadRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SnsUploadRequest* other);

  // implements Message ----------------------------------------------

  inline SnsUploadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsUploadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsUploadRequest& from);
  void MergeFrom(const SnsUploadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsUploadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ClientId = 6;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 6;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const char* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // optional string Description = 9;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 9;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string AppId = 13;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIdFieldNumber = 13;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string MD5 = 15;
  bool has_md5() const;
  void clear_md5();
  static const int kMD5FieldNumber = 15;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_md5(::std::string&& value);
  #endif
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t Buffer = 5;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 5;
  const ::micromsg::SKBuiltinBuffer_t& buffer() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_buffer();
  ::micromsg::SKBuiltinBuffer_t* release_buffer();
  void set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer);

  // optional .micromsg.TwitterInfo TwitterInfo = 12;
  bool has_twitterinfo() const;
  void clear_twitterinfo();
  static const int kTwitterInfoFieldNumber = 12;
  const ::micromsg::TwitterInfo& twitterinfo() const;
  ::micromsg::TwitterInfo* mutable_twitterinfo();
  ::micromsg::TwitterInfo* release_twitterinfo();
  void set_allocated_twitterinfo(::micromsg::TwitterInfo* twitterinfo);

  // required uint32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 StartPos = 3;
  bool has_startpos() const;
  void clear_startpos();
  static const int kStartPosFieldNumber = 3;
  ::google::protobuf::uint32 startpos() const;
  void set_startpos(::google::protobuf::uint32 value);

  // required uint32 TotalLen = 4;
  bool has_totallen() const;
  void clear_totallen();
  static const int kTotalLenFieldNumber = 4;
  ::google::protobuf::uint32 totallen() const;
  void set_totallen(::google::protobuf::uint32 value);

  // optional uint32 FilterStype = 7;
  bool has_filterstype() const;
  void clear_filterstype();
  static const int kFilterStypeFieldNumber = 7;
  ::google::protobuf::uint32 filterstype() const;
  void set_filterstype(::google::protobuf::uint32 value);

  // optional uint32 SyncFlag = 8;
  bool has_syncflag() const;
  void clear_syncflag();
  static const int kSyncFlagFieldNumber = 8;
  ::google::protobuf::uint32 syncflag() const;
  void set_syncflag(::google::protobuf::uint32 value);

  // optional int32 PhotoFrom = 10;
  bool has_photofrom() const;
  void clear_photofrom();
  static const int kPhotoFromFieldNumber = 10;
  ::google::protobuf::int32 photofrom() const;
  void set_photofrom(::google::protobuf::int32 value);

  // optional int32 NetType = 11;
  bool has_nettype() const;
  void clear_nettype();
  static const int kNetTypeFieldNumber = 11;
  ::google::protobuf::int32 nettype() const;
  void set_nettype(::google::protobuf::int32 value);

  // optional uint32 ExtFlag = 14;
  bool has_extflag() const;
  void clear_extflag();
  static const int kExtFlagFieldNumber = 14;
  ::google::protobuf::uint32 extflag() const;
  void set_extflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsUploadRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_type();
  void clear_has_type();
  void set_has_startpos();
  void clear_has_startpos();
  void set_has_totallen();
  void clear_has_totallen();
  void set_has_buffer();
  void clear_has_buffer();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_filterstype();
  void clear_has_filterstype();
  void set_has_syncflag();
  void clear_has_syncflag();
  void set_has_description();
  void clear_has_description();
  void set_has_photofrom();
  void clear_has_photofrom();
  void set_has_nettype();
  void clear_has_nettype();
  void set_has_twitterinfo();
  void clear_has_twitterinfo();
  void set_has_appid();
  void clear_has_appid();
  void set_has_extflag();
  void clear_has_extflag();
  void set_has_md5();
  void clear_has_md5();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr md5_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* buffer_;
  ::micromsg::TwitterInfo* twitterinfo_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 startpos_;
  ::google::protobuf::uint32 totallen_;
  ::google::protobuf::uint32 filterstype_;
  ::google::protobuf::uint32 syncflag_;
  ::google::protobuf::int32 photofrom_;
  ::google::protobuf::int32 nettype_;
  ::google::protobuf::uint32 extflag_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsUploadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsUploadResponse) */ {
 public:
  SnsUploadResponse();
  virtual ~SnsUploadResponse();

  SnsUploadResponse(const SnsUploadResponse& from);

  inline SnsUploadResponse& operator=(const SnsUploadResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsUploadResponse& default_instance();

  static inline const SnsUploadResponse* internal_default_instance() {
    return reinterpret_cast<const SnsUploadResponse*>(
               &_SnsUploadResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SnsUploadResponse* other);

  // implements Message ----------------------------------------------

  inline SnsUploadResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsUploadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsUploadResponse& from);
  void MergeFrom(const SnsUploadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsUploadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SnsBufferUrl ThumbUrls = 7;
  int thumburls_size() const;
  void clear_thumburls();
  static const int kThumbUrlsFieldNumber = 7;
  const ::micromsg::SnsBufferUrl& thumburls(int index) const;
  ::micromsg::SnsBufferUrl* mutable_thumburls(int index);
  ::micromsg::SnsBufferUrl* add_thumburls();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsBufferUrl >*
      mutable_thumburls();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsBufferUrl >&
      thumburls() const;

  // optional string ClientId = 4;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 4;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const char* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SnsBufferUrl BufferUrl = 5;
  bool has_bufferurl() const;
  void clear_bufferurl();
  static const int kBufferUrlFieldNumber = 5;
  const ::micromsg::SnsBufferUrl& bufferurl() const;
  ::micromsg::SnsBufferUrl* mutable_bufferurl();
  ::micromsg::SnsBufferUrl* release_bufferurl();
  void set_allocated_bufferurl(::micromsg::SnsBufferUrl* bufferurl);

  // required uint32 StartPos = 2;
  bool has_startpos() const;
  void clear_startpos();
  static const int kStartPosFieldNumber = 2;
  ::google::protobuf::uint32 startpos() const;
  void set_startpos(::google::protobuf::uint32 value);

  // required uint32 TotalLen = 3;
  bool has_totallen() const;
  void clear_totallen();
  static const int kTotalLenFieldNumber = 3;
  ::google::protobuf::uint32 totallen() const;
  void set_totallen(::google::protobuf::uint32 value);

  // required uint32 ThumbUrlCount = 6;
  bool has_thumburlcount() const;
  void clear_thumburlcount();
  static const int kThumbUrlCountFieldNumber = 6;
  ::google::protobuf::uint32 thumburlcount() const;
  void set_thumburlcount(::google::protobuf::uint32 value);

  // required uint32 Type = 9;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 9;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint64 Id = 8;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 8;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsUploadResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_startpos();
  void clear_has_startpos();
  void set_has_totallen();
  void clear_has_totallen();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_bufferurl();
  void clear_has_bufferurl();
  void set_has_thumburlcount();
  void clear_has_thumburlcount();
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsBufferUrl > thumburls_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SnsBufferUrl* bufferurl_;
  ::google::protobuf::uint32 startpos_;
  ::google::protobuf::uint32 totallen_;
  ::google::protobuf::uint32 thumburlcount_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint64 id_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsDownloadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsDownloadRequest) */ {
 public:
  SnsDownloadRequest();
  virtual ~SnsDownloadRequest();

  SnsDownloadRequest(const SnsDownloadRequest& from);

  inline SnsDownloadRequest& operator=(const SnsDownloadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsDownloadRequest& default_instance();

  static inline const SnsDownloadRequest* internal_default_instance() {
    return reinterpret_cast<const SnsDownloadRequest*>(
               &_SnsDownloadRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SnsDownloadRequest* other);

  // implements Message ----------------------------------------------

  inline SnsDownloadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsDownloadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsDownloadRequest& from);
  void MergeFrom(const SnsDownloadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsDownloadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string BufferId = 4;
  bool has_bufferid() const;
  void clear_bufferid();
  static const int kBufferIdFieldNumber = 4;
  const ::std::string& bufferid() const;
  void set_bufferid(const ::std::string& value);
  #if LANG_CXX11
  void set_bufferid(::std::string&& value);
  #endif
  void set_bufferid(const char* value);
  void set_bufferid(const char* value, size_t size);
  ::std::string* mutable_bufferid();
  ::std::string* release_bufferid();
  void set_allocated_bufferid(::std::string* bufferid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required int32 StartPos = 2;
  bool has_startpos() const;
  void clear_startpos();
  static const int kStartPosFieldNumber = 2;
  ::google::protobuf::int32 startpos() const;
  void set_startpos(::google::protobuf::int32 value);

  // optional int32 TotalLen = 3;
  bool has_totallen() const;
  void clear_totallen();
  static const int kTotalLenFieldNumber = 3;
  ::google::protobuf::int32 totallen() const;
  void set_totallen(::google::protobuf::int32 value);

  // required uint32 Type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 DownBufLen = 6;
  bool has_downbuflen() const;
  void clear_downbuflen();
  static const int kDownBufLenFieldNumber = 6;
  ::google::protobuf::uint32 downbuflen() const;
  void set_downbuflen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsDownloadRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_startpos();
  void clear_has_startpos();
  void set_has_totallen();
  void clear_has_totallen();
  void set_has_bufferid();
  void clear_has_bufferid();
  void set_has_type();
  void clear_has_type();
  void set_has_downbuflen();
  void clear_has_downbuflen();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr bufferid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::int32 startpos_;
  ::google::protobuf::int32 totallen_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 downbuflen_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsDownloadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsDownloadResponse) */ {
 public:
  SnsDownloadResponse();
  virtual ~SnsDownloadResponse();

  SnsDownloadResponse(const SnsDownloadResponse& from);

  inline SnsDownloadResponse& operator=(const SnsDownloadResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsDownloadResponse& default_instance();

  static inline const SnsDownloadResponse* internal_default_instance() {
    return reinterpret_cast<const SnsDownloadResponse*>(
               &_SnsDownloadResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SnsDownloadResponse* other);

  // implements Message ----------------------------------------------

  inline SnsDownloadResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsDownloadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsDownloadResponse& from);
  void MergeFrom(const SnsDownloadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsDownloadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string BufferId = 5;
  bool has_bufferid() const;
  void clear_bufferid();
  static const int kBufferIdFieldNumber = 5;
  const ::std::string& bufferid() const;
  void set_bufferid(const ::std::string& value);
  #if LANG_CXX11
  void set_bufferid(::std::string&& value);
  #endif
  void set_bufferid(const char* value);
  void set_bufferid(const char* value, size_t size);
  ::std::string* mutable_bufferid();
  ::std::string* release_bufferid();
  void set_allocated_bufferid(::std::string* bufferid);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t Buffer = 4;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& buffer() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_buffer();
  ::micromsg::SKBuiltinBuffer_t* release_buffer();
  void set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer);

  // required int32 StartPos = 2;
  bool has_startpos() const;
  void clear_startpos();
  static const int kStartPosFieldNumber = 2;
  ::google::protobuf::int32 startpos() const;
  void set_startpos(::google::protobuf::int32 value);

  // required int32 TotalLen = 3;
  bool has_totallen() const;
  void clear_totallen();
  static const int kTotalLenFieldNumber = 3;
  ::google::protobuf::int32 totallen() const;
  void set_totallen(::google::protobuf::int32 value);

  // required uint32 Type = 6;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsDownloadResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_startpos();
  void clear_has_startpos();
  void set_has_totallen();
  void clear_has_totallen();
  void set_has_buffer();
  void clear_has_buffer();
  void set_has_bufferid();
  void clear_has_bufferid();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr bufferid_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* buffer_;
  ::google::protobuf::int32 startpos_;
  ::google::protobuf::int32 totallen_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsCommentInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsCommentInfo) */ {
 public:
  SnsCommentInfo();
  virtual ~SnsCommentInfo();

  SnsCommentInfo(const SnsCommentInfo& from);

  inline SnsCommentInfo& operator=(const SnsCommentInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsCommentInfo& default_instance();

  static inline const SnsCommentInfo* internal_default_instance() {
    return reinterpret_cast<const SnsCommentInfo*>(
               &_SnsCommentInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SnsCommentInfo* other);

  // implements Message ----------------------------------------------

  inline SnsCommentInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsCommentInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsCommentInfo& from);
  void MergeFrom(const SnsCommentInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsCommentInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string Nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string Content = 5;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 5;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional string ReplyUsername = 9;
  bool has_replyusername() const;
  void clear_replyusername();
  static const int kReplyUsernameFieldNumber = 9;
  const ::std::string& replyusername() const;
  void set_replyusername(const ::std::string& value);
  #if LANG_CXX11
  void set_replyusername(::std::string&& value);
  #endif
  void set_replyusername(const char* value);
  void set_replyusername(const char* value, size_t size);
  ::std::string* mutable_replyusername();
  ::std::string* release_replyusername();
  void set_allocated_replyusername(::std::string* replyusername);

  // required uint32 Source = 3;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // required uint32 Type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 CreateTime = 6;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 6;
  ::google::protobuf::uint32 createtime() const;
  void set_createtime(::google::protobuf::uint32 value);

  // optional int32 CommentId = 7;
  bool has_commentid() const;
  void clear_commentid();
  static const int kCommentIdFieldNumber = 7;
  ::google::protobuf::int32 commentid() const;
  void set_commentid(::google::protobuf::int32 value);

  // optional int32 ReplyCommentId = 8;
  bool has_replycommentid() const;
  void clear_replycommentid();
  static const int kReplyCommentIdFieldNumber = 8;
  ::google::protobuf::int32 replycommentid() const;
  void set_replycommentid(::google::protobuf::int32 value);

  // optional uint32 IsNotRichText = 10;
  bool has_isnotrichtext() const;
  void clear_isnotrichtext();
  static const int kIsNotRichTextFieldNumber = 10;
  ::google::protobuf::uint32 isnotrichtext() const;
  void set_isnotrichtext(::google::protobuf::uint32 value);

  // optional uint64 ReplyCommentId2 = 11;
  bool has_replycommentid2() const;
  void clear_replycommentid2();
  static const int kReplyCommentId2FieldNumber = 11;
  ::google::protobuf::uint64 replycommentid2() const;
  void set_replycommentid2(::google::protobuf::uint64 value);

  // optional uint64 CommentId2 = 12;
  bool has_commentid2() const;
  void clear_commentid2();
  static const int kCommentId2FieldNumber = 12;
  ::google::protobuf::uint64 commentid2() const;
  void set_commentid2(::google::protobuf::uint64 value);

  // optional uint32 DeleteFlag = 13;
  bool has_deleteflag() const;
  void clear_deleteflag();
  static const int kDeleteFlagFieldNumber = 13;
  ::google::protobuf::uint32 deleteflag() const;
  void set_deleteflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsCommentInfo)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_source();
  void clear_has_source();
  void set_has_type();
  void clear_has_type();
  void set_has_content();
  void clear_has_content();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_commentid();
  void clear_has_commentid();
  void set_has_replycommentid();
  void clear_has_replycommentid();
  void set_has_replyusername();
  void clear_has_replyusername();
  void set_has_isnotrichtext();
  void clear_has_isnotrichtext();
  void set_has_replycommentid2();
  void clear_has_replycommentid2();
  void set_has_commentid2();
  void clear_has_commentid2();
  void set_has_deleteflag();
  void clear_has_deleteflag();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr replyusername_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::int32 commentid_;
  ::google::protobuf::int32 replycommentid_;
  ::google::protobuf::uint32 isnotrichtext_;
  ::google::protobuf::uint64 replycommentid2_;
  ::google::protobuf::uint64 commentid2_;
  ::google::protobuf::uint32 deleteflag_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsGroup) */ {
 public:
  SnsGroup();
  virtual ~SnsGroup();

  SnsGroup(const SnsGroup& from);

  inline SnsGroup& operator=(const SnsGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsGroup& default_instance();

  static inline const SnsGroup* internal_default_instance() {
    return reinterpret_cast<const SnsGroup*>(
               &_SnsGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SnsGroup* other);

  // implements Message ----------------------------------------------

  inline SnsGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsGroup& from);
  void MergeFrom(const SnsGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 GroupId = 1;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsGroup)
 private:
  void set_has_groupid();
  void clear_has_groupid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 groupid_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsObject) */ {
 public:
  SnsObject();
  virtual ~SnsObject();

  SnsObject(const SnsObject& from);

  inline SnsObject& operator=(const SnsObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsObject& default_instance();

  static inline const SnsObject* internal_default_instance() {
    return reinterpret_cast<const SnsObject*>(
               &_SnsObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SnsObject* other);

  // implements Message ----------------------------------------------

  inline SnsObject* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsObject& from);
  void MergeFrom(const SnsObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SnsCommentInfo LikeUserList = 9;
  int likeuserlist_size() const;
  void clear_likeuserlist();
  static const int kLikeUserListFieldNumber = 9;
  const ::micromsg::SnsCommentInfo& likeuserlist(int index) const;
  ::micromsg::SnsCommentInfo* mutable_likeuserlist(int index);
  ::micromsg::SnsCommentInfo* add_likeuserlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >*
      mutable_likeuserlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >&
      likeuserlist() const;

  // repeated .micromsg.SnsCommentInfo CommentUserList = 12;
  int commentuserlist_size() const;
  void clear_commentuserlist();
  static const int kCommentUserListFieldNumber = 12;
  const ::micromsg::SnsCommentInfo& commentuserlist(int index) const;
  ::micromsg::SnsCommentInfo* mutable_commentuserlist(int index);
  ::micromsg::SnsCommentInfo* add_commentuserlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >*
      mutable_commentuserlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >&
      commentuserlist() const;

  // repeated .micromsg.SnsCommentInfo WithUserList = 15;
  int withuserlist_size() const;
  void clear_withuserlist();
  static const int kWithUserListFieldNumber = 15;
  const ::micromsg::SnsCommentInfo& withuserlist(int index) const;
  ::micromsg::SnsCommentInfo* mutable_withuserlist(int index);
  ::micromsg::SnsCommentInfo* add_withuserlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >*
      mutable_withuserlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >&
      withuserlist() const;

  // repeated .micromsg.SnsGroup GroupList = 19;
  int grouplist_size() const;
  void clear_grouplist();
  static const int kGroupListFieldNumber = 19;
  const ::micromsg::SnsGroup& grouplist(int index) const;
  ::micromsg::SnsGroup* mutable_grouplist(int index);
  ::micromsg::SnsGroup* add_grouplist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsGroup >*
      mutable_grouplist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsGroup >&
      grouplist() const;

  // repeated .micromsg.SKBuiltinString_t BlackList = 24;
  int blacklist_size() const;
  void clear_blacklist();
  static const int kBlackListFieldNumber = 24;
  const ::micromsg::SKBuiltinString_t& blacklist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_blacklist(int index);
  ::micromsg::SKBuiltinString_t* add_blacklist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_blacklist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      blacklist() const;

  // repeated .micromsg.SKBuiltinString_t GroupUser = 27;
  int groupuser_size() const;
  void clear_groupuser();
  static const int kGroupUserFieldNumber = 27;
  const ::micromsg::SKBuiltinString_t& groupuser(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_groupuser(int index);
  ::micromsg::SKBuiltinString_t* add_groupuser();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_groupuser();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      groupuser() const;

  // optional string Username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string Nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string ReferUsername = 21;
  bool has_referusername() const;
  void clear_referusername();
  static const int kReferUsernameFieldNumber = 21;
  const ::std::string& referusername() const;
  void set_referusername(const ::std::string& value);
  #if LANG_CXX11
  void set_referusername(::std::string&& value);
  #endif
  void set_referusername(const char* value);
  void set_referusername(const char* value, size_t size);
  ::std::string* mutable_referusername();
  ::std::string* release_referusername();
  void set_allocated_referusername(::std::string* referusername);

  // required .micromsg.SKBuiltinBuffer_t ObjectDesc = 5;
  bool has_objectdesc() const;
  void clear_objectdesc();
  static const int kObjectDescFieldNumber = 5;
  const ::micromsg::SKBuiltinBuffer_t& objectdesc() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_objectdesc();
  ::micromsg::SKBuiltinBuffer_t* release_objectdesc();
  void set_allocated_objectdesc(::micromsg::SKBuiltinBuffer_t* objectdesc);

  // required uint64 Id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required uint32 CreateTime = 4;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 4;
  ::google::protobuf::uint32 createtime() const;
  void set_createtime(::google::protobuf::uint32 value);

  // required uint32 LikeFlag = 6;
  bool has_likeflag() const;
  void clear_likeflag();
  static const int kLikeFlagFieldNumber = 6;
  ::google::protobuf::uint32 likeflag() const;
  void set_likeflag(::google::protobuf::uint32 value);

  // required uint32 LikeCount = 7;
  bool has_likecount() const;
  void clear_likecount();
  static const int kLikeCountFieldNumber = 7;
  ::google::protobuf::uint32 likecount() const;
  void set_likecount(::google::protobuf::uint32 value);

  // required uint32 LikeUserListCount = 8;
  bool has_likeuserlistcount() const;
  void clear_likeuserlistcount();
  static const int kLikeUserListCountFieldNumber = 8;
  ::google::protobuf::uint32 likeuserlistcount() const;
  void set_likeuserlistcount(::google::protobuf::uint32 value);

  // required uint32 CommentCount = 10;
  bool has_commentcount() const;
  void clear_commentcount();
  static const int kCommentCountFieldNumber = 10;
  ::google::protobuf::uint32 commentcount() const;
  void set_commentcount(::google::protobuf::uint32 value);

  // required uint32 CommentUserListCount = 11;
  bool has_commentuserlistcount() const;
  void clear_commentuserlistcount();
  static const int kCommentUserListCountFieldNumber = 11;
  ::google::protobuf::uint32 commentuserlistcount() const;
  void set_commentuserlistcount(::google::protobuf::uint32 value);

  // required uint32 WithUserCount = 13;
  bool has_withusercount() const;
  void clear_withusercount();
  static const int kWithUserCountFieldNumber = 13;
  ::google::protobuf::uint32 withusercount() const;
  void set_withusercount(::google::protobuf::uint32 value);

  // required uint32 WithUserListCount = 14;
  bool has_withuserlistcount() const;
  void clear_withuserlistcount();
  static const int kWithUserListCountFieldNumber = 14;
  ::google::protobuf::uint32 withuserlistcount() const;
  void set_withuserlistcount(::google::protobuf::uint32 value);

  // optional uint32 ExtFlag = 16;
  bool has_extflag() const;
  void clear_extflag();
  static const int kExtFlagFieldNumber = 16;
  ::google::protobuf::uint32 extflag() const;
  void set_extflag(::google::protobuf::uint32 value);

  // optional uint32 NoChange = 17;
  bool has_nochange() const;
  void clear_nochange();
  static const int kNoChangeFieldNumber = 17;
  ::google::protobuf::uint32 nochange() const;
  void set_nochange(::google::protobuf::uint32 value);

  // optional uint32 GroupCount = 18;
  bool has_groupcount() const;
  void clear_groupcount();
  static const int kGroupCountFieldNumber = 18;
  ::google::protobuf::uint32 groupcount() const;
  void set_groupcount(::google::protobuf::uint32 value);

  // optional uint32 IsNotRichText = 20;
  bool has_isnotrichtext() const;
  void clear_isnotrichtext();
  static const int kIsNotRichTextFieldNumber = 20;
  ::google::protobuf::uint32 isnotrichtext() const;
  void set_isnotrichtext(::google::protobuf::uint32 value);

  // optional uint64 ReferId = 22;
  bool has_referid() const;
  void clear_referid();
  static const int kReferIdFieldNumber = 22;
  ::google::protobuf::uint64 referid() const;
  void set_referid(::google::protobuf::uint64 value);

  // optional uint32 BlackListCount = 23;
  bool has_blacklistcount() const;
  void clear_blacklistcount();
  static const int kBlackListCountFieldNumber = 23;
  ::google::protobuf::uint32 blacklistcount() const;
  void set_blacklistcount(::google::protobuf::uint32 value);

  // optional uint32 DeleteFlag = 25;
  bool has_deleteflag() const;
  void clear_deleteflag();
  static const int kDeleteFlagFieldNumber = 25;
  ::google::protobuf::uint32 deleteflag() const;
  void set_deleteflag(::google::protobuf::uint32 value);

  // optional uint32 GroupUserCount = 26;
  bool has_groupusercount() const;
  void clear_groupusercount();
  static const int kGroupUserCountFieldNumber = 26;
  ::google::protobuf::uint32 groupusercount() const;
  void set_groupusercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsObject)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_username();
  void clear_has_username();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_objectdesc();
  void clear_has_objectdesc();
  void set_has_likeflag();
  void clear_has_likeflag();
  void set_has_likecount();
  void clear_has_likecount();
  void set_has_likeuserlistcount();
  void clear_has_likeuserlistcount();
  void set_has_commentcount();
  void clear_has_commentcount();
  void set_has_commentuserlistcount();
  void clear_has_commentuserlistcount();
  void set_has_withusercount();
  void clear_has_withusercount();
  void set_has_withuserlistcount();
  void clear_has_withuserlistcount();
  void set_has_extflag();
  void clear_has_extflag();
  void set_has_nochange();
  void clear_has_nochange();
  void set_has_groupcount();
  void clear_has_groupcount();
  void set_has_isnotrichtext();
  void clear_has_isnotrichtext();
  void set_has_referusername();
  void clear_has_referusername();
  void set_has_referid();
  void clear_has_referid();
  void set_has_blacklistcount();
  void clear_has_blacklistcount();
  void set_has_deleteflag();
  void clear_has_deleteflag();
  void set_has_groupusercount();
  void clear_has_groupusercount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo > likeuserlist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo > commentuserlist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo > withuserlist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsGroup > grouplist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > blacklist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > groupuser_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr referusername_;
  ::micromsg::SKBuiltinBuffer_t* objectdesc_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 likeflag_;
  ::google::protobuf::uint32 likecount_;
  ::google::protobuf::uint32 likeuserlistcount_;
  ::google::protobuf::uint32 commentcount_;
  ::google::protobuf::uint32 commentuserlistcount_;
  ::google::protobuf::uint32 withusercount_;
  ::google::protobuf::uint32 withuserlistcount_;
  ::google::protobuf::uint32 extflag_;
  ::google::protobuf::uint32 nochange_;
  ::google::protobuf::uint32 groupcount_;
  ::google::protobuf::uint32 isnotrichtext_;
  ::google::protobuf::uint64 referid_;
  ::google::protobuf::uint32 blacklistcount_;
  ::google::protobuf::uint32 deleteflag_;
  ::google::protobuf::uint32 groupusercount_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsADObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsADObject) */ {
 public:
  SnsADObject();
  virtual ~SnsADObject();

  SnsADObject(const SnsADObject& from);

  inline SnsADObject& operator=(const SnsADObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsADObject& default_instance();

  static inline const SnsADObject* internal_default_instance() {
    return reinterpret_cast<const SnsADObject*>(
               &_SnsADObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SnsADObject* other);

  // implements Message ----------------------------------------------

  inline SnsADObject* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsADObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsADObject& from);
  void MergeFrom(const SnsADObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsADObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SnsObject SnsObject = 1;
  bool has_snsobject() const;
  void clear_snsobject();
  static const int kSnsObjectFieldNumber = 1;
  const ::micromsg::SnsObject& snsobject() const;
  ::micromsg::SnsObject* mutable_snsobject();
  ::micromsg::SnsObject* release_snsobject();
  void set_allocated_snsobject(::micromsg::SnsObject* snsobject);

  // optional .micromsg.SKBuiltinString_t ADXML = 2;
  bool has_adxml() const;
  void clear_adxml();
  static const int kADXMLFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& adxml() const;
  ::micromsg::SKBuiltinString_t* mutable_adxml();
  ::micromsg::SKBuiltinString_t* release_adxml();
  void set_allocated_adxml(::micromsg::SKBuiltinString_t* adxml);

  // @@protoc_insertion_point(class_scope:micromsg.SnsADObject)
 private:
  void set_has_snsobject();
  void clear_has_snsobject();
  void set_has_adxml();
  void clear_has_adxml();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SnsObject* snsobject_;
  ::micromsg::SKBuiltinString_t* adxml_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdvertiseObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AdvertiseObject) */ {
 public:
  AdvertiseObject();
  virtual ~AdvertiseObject();

  AdvertiseObject(const AdvertiseObject& from);

  inline AdvertiseObject& operator=(const AdvertiseObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvertiseObject& default_instance();

  static inline const AdvertiseObject* internal_default_instance() {
    return reinterpret_cast<const AdvertiseObject*>(
               &_AdvertiseObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(AdvertiseObject* other);

  // implements Message ----------------------------------------------

  inline AdvertiseObject* New() const PROTOBUF_FINAL { return New(NULL); }

  AdvertiseObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdvertiseObject& from);
  void MergeFrom(const AdvertiseObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdvertiseObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SnsADObject SnsADObject = 1;
  bool has_snsadobject() const;
  void clear_snsadobject();
  static const int kSnsADObjectFieldNumber = 1;
  const ::micromsg::SnsADObject& snsadobject() const;
  ::micromsg::SnsADObject* mutable_snsadobject();
  ::micromsg::SnsADObject* release_snsadobject();
  void set_allocated_snsadobject(::micromsg::SnsADObject* snsadobject);

  // optional .micromsg.SKBuiltinString_t ADInfo = 2;
  bool has_adinfo() const;
  void clear_adinfo();
  static const int kADInfoFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& adinfo() const;
  ::micromsg::SKBuiltinString_t* mutable_adinfo();
  ::micromsg::SKBuiltinString_t* release_adinfo();
  void set_allocated_adinfo(::micromsg::SKBuiltinString_t* adinfo);

  // @@protoc_insertion_point(class_scope:micromsg.AdvertiseObject)
 private:
  void set_has_snsadobject();
  void clear_has_snsadobject();
  void set_has_adinfo();
  void clear_has_adinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SnsADObject* snsadobject_;
  ::micromsg::SKBuiltinString_t* adinfo_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsPostCtocUploadInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsPostCtocUploadInfo) */ {
 public:
  SnsPostCtocUploadInfo();
  virtual ~SnsPostCtocUploadInfo();

  SnsPostCtocUploadInfo(const SnsPostCtocUploadInfo& from);

  inline SnsPostCtocUploadInfo& operator=(const SnsPostCtocUploadInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsPostCtocUploadInfo& default_instance();

  static inline const SnsPostCtocUploadInfo* internal_default_instance() {
    return reinterpret_cast<const SnsPostCtocUploadInfo*>(
               &_SnsPostCtocUploadInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SnsPostCtocUploadInfo* other);

  // implements Message ----------------------------------------------

  inline SnsPostCtocUploadInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsPostCtocUploadInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsPostCtocUploadInfo& from);
  void MergeFrom(const SnsPostCtocUploadInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsPostCtocUploadInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Flag = 1;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // required uint32 PhotoCount = 2;
  bool has_photocount() const;
  void clear_photocount();
  static const int kPhotoCountFieldNumber = 2;
  ::google::protobuf::uint32 photocount() const;
  void set_photocount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsPostCtocUploadInfo)
 private:
  void set_has_flag();
  void clear_has_flag();
  void set_has_photocount();
  void clear_has_photocount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 photocount_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsPostRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsPostRequest) */ {
 public:
  SnsPostRequest();
  virtual ~SnsPostRequest();

  SnsPostRequest(const SnsPostRequest& from);

  inline SnsPostRequest& operator=(const SnsPostRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsPostRequest& default_instance();

  static inline const SnsPostRequest* internal_default_instance() {
    return reinterpret_cast<const SnsPostRequest*>(
               &_SnsPostRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SnsPostRequest* other);

  // implements Message ----------------------------------------------

  inline SnsPostRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsPostRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsPostRequest& from);
  void MergeFrom(const SnsPostRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsPostRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t WithUserList = 4;
  int withuserlist_size() const;
  void clear_withuserlist();
  static const int kWithUserListFieldNumber = 4;
  const ::micromsg::SKBuiltinString_t& withuserlist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_withuserlist(int index);
  ::micromsg::SKBuiltinString_t* add_withuserlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_withuserlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      withuserlist() const;

  // repeated .micromsg.SnsGroup GroupIds = 10;
  int groupids_size() const;
  void clear_groupids();
  static const int kGroupIdsFieldNumber = 10;
  const ::micromsg::SnsGroup& groupids(int index) const;
  ::micromsg::SnsGroup* mutable_groupids(int index);
  ::micromsg::SnsGroup* add_groupids();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsGroup >*
      mutable_groupids();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsGroup >&
      groupids() const;

  // repeated .micromsg.SKBuiltinString_t BlackList = 14;
  int blacklist_size() const;
  void clear_blacklist();
  static const int kBlackListFieldNumber = 14;
  const ::micromsg::SKBuiltinString_t& blacklist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_blacklist(int index);
  ::micromsg::SKBuiltinString_t* add_blacklist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_blacklist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      blacklist() const;

  // repeated .micromsg.SKBuiltinString_t GroupUser = 17;
  int groupuser_size() const;
  void clear_groupuser();
  static const int kGroupUserFieldNumber = 17;
  const ::micromsg::SKBuiltinString_t& groupuser(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_groupuser(int index);
  ::micromsg::SKBuiltinString_t* add_groupuser();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_groupuser();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      groupuser() const;

  // optional string ClientId = 7;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 7;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const char* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t ObjectDesc = 2;
  bool has_objectdesc() const;
  void clear_objectdesc();
  static const int kObjectDescFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& objectdesc() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_objectdesc();
  ::micromsg::SKBuiltinBuffer_t* release_objectdesc();
  void set_allocated_objectdesc(::micromsg::SKBuiltinBuffer_t* objectdesc);

  // optional .micromsg.TwitterInfo TwitterInfo = 15;
  bool has_twitterinfo() const;
  void clear_twitterinfo();
  static const int kTwitterInfoFieldNumber = 15;
  const ::micromsg::TwitterInfo& twitterinfo() const;
  ::micromsg::TwitterInfo* mutable_twitterinfo();
  ::micromsg::TwitterInfo* release_twitterinfo();
  void set_allocated_twitterinfo(::micromsg::TwitterInfo* twitterinfo);

  // optional .micromsg.SnsPostCtocUploadInfo CtocUploadInfo = 18;
  bool has_ctocuploadinfo() const;
  void clear_ctocuploadinfo();
  static const int kCtocUploadInfoFieldNumber = 18;
  const ::micromsg::SnsPostCtocUploadInfo& ctocuploadinfo() const;
  ::micromsg::SnsPostCtocUploadInfo* mutable_ctocuploadinfo();
  ::micromsg::SnsPostCtocUploadInfo* release_ctocuploadinfo();
  void set_allocated_ctocuploadinfo(::micromsg::SnsPostCtocUploadInfo* ctocuploadinfo);

  // optional uint32 WithUserListCount = 3;
  bool has_withuserlistcount() const;
  void clear_withuserlistcount();
  static const int kWithUserListCountFieldNumber = 3;
  ::google::protobuf::uint32 withuserlistcount() const;
  void set_withuserlistcount(::google::protobuf::uint32 value);

  // optional uint32 Privacy = 5;
  bool has_privacy() const;
  void clear_privacy();
  static const int kPrivacyFieldNumber = 5;
  ::google::protobuf::uint32 privacy() const;
  void set_privacy(::google::protobuf::uint32 value);

  // optional uint32 SyncFlag = 6;
  bool has_syncflag() const;
  void clear_syncflag();
  static const int kSyncFlagFieldNumber = 6;
  ::google::protobuf::uint32 syncflag() const;
  void set_syncflag(::google::protobuf::uint32 value);

  // optional uint32 PostBGImgType = 8;
  bool has_postbgimgtype() const;
  void clear_postbgimgtype();
  static const int kPostBGImgTypeFieldNumber = 8;
  ::google::protobuf::uint32 postbgimgtype() const;
  void set_postbgimgtype(::google::protobuf::uint32 value);

  // optional uint32 GroupCount = 9;
  bool has_groupcount() const;
  void clear_groupcount();
  static const int kGroupCountFieldNumber = 9;
  ::google::protobuf::uint32 groupcount() const;
  void set_groupcount(::google::protobuf::uint32 value);

  // optional uint32 ObjectSource = 11;
  bool has_objectsource() const;
  void clear_objectsource();
  static const int kObjectSourceFieldNumber = 11;
  ::google::protobuf::uint32 objectsource() const;
  void set_objectsource(::google::protobuf::uint32 value);

  // optional uint64 ReferId = 12;
  bool has_referid() const;
  void clear_referid();
  static const int kReferIdFieldNumber = 12;
  ::google::protobuf::uint64 referid() const;
  void set_referid(::google::protobuf::uint64 value);

  // optional uint32 BlackListCount = 13;
  bool has_blacklistcount() const;
  void clear_blacklistcount();
  static const int kBlackListCountFieldNumber = 13;
  ::google::protobuf::uint32 blacklistcount() const;
  void set_blacklistcount(::google::protobuf::uint32 value);

  // optional uint32 GroupUserCount = 16;
  bool has_groupusercount() const;
  void clear_groupusercount();
  static const int kGroupUserCountFieldNumber = 16;
  ::google::protobuf::uint32 groupusercount() const;
  void set_groupusercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsPostRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_objectdesc();
  void clear_has_objectdesc();
  void set_has_withuserlistcount();
  void clear_has_withuserlistcount();
  void set_has_privacy();
  void clear_has_privacy();
  void set_has_syncflag();
  void clear_has_syncflag();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_postbgimgtype();
  void clear_has_postbgimgtype();
  void set_has_groupcount();
  void clear_has_groupcount();
  void set_has_objectsource();
  void clear_has_objectsource();
  void set_has_referid();
  void clear_has_referid();
  void set_has_blacklistcount();
  void clear_has_blacklistcount();
  void set_has_twitterinfo();
  void clear_has_twitterinfo();
  void set_has_groupusercount();
  void clear_has_groupusercount();
  void set_has_ctocuploadinfo();
  void clear_has_ctocuploadinfo();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > withuserlist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsGroup > groupids_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > blacklist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > groupuser_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* objectdesc_;
  ::micromsg::TwitterInfo* twitterinfo_;
  ::micromsg::SnsPostCtocUploadInfo* ctocuploadinfo_;
  ::google::protobuf::uint32 withuserlistcount_;
  ::google::protobuf::uint32 privacy_;
  ::google::protobuf::uint32 syncflag_;
  ::google::protobuf::uint32 postbgimgtype_;
  ::google::protobuf::uint32 groupcount_;
  ::google::protobuf::uint32 objectsource_;
  ::google::protobuf::uint64 referid_;
  ::google::protobuf::uint32 blacklistcount_;
  ::google::protobuf::uint32 groupusercount_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsPostResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsPostResponse) */ {
 public:
  SnsPostResponse();
  virtual ~SnsPostResponse();

  SnsPostResponse(const SnsPostResponse& from);

  inline SnsPostResponse& operator=(const SnsPostResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsPostResponse& default_instance();

  static inline const SnsPostResponse* internal_default_instance() {
    return reinterpret_cast<const SnsPostResponse*>(
               &_SnsPostResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SnsPostResponse* other);

  // implements Message ----------------------------------------------

  inline SnsPostResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsPostResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsPostResponse& from);
  void MergeFrom(const SnsPostResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsPostResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SnsObject SnsObject = 2;
  bool has_snsobject() const;
  void clear_snsobject();
  static const int kSnsObjectFieldNumber = 2;
  const ::micromsg::SnsObject& snsobject() const;
  ::micromsg::SnsObject* mutable_snsobject();
  ::micromsg::SnsObject* release_snsobject();
  void set_allocated_snsobject(::micromsg::SnsObject* snsobject);

  // @@protoc_insertion_point(class_scope:micromsg.SnsPostResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_snsobject();
  void clear_has_snsobject();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SnsObject* snsobject_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsObjectDetailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsObjectDetailRequest) */ {
 public:
  SnsObjectDetailRequest();
  virtual ~SnsObjectDetailRequest();

  SnsObjectDetailRequest(const SnsObjectDetailRequest& from);

  inline SnsObjectDetailRequest& operator=(const SnsObjectDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsObjectDetailRequest& default_instance();

  static inline const SnsObjectDetailRequest* internal_default_instance() {
    return reinterpret_cast<const SnsObjectDetailRequest*>(
               &_SnsObjectDetailRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SnsObjectDetailRequest* other);

  // implements Message ----------------------------------------------

  inline SnsObjectDetailRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsObjectDetailRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsObjectDetailRequest& from);
  void MergeFrom(const SnsObjectDetailRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsObjectDetailRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint64 Id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 GroupDetail = 3;
  bool has_groupdetail() const;
  void clear_groupdetail();
  static const int kGroupDetailFieldNumber = 3;
  ::google::protobuf::uint32 groupdetail() const;
  void set_groupdetail(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsObjectDetailRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_id();
  void clear_has_id();
  void set_has_groupdetail();
  void clear_has_groupdetail();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 groupdetail_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsObjectDetailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsObjectDetailResponse) */ {
 public:
  SnsObjectDetailResponse();
  virtual ~SnsObjectDetailResponse();

  SnsObjectDetailResponse(const SnsObjectDetailResponse& from);

  inline SnsObjectDetailResponse& operator=(const SnsObjectDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsObjectDetailResponse& default_instance();

  static inline const SnsObjectDetailResponse* internal_default_instance() {
    return reinterpret_cast<const SnsObjectDetailResponse*>(
               &_SnsObjectDetailResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(SnsObjectDetailResponse* other);

  // implements Message ----------------------------------------------

  inline SnsObjectDetailResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsObjectDetailResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsObjectDetailResponse& from);
  void MergeFrom(const SnsObjectDetailResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsObjectDetailResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SnsObject Object = 2;
  bool has_object() const;
  void clear_object();
  static const int kObjectFieldNumber = 2;
  const ::micromsg::SnsObject& object() const;
  ::micromsg::SnsObject* mutable_object();
  ::micromsg::SnsObject* release_object();
  void set_allocated_object(::micromsg::SnsObject* object);

  // @@protoc_insertion_point(class_scope:micromsg.SnsObjectDetailResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_object();
  void clear_has_object();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SnsObject* object_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsADObjectDetailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsADObjectDetailRequest) */ {
 public:
  SnsADObjectDetailRequest();
  virtual ~SnsADObjectDetailRequest();

  SnsADObjectDetailRequest(const SnsADObjectDetailRequest& from);

  inline SnsADObjectDetailRequest& operator=(const SnsADObjectDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsADObjectDetailRequest& default_instance();

  static inline const SnsADObjectDetailRequest* internal_default_instance() {
    return reinterpret_cast<const SnsADObjectDetailRequest*>(
               &_SnsADObjectDetailRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(SnsADObjectDetailRequest* other);

  // implements Message ----------------------------------------------

  inline SnsADObjectDetailRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsADObjectDetailRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsADObjectDetailRequest& from);
  void MergeFrom(const SnsADObjectDetailRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsADObjectDetailRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional .micromsg.SKBuiltinBuffer_t Session = 4;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& session() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_session();
  ::micromsg::SKBuiltinBuffer_t* release_session();
  void set_allocated_session(::micromsg::SKBuiltinBuffer_t* session);

  // required uint64 Id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 Scene = 3;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 3;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsADObjectDetailRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_id();
  void clear_has_id();
  void set_has_scene();
  void clear_has_scene();
  void set_has_session();
  void clear_has_session();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* session_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsADObjectDetailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsADObjectDetailResponse) */ {
 public:
  SnsADObjectDetailResponse();
  virtual ~SnsADObjectDetailResponse();

  SnsADObjectDetailResponse(const SnsADObjectDetailResponse& from);

  inline SnsADObjectDetailResponse& operator=(const SnsADObjectDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsADObjectDetailResponse& default_instance();

  static inline const SnsADObjectDetailResponse* internal_default_instance() {
    return reinterpret_cast<const SnsADObjectDetailResponse*>(
               &_SnsADObjectDetailResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SnsADObjectDetailResponse* other);

  // implements Message ----------------------------------------------

  inline SnsADObjectDetailResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsADObjectDetailResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsADObjectDetailResponse& from);
  void MergeFrom(const SnsADObjectDetailResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsADObjectDetailResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SnsADObject Object = 2;
  bool has_object() const;
  void clear_object();
  static const int kObjectFieldNumber = 2;
  const ::micromsg::SnsADObject& object() const;
  ::micromsg::SnsADObject* mutable_object();
  ::micromsg::SnsADObject* release_object();
  void set_allocated_object(::micromsg::SnsADObject* object);

  // optional .micromsg.SKBuiltinBuffer_t Session = 3;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& session() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_session();
  ::micromsg::SKBuiltinBuffer_t* release_session();
  void set_allocated_session(::micromsg::SKBuiltinBuffer_t* session);

  // @@protoc_insertion_point(class_scope:micromsg.SnsADObjectDetailResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_object();
  void clear_has_object();
  void set_has_session();
  void clear_has_session();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SnsADObject* object_;
  ::micromsg::SKBuiltinBuffer_t* session_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsServerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsServerConfig) */ {
 public:
  SnsServerConfig();
  virtual ~SnsServerConfig();

  SnsServerConfig(const SnsServerConfig& from);

  inline SnsServerConfig& operator=(const SnsServerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsServerConfig& default_instance();

  static inline const SnsServerConfig* internal_default_instance() {
    return reinterpret_cast<const SnsServerConfig*>(
               &_SnsServerConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(SnsServerConfig* other);

  // implements Message ----------------------------------------------

  inline SnsServerConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsServerConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsServerConfig& from);
  void MergeFrom(const SnsServerConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsServerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 PostMentionLimit = 1;
  bool has_postmentionlimit() const;
  void clear_postmentionlimit();
  static const int kPostMentionLimitFieldNumber = 1;
  ::google::protobuf::int32 postmentionlimit() const;
  void set_postmentionlimit(::google::protobuf::int32 value);

  // optional int32 CopyAndPasteWordLimit = 2;
  bool has_copyandpastewordlimit() const;
  void clear_copyandpastewordlimit();
  static const int kCopyAndPasteWordLimitFieldNumber = 2;
  ::google::protobuf::int32 copyandpastewordlimit() const;
  void set_copyandpastewordlimit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsServerConfig)
 private:
  void set_has_postmentionlimit();
  void clear_has_postmentionlimit();
  void set_has_copyandpastewordlimit();
  void clear_has_copyandpastewordlimit();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 postmentionlimit_;
  ::google::protobuf::int32 copyandpastewordlimit_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsTimeLineRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsTimeLineRequest) */ {
 public:
  SnsTimeLineRequest();
  virtual ~SnsTimeLineRequest();

  SnsTimeLineRequest(const SnsTimeLineRequest& from);

  inline SnsTimeLineRequest& operator=(const SnsTimeLineRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsTimeLineRequest& default_instance();

  static inline const SnsTimeLineRequest* internal_default_instance() {
    return reinterpret_cast<const SnsTimeLineRequest*>(
               &_SnsTimeLineRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SnsTimeLineRequest* other);

  // implements Message ----------------------------------------------

  inline SnsTimeLineRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsTimeLineRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsTimeLineRequest& from);
  void MergeFrom(const SnsTimeLineRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsTimeLineRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FirstPageMd5 = 2;
  bool has_firstpagemd5() const;
  void clear_firstpagemd5();
  static const int kFirstPageMd5FieldNumber = 2;
  const ::std::string& firstpagemd5() const;
  void set_firstpagemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_firstpagemd5(::std::string&& value);
  #endif
  void set_firstpagemd5(const char* value);
  void set_firstpagemd5(const char* value, size_t size);
  ::std::string* mutable_firstpagemd5();
  ::std::string* release_firstpagemd5();
  void set_allocated_firstpagemd5(::std::string* firstpagemd5);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional .micromsg.SKBuiltinBuffer_t Session = 7;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 7;
  const ::micromsg::SKBuiltinBuffer_t& session() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_session();
  ::micromsg::SKBuiltinBuffer_t* release_session();
  void set_allocated_session(::micromsg::SKBuiltinBuffer_t* session);

  // required uint64 MaxId = 3;
  bool has_maxid() const;
  void clear_maxid();
  static const int kMaxIdFieldNumber = 3;
  ::google::protobuf::uint64 maxid() const;
  void set_maxid(::google::protobuf::uint64 value);

  // optional uint64 MinFilterId = 4;
  bool has_minfilterid() const;
  void clear_minfilterid();
  static const int kMinFilterIdFieldNumber = 4;
  ::google::protobuf::uint64 minfilterid() const;
  void set_minfilterid(::google::protobuf::uint64 value);

  // optional uint64 ClientLatestId = 6;
  bool has_clientlatestid() const;
  void clear_clientlatestid();
  static const int kClientLatestIdFieldNumber = 6;
  ::google::protobuf::uint64 clientlatestid() const;
  void set_clientlatestid(::google::protobuf::uint64 value);

  // optional uint32 LastRequestTime = 5;
  bool has_lastrequesttime() const;
  void clear_lastrequesttime();
  static const int kLastRequestTimeFieldNumber = 5;
  ::google::protobuf::uint32 lastrequesttime() const;
  void set_lastrequesttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsTimeLineRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_firstpagemd5();
  void clear_has_firstpagemd5();
  void set_has_maxid();
  void clear_has_maxid();
  void set_has_minfilterid();
  void clear_has_minfilterid();
  void set_has_lastrequesttime();
  void clear_has_lastrequesttime();
  void set_has_clientlatestid();
  void clear_has_clientlatestid();
  void set_has_session();
  void clear_has_session();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr firstpagemd5_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* session_;
  ::google::protobuf::uint64 maxid_;
  ::google::protobuf::uint64 minfilterid_;
  ::google::protobuf::uint64 clientlatestid_;
  ::google::protobuf::uint32 lastrequesttime_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsTimeLineResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsTimeLineResponse) */ {
 public:
  SnsTimeLineResponse();
  virtual ~SnsTimeLineResponse();

  SnsTimeLineResponse(const SnsTimeLineResponse& from);

  inline SnsTimeLineResponse& operator=(const SnsTimeLineResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsTimeLineResponse& default_instance();

  static inline const SnsTimeLineResponse* internal_default_instance() {
    return reinterpret_cast<const SnsTimeLineResponse*>(
               &_SnsTimeLineResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(SnsTimeLineResponse* other);

  // implements Message ----------------------------------------------

  inline SnsTimeLineResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsTimeLineResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsTimeLineResponse& from);
  void MergeFrom(const SnsTimeLineResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsTimeLineResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SnsObject ObjectList = 4;
  int objectlist_size() const;
  void clear_objectlist();
  static const int kObjectListFieldNumber = 4;
  const ::micromsg::SnsObject& objectlist(int index) const;
  ::micromsg::SnsObject* mutable_objectlist(int index);
  ::micromsg::SnsObject* add_objectlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >*
      mutable_objectlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >&
      objectlist() const;

  // repeated .micromsg.AdvertiseObject AdvertiseList = 10;
  int advertiselist_size() const;
  void clear_advertiselist();
  static const int kAdvertiseListFieldNumber = 10;
  const ::micromsg::AdvertiseObject& advertiselist(int index) const;
  ::micromsg::AdvertiseObject* mutable_advertiselist(int index);
  ::micromsg::AdvertiseObject* add_advertiselist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::AdvertiseObject >*
      mutable_advertiselist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::AdvertiseObject >&
      advertiselist() const;

  // optional string FirstPageMd5 = 2;
  bool has_firstpagemd5() const;
  void clear_firstpagemd5();
  static const int kFirstPageMd5FieldNumber = 2;
  const ::std::string& firstpagemd5() const;
  void set_firstpagemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_firstpagemd5(::std::string&& value);
  #endif
  void set_firstpagemd5(const char* value);
  void set_firstpagemd5(const char* value, size_t size);
  ::std::string* mutable_firstpagemd5();
  ::std::string* release_firstpagemd5();
  void set_allocated_firstpagemd5(::std::string* firstpagemd5);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional .micromsg.SnsServerConfig ServerConfig = 8;
  bool has_serverconfig() const;
  void clear_serverconfig();
  static const int kServerConfigFieldNumber = 8;
  const ::micromsg::SnsServerConfig& serverconfig() const;
  ::micromsg::SnsServerConfig* mutable_serverconfig();
  ::micromsg::SnsServerConfig* release_serverconfig();
  void set_allocated_serverconfig(::micromsg::SnsServerConfig* serverconfig);

  // optional .micromsg.SKBuiltinBuffer_t Session = 11;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 11;
  const ::micromsg::SKBuiltinBuffer_t& session() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_session();
  ::micromsg::SKBuiltinBuffer_t* release_session();
  void set_allocated_session(::micromsg::SKBuiltinBuffer_t* session);

  // required uint32 ObjectCount = 3;
  bool has_objectcount() const;
  void clear_objectcount();
  static const int kObjectCountFieldNumber = 3;
  ::google::protobuf::uint32 objectcount() const;
  void set_objectcount(::google::protobuf::uint32 value);

  // optional uint32 NewRequestTime = 5;
  bool has_newrequesttime() const;
  void clear_newrequesttime();
  static const int kNewRequestTimeFieldNumber = 5;
  ::google::protobuf::uint32 newrequesttime() const;
  void set_newrequesttime(::google::protobuf::uint32 value);

  // optional uint32 ObjectCountForSameMd5 = 6;
  bool has_objectcountforsamemd5() const;
  void clear_objectcountforsamemd5();
  static const int kObjectCountForSameMd5FieldNumber = 6;
  ::google::protobuf::uint32 objectcountforsamemd5() const;
  void set_objectcountforsamemd5(::google::protobuf::uint32 value);

  // optional uint32 ControlFlag = 7;
  bool has_controlflag() const;
  void clear_controlflag();
  static const int kControlFlagFieldNumber = 7;
  ::google::protobuf::uint32 controlflag() const;
  void set_controlflag(::google::protobuf::uint32 value);

  // optional uint32 AdvertiseCount = 9;
  bool has_advertisecount() const;
  void clear_advertisecount();
  static const int kAdvertiseCountFieldNumber = 9;
  ::google::protobuf::uint32 advertisecount() const;
  void set_advertisecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsTimeLineResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_firstpagemd5();
  void clear_has_firstpagemd5();
  void set_has_objectcount();
  void clear_has_objectcount();
  void set_has_newrequesttime();
  void clear_has_newrequesttime();
  void set_has_objectcountforsamemd5();
  void clear_has_objectcountforsamemd5();
  void set_has_controlflag();
  void clear_has_controlflag();
  void set_has_serverconfig();
  void clear_has_serverconfig();
  void set_has_advertisecount();
  void clear_has_advertisecount();
  void set_has_session();
  void clear_has_session();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject > objectlist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::AdvertiseObject > advertiselist_;
  ::google::protobuf::internal::ArenaStringPtr firstpagemd5_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SnsServerConfig* serverconfig_;
  ::micromsg::SKBuiltinBuffer_t* session_;
  ::google::protobuf::uint32 objectcount_;
  ::google::protobuf::uint32 newrequesttime_;
  ::google::protobuf::uint32 objectcountforsamemd5_;
  ::google::protobuf::uint32 controlflag_;
  ::google::protobuf::uint32 advertisecount_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsTimeLineWithTypeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsTimeLineWithTypeRequest) */ {
 public:
  SnsTimeLineWithTypeRequest();
  virtual ~SnsTimeLineWithTypeRequest();

  SnsTimeLineWithTypeRequest(const SnsTimeLineWithTypeRequest& from);

  inline SnsTimeLineWithTypeRequest& operator=(const SnsTimeLineWithTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsTimeLineWithTypeRequest& default_instance();

  static inline const SnsTimeLineWithTypeRequest* internal_default_instance() {
    return reinterpret_cast<const SnsTimeLineWithTypeRequest*>(
               &_SnsTimeLineWithTypeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(SnsTimeLineWithTypeRequest* other);

  // implements Message ----------------------------------------------

  inline SnsTimeLineWithTypeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsTimeLineWithTypeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsTimeLineWithTypeRequest& from);
  void MergeFrom(const SnsTimeLineWithTypeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsTimeLineWithTypeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional uint64 SelectType = 2;
  bool has_selecttype() const;
  void clear_selecttype();
  static const int kSelectTypeFieldNumber = 2;
  ::google::protobuf::uint64 selecttype() const;
  void set_selecttype(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsTimeLineWithTypeRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_selecttype();
  void clear_has_selecttype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint64 selecttype_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsTimeLineWithTypeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsTimeLineWithTypeResponse) */ {
 public:
  SnsTimeLineWithTypeResponse();
  virtual ~SnsTimeLineWithTypeResponse();

  SnsTimeLineWithTypeResponse(const SnsTimeLineWithTypeResponse& from);

  inline SnsTimeLineWithTypeResponse& operator=(const SnsTimeLineWithTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsTimeLineWithTypeResponse& default_instance();

  static inline const SnsTimeLineWithTypeResponse* internal_default_instance() {
    return reinterpret_cast<const SnsTimeLineWithTypeResponse*>(
               &_SnsTimeLineWithTypeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(SnsTimeLineWithTypeResponse* other);

  // implements Message ----------------------------------------------

  inline SnsTimeLineWithTypeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsTimeLineWithTypeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsTimeLineWithTypeResponse& from);
  void MergeFrom(const SnsTimeLineWithTypeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsTimeLineWithTypeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SnsObject ObjectList = 3;
  int objectlist_size() const;
  void clear_objectlist();
  static const int kObjectListFieldNumber = 3;
  const ::micromsg::SnsObject& objectlist(int index) const;
  ::micromsg::SnsObject* mutable_objectlist(int index);
  ::micromsg::SnsObject* add_objectlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >*
      mutable_objectlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >&
      objectlist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 ObjectCount = 2;
  bool has_objectcount() const;
  void clear_objectcount();
  static const int kObjectCountFieldNumber = 2;
  ::google::protobuf::uint32 objectcount() const;
  void set_objectcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsTimeLineWithTypeResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_objectcount();
  void clear_has_objectcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject > objectlist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 objectcount_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsUserPageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsUserPageRequest) */ {
 public:
  SnsUserPageRequest();
  virtual ~SnsUserPageRequest();

  SnsUserPageRequest(const SnsUserPageRequest& from);

  inline SnsUserPageRequest& operator=(const SnsUserPageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsUserPageRequest& default_instance();

  static inline const SnsUserPageRequest* internal_default_instance() {
    return reinterpret_cast<const SnsUserPageRequest*>(
               &_SnsUserPageRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(SnsUserPageRequest* other);

  // implements Message ----------------------------------------------

  inline SnsUserPageRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsUserPageRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsUserPageRequest& from);
  void MergeFrom(const SnsUserPageRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsUserPageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FirstPageMd5 = 2;
  bool has_firstpagemd5() const;
  void clear_firstpagemd5();
  static const int kFirstPageMd5FieldNumber = 2;
  const ::std::string& firstpagemd5() const;
  void set_firstpagemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_firstpagemd5(::std::string&& value);
  #endif
  void set_firstpagemd5(const char* value);
  void set_firstpagemd5(const char* value, size_t size);
  ::std::string* mutable_firstpagemd5();
  ::std::string* release_firstpagemd5();
  void set_allocated_firstpagemd5(::std::string* firstpagemd5);

  // optional string Username = 3;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint64 MaxId = 4;
  bool has_maxid() const;
  void clear_maxid();
  static const int kMaxIdFieldNumber = 4;
  ::google::protobuf::uint64 maxid() const;
  void set_maxid(::google::protobuf::uint64 value);

  // optional uint64 MinFilterId = 6;
  bool has_minfilterid() const;
  void clear_minfilterid();
  static const int kMinFilterIdFieldNumber = 6;
  ::google::protobuf::uint64 minfilterid() const;
  void set_minfilterid(::google::protobuf::uint64 value);

  // optional uint32 Source = 5;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 5;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // optional uint32 LastRequestTime = 7;
  bool has_lastrequesttime() const;
  void clear_lastrequesttime();
  static const int kLastRequestTimeFieldNumber = 7;
  ::google::protobuf::uint32 lastrequesttime() const;
  void set_lastrequesttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsUserPageRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_firstpagemd5();
  void clear_has_firstpagemd5();
  void set_has_username();
  void clear_has_username();
  void set_has_maxid();
  void clear_has_maxid();
  void set_has_source();
  void clear_has_source();
  void set_has_minfilterid();
  void clear_has_minfilterid();
  void set_has_lastrequesttime();
  void clear_has_lastrequesttime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr firstpagemd5_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint64 maxid_;
  ::google::protobuf::uint64 minfilterid_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 lastrequesttime_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsUserPageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsUserPageResponse) */ {
 public:
  SnsUserPageResponse();
  virtual ~SnsUserPageResponse();

  SnsUserPageResponse(const SnsUserPageResponse& from);

  inline SnsUserPageResponse& operator=(const SnsUserPageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsUserPageResponse& default_instance();

  static inline const SnsUserPageResponse* internal_default_instance() {
    return reinterpret_cast<const SnsUserPageResponse*>(
               &_SnsUserPageResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(SnsUserPageResponse* other);

  // implements Message ----------------------------------------------

  inline SnsUserPageResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsUserPageResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsUserPageResponse& from);
  void MergeFrom(const SnsUserPageResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsUserPageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SnsObject ObjectList = 4;
  int objectlist_size() const;
  void clear_objectlist();
  static const int kObjectListFieldNumber = 4;
  const ::micromsg::SnsObject& objectlist(int index) const;
  ::micromsg::SnsObject* mutable_objectlist(int index);
  ::micromsg::SnsObject* add_objectlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >*
      mutable_objectlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >&
      objectlist() const;

  // optional string FirstPageMd5 = 2;
  bool has_firstpagemd5() const;
  void clear_firstpagemd5();
  static const int kFirstPageMd5FieldNumber = 2;
  const ::std::string& firstpagemd5() const;
  void set_firstpagemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_firstpagemd5(::std::string&& value);
  #endif
  void set_firstpagemd5(const char* value);
  void set_firstpagemd5(const char* value, size_t size);
  ::std::string* mutable_firstpagemd5();
  ::std::string* release_firstpagemd5();
  void set_allocated_firstpagemd5(::std::string* firstpagemd5);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional .micromsg.SnsUserInfo SnsUserInfo = 6;
  bool has_snsuserinfo() const;
  void clear_snsuserinfo();
  static const int kSnsUserInfoFieldNumber = 6;
  const ::micromsg::SnsUserInfo& snsuserinfo() const;
  ::micromsg::SnsUserInfo* mutable_snsuserinfo();
  ::micromsg::SnsUserInfo* release_snsuserinfo();
  void set_allocated_snsuserinfo(::micromsg::SnsUserInfo* snsuserinfo);

  // optional .micromsg.SnsServerConfig ServerConfig = 9;
  bool has_serverconfig() const;
  void clear_serverconfig();
  static const int kServerConfigFieldNumber = 9;
  const ::micromsg::SnsServerConfig& serverconfig() const;
  ::micromsg::SnsServerConfig* mutable_serverconfig();
  ::micromsg::SnsServerConfig* release_serverconfig();
  void set_allocated_serverconfig(::micromsg::SnsServerConfig* serverconfig);

  // required uint32 ObjectCount = 3;
  bool has_objectcount() const;
  void clear_objectcount();
  static const int kObjectCountFieldNumber = 3;
  ::google::protobuf::uint32 objectcount() const;
  void set_objectcount(::google::protobuf::uint32 value);

  // required uint32 ObjectTotalCount = 5;
  bool has_objecttotalcount() const;
  void clear_objecttotalcount();
  static const int kObjectTotalCountFieldNumber = 5;
  ::google::protobuf::uint32 objecttotalcount() const;
  void set_objecttotalcount(::google::protobuf::uint32 value);

  // optional uint32 NewRequestTime = 7;
  bool has_newrequesttime() const;
  void clear_newrequesttime();
  static const int kNewRequestTimeFieldNumber = 7;
  ::google::protobuf::uint32 newrequesttime() const;
  void set_newrequesttime(::google::protobuf::uint32 value);

  // optional uint32 ObjectCountForSameMd5 = 8;
  bool has_objectcountforsamemd5() const;
  void clear_objectcountforsamemd5();
  static const int kObjectCountForSameMd5FieldNumber = 8;
  ::google::protobuf::uint32 objectcountforsamemd5() const;
  void set_objectcountforsamemd5(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsUserPageResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_firstpagemd5();
  void clear_has_firstpagemd5();
  void set_has_objectcount();
  void clear_has_objectcount();
  void set_has_objecttotalcount();
  void clear_has_objecttotalcount();
  void set_has_snsuserinfo();
  void clear_has_snsuserinfo();
  void set_has_newrequesttime();
  void clear_has_newrequesttime();
  void set_has_objectcountforsamemd5();
  void clear_has_objectcountforsamemd5();
  void set_has_serverconfig();
  void clear_has_serverconfig();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject > objectlist_;
  ::google::protobuf::internal::ArenaStringPtr firstpagemd5_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SnsUserInfo* snsuserinfo_;
  ::micromsg::SnsServerConfig* serverconfig_;
  ::google::protobuf::uint32 objectcount_;
  ::google::protobuf::uint32 objecttotalcount_;
  ::google::protobuf::uint32 newrequesttime_;
  ::google::protobuf::uint32 objectcountforsamemd5_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsAction) */ {
 public:
  SnsAction();
  virtual ~SnsAction();

  SnsAction(const SnsAction& from);

  inline SnsAction& operator=(const SnsAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsAction& default_instance();

  static inline const SnsAction* internal_default_instance() {
    return reinterpret_cast<const SnsAction*>(
               &_SnsAction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(SnsAction* other);

  // implements Message ----------------------------------------------

  inline SnsAction* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsAction& from);
  void MergeFrom(const SnsAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FromUsername = 1;
  bool has_fromusername() const;
  void clear_fromusername();
  static const int kFromUsernameFieldNumber = 1;
  const ::std::string& fromusername() const;
  void set_fromusername(const ::std::string& value);
  #if LANG_CXX11
  void set_fromusername(::std::string&& value);
  #endif
  void set_fromusername(const char* value);
  void set_fromusername(const char* value, size_t size);
  ::std::string* mutable_fromusername();
  ::std::string* release_fromusername();
  void set_allocated_fromusername(::std::string* fromusername);

  // optional string ToUsername = 2;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUsernameFieldNumber = 2;
  const ::std::string& tousername() const;
  void set_tousername(const ::std::string& value);
  #if LANG_CXX11
  void set_tousername(::std::string&& value);
  #endif
  void set_tousername(const char* value);
  void set_tousername(const char* value, size_t size);
  ::std::string* mutable_tousername();
  ::std::string* release_tousername();
  void set_allocated_tousername(::std::string* tousername);

  // optional string FromNickname = 3;
  bool has_fromnickname() const;
  void clear_fromnickname();
  static const int kFromNicknameFieldNumber = 3;
  const ::std::string& fromnickname() const;
  void set_fromnickname(const ::std::string& value);
  #if LANG_CXX11
  void set_fromnickname(::std::string&& value);
  #endif
  void set_fromnickname(const char* value);
  void set_fromnickname(const char* value, size_t size);
  ::std::string* mutable_fromnickname();
  ::std::string* release_fromnickname();
  void set_allocated_fromnickname(::std::string* fromnickname);

  // optional string ToNickname = 4;
  bool has_tonickname() const;
  void clear_tonickname();
  static const int kToNicknameFieldNumber = 4;
  const ::std::string& tonickname() const;
  void set_tonickname(const ::std::string& value);
  #if LANG_CXX11
  void set_tonickname(::std::string&& value);
  #endif
  void set_tonickname(const char* value);
  void set_tonickname(const char* value, size_t size);
  ::std::string* mutable_tonickname();
  ::std::string* release_tonickname();
  void set_allocated_tonickname(::std::string* tonickname);

  // optional string Content = 8;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 8;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required uint32 Type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 Source = 6;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 6;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // optional uint32 CreateTime = 7;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 7;
  ::google::protobuf::uint32 createtime() const;
  void set_createtime(::google::protobuf::uint32 value);

  // optional int32 ReplyCommentId = 9;
  bool has_replycommentid() const;
  void clear_replycommentid();
  static const int kReplyCommentIdFieldNumber = 9;
  ::google::protobuf::int32 replycommentid() const;
  void set_replycommentid(::google::protobuf::int32 value);

  // optional int32 CommentId = 10;
  bool has_commentid() const;
  void clear_commentid();
  static const int kCommentIdFieldNumber = 10;
  ::google::protobuf::int32 commentid() const;
  void set_commentid(::google::protobuf::int32 value);

  // optional uint32 IsNotRichText = 11;
  bool has_isnotrichtext() const;
  void clear_isnotrichtext();
  static const int kIsNotRichTextFieldNumber = 11;
  ::google::protobuf::uint32 isnotrichtext() const;
  void set_isnotrichtext(::google::protobuf::uint32 value);

  // optional uint64 ReplyCommentId2 = 12;
  bool has_replycommentid2() const;
  void clear_replycommentid2();
  static const int kReplyCommentId2FieldNumber = 12;
  ::google::protobuf::uint64 replycommentid2() const;
  void set_replycommentid2(::google::protobuf::uint64 value);

  // optional uint64 CommentId2 = 13;
  bool has_commentid2() const;
  void clear_commentid2();
  static const int kCommentId2FieldNumber = 13;
  ::google::protobuf::uint64 commentid2() const;
  void set_commentid2(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsAction)
 private:
  void set_has_fromusername();
  void clear_has_fromusername();
  void set_has_tousername();
  void clear_has_tousername();
  void set_has_fromnickname();
  void clear_has_fromnickname();
  void set_has_tonickname();
  void clear_has_tonickname();
  void set_has_type();
  void clear_has_type();
  void set_has_source();
  void clear_has_source();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_content();
  void clear_has_content();
  void set_has_replycommentid();
  void clear_has_replycommentid();
  void set_has_commentid();
  void clear_has_commentid();
  void set_has_isnotrichtext();
  void clear_has_isnotrichtext();
  void set_has_replycommentid2();
  void clear_has_replycommentid2();
  void set_has_commentid2();
  void clear_has_commentid2();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fromusername_;
  ::google::protobuf::internal::ArenaStringPtr tousername_;
  ::google::protobuf::internal::ArenaStringPtr fromnickname_;
  ::google::protobuf::internal::ArenaStringPtr tonickname_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::int32 replycommentid_;
  ::google::protobuf::int32 commentid_;
  ::google::protobuf::uint32 isnotrichtext_;
  ::google::protobuf::uint64 replycommentid2_;
  ::google::protobuf::uint64 commentid2_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsActionGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsActionGroup) */ {
 public:
  SnsActionGroup();
  virtual ~SnsActionGroup();

  SnsActionGroup(const SnsActionGroup& from);

  inline SnsActionGroup& operator=(const SnsActionGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsActionGroup& default_instance();

  static inline const SnsActionGroup* internal_default_instance() {
    return reinterpret_cast<const SnsActionGroup*>(
               &_SnsActionGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(SnsActionGroup* other);

  // implements Message ----------------------------------------------

  inline SnsActionGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsActionGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsActionGroup& from);
  void MergeFrom(const SnsActionGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsActionGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ClientId = 5;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 5;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const char* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // required .micromsg.SnsAction CurrentAction = 3;
  bool has_currentaction() const;
  void clear_currentaction();
  static const int kCurrentActionFieldNumber = 3;
  const ::micromsg::SnsAction& currentaction() const;
  ::micromsg::SnsAction* mutable_currentaction();
  ::micromsg::SnsAction* release_currentaction();
  void set_allocated_currentaction(::micromsg::SnsAction* currentaction);

  // optional .micromsg.SnsAction ReferAction = 4;
  bool has_referaction() const;
  void clear_referaction();
  static const int kReferActionFieldNumber = 4;
  const ::micromsg::SnsAction& referaction() const;
  ::micromsg::SnsAction* mutable_referaction();
  ::micromsg::SnsAction* release_referaction();
  void set_allocated_referaction(::micromsg::SnsAction* referaction);

  // required uint64 Id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint64 ParentId = 2;
  bool has_parentid() const;
  void clear_parentid();
  static const int kParentIdFieldNumber = 2;
  ::google::protobuf::uint64 parentid() const;
  void set_parentid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsActionGroup)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_parentid();
  void clear_has_parentid();
  void set_has_currentaction();
  void clear_has_currentaction();
  void set_has_referaction();
  void clear_has_referaction();
  void set_has_clientid();
  void clear_has_clientid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::micromsg::SnsAction* currentaction_;
  ::micromsg::SnsAction* referaction_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 parentid_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsCommentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsCommentRequest) */ {
 public:
  SnsCommentRequest();
  virtual ~SnsCommentRequest();

  SnsCommentRequest(const SnsCommentRequest& from);

  inline SnsCommentRequest& operator=(const SnsCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsCommentRequest& default_instance();

  static inline const SnsCommentRequest* internal_default_instance() {
    return reinterpret_cast<const SnsCommentRequest*>(
               &_SnsCommentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(SnsCommentRequest* other);

  // implements Message ----------------------------------------------

  inline SnsCommentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsCommentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsCommentRequest& from);
  void MergeFrom(const SnsCommentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsCommentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ClientId = 3;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 3;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const char* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SnsActionGroup Action = 2;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 2;
  const ::micromsg::SnsActionGroup& action() const;
  ::micromsg::SnsActionGroup* mutable_action();
  ::micromsg::SnsActionGroup* release_action();
  void set_allocated_action(::micromsg::SnsActionGroup* action);

  // @@protoc_insertion_point(class_scope:micromsg.SnsCommentRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_action();
  void clear_has_action();
  void set_has_clientid();
  void clear_has_clientid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SnsActionGroup* action_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsCommentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsCommentResponse) */ {
 public:
  SnsCommentResponse();
  virtual ~SnsCommentResponse();

  SnsCommentResponse(const SnsCommentResponse& from);

  inline SnsCommentResponse& operator=(const SnsCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsCommentResponse& default_instance();

  static inline const SnsCommentResponse* internal_default_instance() {
    return reinterpret_cast<const SnsCommentResponse*>(
               &_SnsCommentResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(SnsCommentResponse* other);

  // implements Message ----------------------------------------------

  inline SnsCommentResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsCommentResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsCommentResponse& from);
  void MergeFrom(const SnsCommentResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsCommentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SnsObject SnsObject = 2;
  bool has_snsobject() const;
  void clear_snsobject();
  static const int kSnsObjectFieldNumber = 2;
  const ::micromsg::SnsObject& snsobject() const;
  ::micromsg::SnsObject* mutable_snsobject();
  ::micromsg::SnsObject* release_snsobject();
  void set_allocated_snsobject(::micromsg::SnsObject* snsobject);

  // @@protoc_insertion_point(class_scope:micromsg.SnsCommentResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_snsobject();
  void clear_has_snsobject();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SnsObject* snsobject_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsADCommentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsADCommentRequest) */ {
 public:
  SnsADCommentRequest();
  virtual ~SnsADCommentRequest();

  SnsADCommentRequest(const SnsADCommentRequest& from);

  inline SnsADCommentRequest& operator=(const SnsADCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsADCommentRequest& default_instance();

  static inline const SnsADCommentRequest* internal_default_instance() {
    return reinterpret_cast<const SnsADCommentRequest*>(
               &_SnsADCommentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(SnsADCommentRequest* other);

  // implements Message ----------------------------------------------

  inline SnsADCommentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsADCommentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsADCommentRequest& from);
  void MergeFrom(const SnsADCommentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsADCommentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ClientId = 3;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 3;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const char* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SnsActionGroup Action = 2;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 2;
  const ::micromsg::SnsActionGroup& action() const;
  ::micromsg::SnsActionGroup* mutable_action();
  ::micromsg::SnsActionGroup* release_action();
  void set_allocated_action(::micromsg::SnsActionGroup* action);

  // @@protoc_insertion_point(class_scope:micromsg.SnsADCommentRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_action();
  void clear_has_action();
  void set_has_clientid();
  void clear_has_clientid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SnsActionGroup* action_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsADCommentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsADCommentResponse) */ {
 public:
  SnsADCommentResponse();
  virtual ~SnsADCommentResponse();

  SnsADCommentResponse(const SnsADCommentResponse& from);

  inline SnsADCommentResponse& operator=(const SnsADCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsADCommentResponse& default_instance();

  static inline const SnsADCommentResponse* internal_default_instance() {
    return reinterpret_cast<const SnsADCommentResponse*>(
               &_SnsADCommentResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(SnsADCommentResponse* other);

  // implements Message ----------------------------------------------

  inline SnsADCommentResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsADCommentResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsADCommentResponse& from);
  void MergeFrom(const SnsADCommentResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsADCommentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SnsADObject SnsADObject = 2;
  bool has_snsadobject() const;
  void clear_snsadobject();
  static const int kSnsADObjectFieldNumber = 2;
  const ::micromsg::SnsADObject& snsadobject() const;
  ::micromsg::SnsADObject* mutable_snsadobject();
  ::micromsg::SnsADObject* release_snsadobject();
  void set_allocated_snsadobject(::micromsg::SnsADObject* snsadobject);

  // @@protoc_insertion_point(class_scope:micromsg.SnsADCommentResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_snsadobject();
  void clear_has_snsadobject();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SnsADObject* snsadobject_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsSyncRequest) */ {
 public:
  SnsSyncRequest();
  virtual ~SnsSyncRequest();

  SnsSyncRequest(const SnsSyncRequest& from);

  inline SnsSyncRequest& operator=(const SnsSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsSyncRequest& default_instance();

  static inline const SnsSyncRequest* internal_default_instance() {
    return reinterpret_cast<const SnsSyncRequest*>(
               &_SnsSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(SnsSyncRequest* other);

  // implements Message ----------------------------------------------

  inline SnsSyncRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsSyncRequest& from);
  void MergeFrom(const SnsSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& keybuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuf();
  ::micromsg::SKBuiltinBuffer_t* release_keybuf();
  void set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf);

  // required uint32 Selector = 2;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 2;
  ::google::protobuf::uint32 selector() const;
  void set_selector(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsSyncRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_selector();
  void clear_has_selector();
  void set_has_keybuf();
  void clear_has_keybuf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* keybuf_;
  ::google::protobuf::uint32 selector_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsSyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsSyncResponse) */ {
 public:
  SnsSyncResponse();
  virtual ~SnsSyncResponse();

  SnsSyncResponse(const SnsSyncResponse& from);

  inline SnsSyncResponse& operator=(const SnsSyncResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsSyncResponse& default_instance();

  static inline const SnsSyncResponse* internal_default_instance() {
    return reinterpret_cast<const SnsSyncResponse*>(
               &_SnsSyncResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(SnsSyncResponse* other);

  // implements Message ----------------------------------------------

  inline SnsSyncResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsSyncResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsSyncResponse& from);
  void MergeFrom(const SnsSyncResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsSyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.CmdList CmdList = 2;
  bool has_cmdlist() const;
  void clear_cmdlist();
  static const int kCmdListFieldNumber = 2;
  const ::micromsg::CmdList& cmdlist() const;
  ::micromsg::CmdList* mutable_cmdlist();
  ::micromsg::CmdList* release_cmdlist();
  void set_allocated_cmdlist(::micromsg::CmdList* cmdlist);

  // required .micromsg.SKBuiltinBuffer_t KeyBuf = 4;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& keybuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuf();
  ::micromsg::SKBuiltinBuffer_t* release_keybuf();
  void set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf);

  // required uint32 ContinueFlag = 3;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 3;
  ::google::protobuf::uint32 continueflag() const;
  void set_continueflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsSyncResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_cmdlist();
  void clear_has_cmdlist();
  void set_has_continueflag();
  void clear_has_continueflag();
  void set_has_keybuf();
  void clear_has_keybuf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::CmdList* cmdlist_;
  ::micromsg::SKBuiltinBuffer_t* keybuf_;
  ::google::protobuf::uint32 continueflag_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsObjectOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsObjectOp) */ {
 public:
  SnsObjectOp();
  virtual ~SnsObjectOp();

  SnsObjectOp(const SnsObjectOp& from);

  inline SnsObjectOp& operator=(const SnsObjectOp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsObjectOp& default_instance();

  static inline const SnsObjectOp* internal_default_instance() {
    return reinterpret_cast<const SnsObjectOp*>(
               &_SnsObjectOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(SnsObjectOp* other);

  // implements Message ----------------------------------------------

  inline SnsObjectOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsObjectOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsObjectOp& from);
  void MergeFrom(const SnsObjectOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsObjectOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .micromsg.SKBuiltinBuffer_t Ext = 3;
  bool has_ext() const;
  void clear_ext();
  static const int kExtFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& ext() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_ext();
  ::micromsg::SKBuiltinBuffer_t* release_ext();
  void set_allocated_ext(::micromsg::SKBuiltinBuffer_t* ext);

  // required uint64 Id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required uint32 OpType = 2;
  bool has_optype() const;
  void clear_optype();
  static const int kOpTypeFieldNumber = 2;
  ::google::protobuf::uint32 optype() const;
  void set_optype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsObjectOp)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_optype();
  void clear_has_optype();
  void set_has_ext();
  void clear_has_ext();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinBuffer_t* ext_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 optype_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsObjectOpDeleteComment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsObjectOpDeleteComment) */ {
 public:
  SnsObjectOpDeleteComment();
  virtual ~SnsObjectOpDeleteComment();

  SnsObjectOpDeleteComment(const SnsObjectOpDeleteComment& from);

  inline SnsObjectOpDeleteComment& operator=(const SnsObjectOpDeleteComment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsObjectOpDeleteComment& default_instance();

  static inline const SnsObjectOpDeleteComment* internal_default_instance() {
    return reinterpret_cast<const SnsObjectOpDeleteComment*>(
               &_SnsObjectOpDeleteComment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(SnsObjectOpDeleteComment* other);

  // implements Message ----------------------------------------------

  inline SnsObjectOpDeleteComment* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsObjectOpDeleteComment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsObjectOpDeleteComment& from);
  void MergeFrom(const SnsObjectOpDeleteComment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsObjectOpDeleteComment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 CommentId = 1;
  bool has_commentid() const;
  void clear_commentid();
  static const int kCommentIdFieldNumber = 1;
  ::google::protobuf::int32 commentid() const;
  void set_commentid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsObjectOpDeleteComment)
 private:
  void set_has_commentid();
  void clear_has_commentid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 commentid_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsADObjectOpDeleteComment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsADObjectOpDeleteComment) */ {
 public:
  SnsADObjectOpDeleteComment();
  virtual ~SnsADObjectOpDeleteComment();

  SnsADObjectOpDeleteComment(const SnsADObjectOpDeleteComment& from);

  inline SnsADObjectOpDeleteComment& operator=(const SnsADObjectOpDeleteComment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsADObjectOpDeleteComment& default_instance();

  static inline const SnsADObjectOpDeleteComment* internal_default_instance() {
    return reinterpret_cast<const SnsADObjectOpDeleteComment*>(
               &_SnsADObjectOpDeleteComment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(SnsADObjectOpDeleteComment* other);

  // implements Message ----------------------------------------------

  inline SnsADObjectOpDeleteComment* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsADObjectOpDeleteComment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsADObjectOpDeleteComment& from);
  void MergeFrom(const SnsADObjectOpDeleteComment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsADObjectOpDeleteComment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 CommentId = 1;
  bool has_commentid() const;
  void clear_commentid();
  static const int kCommentIdFieldNumber = 1;
  ::google::protobuf::uint64 commentid() const;
  void set_commentid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsADObjectOpDeleteComment)
 private:
  void set_has_commentid();
  void clear_has_commentid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 commentid_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsObjectOpRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsObjectOpRequest) */ {
 public:
  SnsObjectOpRequest();
  virtual ~SnsObjectOpRequest();

  SnsObjectOpRequest(const SnsObjectOpRequest& from);

  inline SnsObjectOpRequest& operator=(const SnsObjectOpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsObjectOpRequest& default_instance();

  static inline const SnsObjectOpRequest* internal_default_instance() {
    return reinterpret_cast<const SnsObjectOpRequest*>(
               &_SnsObjectOpRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(SnsObjectOpRequest* other);

  // implements Message ----------------------------------------------

  inline SnsObjectOpRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsObjectOpRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsObjectOpRequest& from);
  void MergeFrom(const SnsObjectOpRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsObjectOpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SnsObjectOp OpList = 3;
  int oplist_size() const;
  void clear_oplist();
  static const int kOpListFieldNumber = 3;
  const ::micromsg::SnsObjectOp& oplist(int index) const;
  ::micromsg::SnsObjectOp* mutable_oplist(int index);
  ::micromsg::SnsObjectOp* add_oplist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObjectOp >*
      mutable_oplist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObjectOp >&
      oplist() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 OpCount = 2;
  bool has_opcount() const;
  void clear_opcount();
  static const int kOpCountFieldNumber = 2;
  ::google::protobuf::uint32 opcount() const;
  void set_opcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsObjectOpRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcount();
  void clear_has_opcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObjectOp > oplist_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 opcount_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsObjectOpResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsObjectOpResponse) */ {
 public:
  SnsObjectOpResponse();
  virtual ~SnsObjectOpResponse();

  SnsObjectOpResponse(const SnsObjectOpResponse& from);

  inline SnsObjectOpResponse& operator=(const SnsObjectOpResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsObjectOpResponse& default_instance();

  static inline const SnsObjectOpResponse* internal_default_instance() {
    return reinterpret_cast<const SnsObjectOpResponse*>(
               &_SnsObjectOpResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(SnsObjectOpResponse* other);

  // implements Message ----------------------------------------------

  inline SnsObjectOpResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsObjectOpResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsObjectOpResponse& from);
  void MergeFrom(const SnsObjectOpResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsObjectOpResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 OpRetList = 3 [packed = true];
  int opretlist_size() const;
  void clear_opretlist();
  static const int kOpRetListFieldNumber = 3;
  ::google::protobuf::int32 opretlist(int index) const;
  void set_opretlist(int index, ::google::protobuf::int32 value);
  void add_opretlist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      opretlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_opretlist();

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 OpCount = 2;
  bool has_opcount() const;
  void clear_opcount();
  static const int kOpCountFieldNumber = 2;
  ::google::protobuf::uint32 opcount() const;
  void set_opcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsObjectOpResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_opcount();
  void clear_has_opcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > opretlist_;
  mutable int _opretlist_cached_byte_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 opcount_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsLbsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsLbsRequest) */ {
 public:
  SnsLbsRequest();
  virtual ~SnsLbsRequest();

  SnsLbsRequest(const SnsLbsRequest& from);

  inline SnsLbsRequest& operator=(const SnsLbsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsLbsRequest& default_instance();

  static inline const SnsLbsRequest* internal_default_instance() {
    return reinterpret_cast<const SnsLbsRequest*>(
               &_SnsLbsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(SnsLbsRequest* other);

  // implements Message ----------------------------------------------

  inline SnsLbsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsLbsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsLbsRequest& from);
  void MergeFrom(const SnsLbsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsLbsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MacAddr = 6;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 6;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // optional string CellId = 7;
  bool has_cellid() const;
  void clear_cellid();
  static const int kCellIdFieldNumber = 7;
  const ::std::string& cellid() const;
  void set_cellid(const ::std::string& value);
  #if LANG_CXX11
  void set_cellid(::std::string&& value);
  #endif
  void set_cellid(const char* value);
  void set_cellid(const char* value, size_t size);
  ::std::string* mutable_cellid();
  ::std::string* release_cellid();
  void set_allocated_cellid(::std::string* cellid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 OpCode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required float Longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  float longitude() const;
  void set_longitude(float value);

  // required float Latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  float latitude() const;
  void set_latitude(float value);

  // required int32 Precision = 5;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 5;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // required int32 GPSSource = 8;
  bool has_gpssource() const;
  void clear_gpssource();
  static const int kGPSSourceFieldNumber = 8;
  ::google::protobuf::int32 gpssource() const;
  void set_gpssource(::google::protobuf::int32 value);

  // required uint32 SBTime = 9;
  bool has_sbtime() const;
  void clear_sbtime();
  static const int kSBTimeFieldNumber = 9;
  ::google::protobuf::uint32 sbtime() const;
  void set_sbtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsLbsRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_precision();
  void clear_has_precision();
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_cellid();
  void clear_has_cellid();
  void set_has_gpssource();
  void clear_has_gpssource();
  void set_has_sbtime();
  void clear_has_sbtime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr cellid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 opcode_;
  float longitude_;
  float latitude_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 gpssource_;
  ::google::protobuf::uint32 sbtime_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsLbsContactInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsLbsContactInfo) */ {
 public:
  SnsLbsContactInfo();
  virtual ~SnsLbsContactInfo();

  SnsLbsContactInfo(const SnsLbsContactInfo& from);

  inline SnsLbsContactInfo& operator=(const SnsLbsContactInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsLbsContactInfo& default_instance();

  static inline const SnsLbsContactInfo* internal_default_instance() {
    return reinterpret_cast<const SnsLbsContactInfo*>(
               &_SnsLbsContactInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(SnsLbsContactInfo* other);

  // implements Message ----------------------------------------------

  inline SnsLbsContactInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsLbsContactInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsLbsContactInfo& from);
  void MergeFrom(const SnsLbsContactInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsLbsContactInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:micromsg.SnsLbsContactInfo)
 private:
  void set_has_username();
  void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsLbsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsLbsResponse) */ {
 public:
  SnsLbsResponse();
  virtual ~SnsLbsResponse();

  SnsLbsResponse(const SnsLbsResponse& from);

  inline SnsLbsResponse& operator=(const SnsLbsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsLbsResponse& default_instance();

  static inline const SnsLbsResponse* internal_default_instance() {
    return reinterpret_cast<const SnsLbsResponse*>(
               &_SnsLbsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(SnsLbsResponse* other);

  // implements Message ----------------------------------------------

  inline SnsLbsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsLbsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsLbsResponse& from);
  void MergeFrom(const SnsLbsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsLbsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SnsLbsContactInfo ContactList = 3;
  int contactlist_size() const;
  void clear_contactlist();
  static const int kContactListFieldNumber = 3;
  const ::micromsg::SnsLbsContactInfo& contactlist(int index) const;
  ::micromsg::SnsLbsContactInfo* mutable_contactlist(int index);
  ::micromsg::SnsLbsContactInfo* add_contactlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsLbsContactInfo >*
      mutable_contactlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsLbsContactInfo >&
      contactlist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 ContactCount = 2;
  bool has_contactcount() const;
  void clear_contactcount();
  static const int kContactCountFieldNumber = 2;
  ::google::protobuf::uint32 contactcount() const;
  void set_contactcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsLbsResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_contactcount();
  void clear_has_contactcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsLbsContactInfo > contactlist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 contactcount_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsGetCityRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsGetCityRequest) */ {
 public:
  SnsGetCityRequest();
  virtual ~SnsGetCityRequest();

  SnsGetCityRequest(const SnsGetCityRequest& from);

  inline SnsGetCityRequest& operator=(const SnsGetCityRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsGetCityRequest& default_instance();

  static inline const SnsGetCityRequest* internal_default_instance() {
    return reinterpret_cast<const SnsGetCityRequest*>(
               &_SnsGetCityRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(SnsGetCityRequest* other);

  // implements Message ----------------------------------------------

  inline SnsGetCityRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsGetCityRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsGetCityRequest& from);
  void MergeFrom(const SnsGetCityRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsGetCityRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MacAddr = 6;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 6;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // optional string CellId = 7;
  bool has_cellid() const;
  void clear_cellid();
  static const int kCellIdFieldNumber = 7;
  const ::std::string& cellid() const;
  void set_cellid(const ::std::string& value);
  #if LANG_CXX11
  void set_cellid(::std::string&& value);
  #endif
  void set_cellid(const char* value);
  void set_cellid(const char* value, size_t size);
  ::std::string* mutable_cellid();
  ::std::string* release_cellid();
  void set_allocated_cellid(::std::string* cellid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required int32 Longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  ::google::protobuf::int32 longitude() const;
  void set_longitude(::google::protobuf::int32 value);

  // required int32 Latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  ::google::protobuf::int32 latitude() const;
  void set_latitude(::google::protobuf::int32 value);

  // required int32 Precision = 5;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 5;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // required int32 GPSSource = 8;
  bool has_gpssource() const;
  void clear_gpssource();
  static const int kGPSSourceFieldNumber = 8;
  ::google::protobuf::int32 gpssource() const;
  void set_gpssource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsGetCityRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_precision();
  void clear_has_precision();
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_cellid();
  void clear_has_cellid();
  void set_has_gpssource();
  void clear_has_gpssource();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr cellid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::int32 longitude_;
  ::google::protobuf::int32 latitude_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 gpssource_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsGetCityResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsGetCityResponse) */ {
 public:
  SnsGetCityResponse();
  virtual ~SnsGetCityResponse();

  SnsGetCityResponse(const SnsGetCityResponse& from);

  inline SnsGetCityResponse& operator=(const SnsGetCityResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsGetCityResponse& default_instance();

  static inline const SnsGetCityResponse* internal_default_instance() {
    return reinterpret_cast<const SnsGetCityResponse*>(
               &_SnsGetCityResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(SnsGetCityResponse* other);

  // implements Message ----------------------------------------------

  inline SnsGetCityResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsGetCityResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsGetCityResponse& from);
  void MergeFrom(const SnsGetCityResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsGetCityResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Country = 4;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 4;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  #if LANG_CXX11
  void set_country(::std::string&& value);
  #endif
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string City = 5;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 5;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required int32 Longitude = 2;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  ::google::protobuf::int32 longitude() const;
  void set_longitude(::google::protobuf::int32 value);

  // required int32 Latitude = 3;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  ::google::protobuf::int32 latitude() const;
  void set_latitude(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsGetCityResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_country();
  void clear_has_country();
  void set_has_city();
  void clear_has_city();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 longitude_;
  ::google::protobuf::int32 latitude_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsClassifyTimeLineRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsClassifyTimeLineRequest) */ {
 public:
  SnsClassifyTimeLineRequest();
  virtual ~SnsClassifyTimeLineRequest();

  SnsClassifyTimeLineRequest(const SnsClassifyTimeLineRequest& from);

  inline SnsClassifyTimeLineRequest& operator=(const SnsClassifyTimeLineRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsClassifyTimeLineRequest& default_instance();

  static inline const SnsClassifyTimeLineRequest* internal_default_instance() {
    return reinterpret_cast<const SnsClassifyTimeLineRequest*>(
               &_SnsClassifyTimeLineRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(SnsClassifyTimeLineRequest* other);

  // implements Message ----------------------------------------------

  inline SnsClassifyTimeLineRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsClassifyTimeLineRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsClassifyTimeLineRequest& from);
  void MergeFrom(const SnsClassifyTimeLineRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsClassifyTimeLineRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FirstPageMd5 = 2;
  bool has_firstpagemd5() const;
  void clear_firstpagemd5();
  static const int kFirstPageMd5FieldNumber = 2;
  const ::std::string& firstpagemd5() const;
  void set_firstpagemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_firstpagemd5(::std::string&& value);
  #endif
  void set_firstpagemd5(const char* value);
  void set_firstpagemd5(const char* value, size_t size);
  ::std::string* mutable_firstpagemd5();
  ::std::string* release_firstpagemd5();
  void set_allocated_firstpagemd5(::std::string* firstpagemd5);

  // optional string ClassifyId = 4;
  bool has_classifyid() const;
  void clear_classifyid();
  static const int kClassifyIdFieldNumber = 4;
  const ::std::string& classifyid() const;
  void set_classifyid(const ::std::string& value);
  #if LANG_CXX11
  void set_classifyid(::std::string&& value);
  #endif
  void set_classifyid(const char* value);
  void set_classifyid(const char* value, size_t size);
  ::std::string* mutable_classifyid();
  ::std::string* release_classifyid();
  void set_allocated_classifyid(::std::string* classifyid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint64 MaxId = 3;
  bool has_maxid() const;
  void clear_maxid();
  static const int kMaxIdFieldNumber = 3;
  ::google::protobuf::uint64 maxid() const;
  void set_maxid(::google::protobuf::uint64 value);

  // required uint32 ClassifyType = 5;
  bool has_classifytype() const;
  void clear_classifytype();
  static const int kClassifyTypeFieldNumber = 5;
  ::google::protobuf::uint32 classifytype() const;
  void set_classifytype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsClassifyTimeLineRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_firstpagemd5();
  void clear_has_firstpagemd5();
  void set_has_maxid();
  void clear_has_maxid();
  void set_has_classifyid();
  void clear_has_classifyid();
  void set_has_classifytype();
  void clear_has_classifytype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr firstpagemd5_;
  ::google::protobuf::internal::ArenaStringPtr classifyid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint64 maxid_;
  ::google::protobuf::uint32 classifytype_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsClassifyTimeLineResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsClassifyTimeLineResponse) */ {
 public:
  SnsClassifyTimeLineResponse();
  virtual ~SnsClassifyTimeLineResponse();

  SnsClassifyTimeLineResponse(const SnsClassifyTimeLineResponse& from);

  inline SnsClassifyTimeLineResponse& operator=(const SnsClassifyTimeLineResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsClassifyTimeLineResponse& default_instance();

  static inline const SnsClassifyTimeLineResponse* internal_default_instance() {
    return reinterpret_cast<const SnsClassifyTimeLineResponse*>(
               &_SnsClassifyTimeLineResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(SnsClassifyTimeLineResponse* other);

  // implements Message ----------------------------------------------

  inline SnsClassifyTimeLineResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsClassifyTimeLineResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsClassifyTimeLineResponse& from);
  void MergeFrom(const SnsClassifyTimeLineResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsClassifyTimeLineResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SnsObject ObjectList = 4;
  int objectlist_size() const;
  void clear_objectlist();
  static const int kObjectListFieldNumber = 4;
  const ::micromsg::SnsObject& objectlist(int index) const;
  ::micromsg::SnsObject* mutable_objectlist(int index);
  ::micromsg::SnsObject* add_objectlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >*
      mutable_objectlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >&
      objectlist() const;

  // optional string FirstPageMd5 = 2;
  bool has_firstpagemd5() const;
  void clear_firstpagemd5();
  static const int kFirstPageMd5FieldNumber = 2;
  const ::std::string& firstpagemd5() const;
  void set_firstpagemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_firstpagemd5(::std::string&& value);
  #endif
  void set_firstpagemd5(const char* value);
  void set_firstpagemd5(const char* value, size_t size);
  ::std::string* mutable_firstpagemd5();
  ::std::string* release_firstpagemd5();
  void set_allocated_firstpagemd5(::std::string* firstpagemd5);

  // optional string Description = 6;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 6;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SnsServerConfig ServerConfig = 8;
  bool has_serverconfig() const;
  void clear_serverconfig();
  static const int kServerConfigFieldNumber = 8;
  const ::micromsg::SnsServerConfig& serverconfig() const;
  ::micromsg::SnsServerConfig* mutable_serverconfig();
  ::micromsg::SnsServerConfig* release_serverconfig();
  void set_allocated_serverconfig(::micromsg::SnsServerConfig* serverconfig);

  // required uint32 ObjectCount = 3;
  bool has_objectcount() const;
  void clear_objectcount();
  static const int kObjectCountFieldNumber = 3;
  ::google::protobuf::uint32 objectcount() const;
  void set_objectcount(::google::protobuf::uint32 value);

  // required uint32 ObjectCountForSameMd5 = 5;
  bool has_objectcountforsamemd5() const;
  void clear_objectcountforsamemd5();
  static const int kObjectCountForSameMd5FieldNumber = 5;
  ::google::protobuf::uint32 objectcountforsamemd5() const;
  void set_objectcountforsamemd5(::google::protobuf::uint32 value);

  // required uint32 ControlFlag = 7;
  bool has_controlflag() const;
  void clear_controlflag();
  static const int kControlFlagFieldNumber = 7;
  ::google::protobuf::uint32 controlflag() const;
  void set_controlflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SnsClassifyTimeLineResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_firstpagemd5();
  void clear_has_firstpagemd5();
  void set_has_objectcount();
  void clear_has_objectcount();
  void set_has_objectcountforsamemd5();
  void clear_has_objectcountforsamemd5();
  void set_has_description();
  void clear_has_description();
  void set_has_controlflag();
  void clear_has_controlflag();
  void set_has_serverconfig();
  void clear_has_serverconfig();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject > objectlist_;
  ::google::protobuf::internal::ArenaStringPtr firstpagemd5_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SnsServerConfig* serverconfig_;
  ::google::protobuf::uint32 objectcount_;
  ::google::protobuf::uint32 objectcountforsamemd5_;
  ::google::protobuf::uint32 controlflag_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Whatsnew61 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.Whatsnew61) */ {
 public:
  Whatsnew61();
  virtual ~Whatsnew61();

  Whatsnew61(const Whatsnew61& from);

  inline Whatsnew61& operator=(const Whatsnew61& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Whatsnew61& default_instance();

  static inline const Whatsnew61* internal_default_instance() {
    return reinterpret_cast<const Whatsnew61*>(
               &_Whatsnew61_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(Whatsnew61* other);

  // implements Message ----------------------------------------------

  inline Whatsnew61* New() const PROTOBUF_FINAL { return New(NULL); }

  Whatsnew61* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Whatsnew61& from);
  void MergeFrom(const Whatsnew61& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Whatsnew61* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 like = 1;
  bool has_like() const;
  void clear_like();
  static const int kLikeFieldNumber = 1;
  ::google::protobuf::uint32 like() const;
  void set_like(::google::protobuf::uint32 value);

  // optional uint32 liked = 2;
  bool has_liked() const;
  void clear_liked();
  static const int kLikedFieldNumber = 2;
  ::google::protobuf::uint32 liked() const;
  void set_liked(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.Whatsnew61)
 private:
  void set_has_like();
  void clear_has_like();
  void set_has_liked();
  void clear_has_liked();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 like_;
  ::google::protobuf::uint32 liked_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsWhatsnewRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsWhatsnewRequest) */ {
 public:
  SnsWhatsnewRequest();
  virtual ~SnsWhatsnewRequest();

  SnsWhatsnewRequest(const SnsWhatsnewRequest& from);

  inline SnsWhatsnewRequest& operator=(const SnsWhatsnewRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsWhatsnewRequest& default_instance();

  static inline const SnsWhatsnewRequest* internal_default_instance() {
    return reinterpret_cast<const SnsWhatsnewRequest*>(
               &_SnsWhatsnewRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(SnsWhatsnewRequest* other);

  // implements Message ----------------------------------------------

  inline SnsWhatsnewRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsWhatsnewRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsWhatsnewRequest& from);
  void MergeFrom(const SnsWhatsnewRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsWhatsnewRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.SnsWhatsnewRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnsWhatsnewResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SnsWhatsnewResponse) */ {
 public:
  SnsWhatsnewResponse();
  virtual ~SnsWhatsnewResponse();

  SnsWhatsnewResponse(const SnsWhatsnewResponse& from);

  inline SnsWhatsnewResponse& operator=(const SnsWhatsnewResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsWhatsnewResponse& default_instance();

  static inline const SnsWhatsnewResponse* internal_default_instance() {
    return reinterpret_cast<const SnsWhatsnewResponse*>(
               &_SnsWhatsnewResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(SnsWhatsnewResponse* other);

  // implements Message ----------------------------------------------

  inline SnsWhatsnewResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsWhatsnewResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsWhatsnewResponse& from);
  void MergeFrom(const SnsWhatsnewResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsWhatsnewResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional .micromsg.Whatsnew61 Whatsnew61 = 2;
  bool has_whatsnew61() const;
  void clear_whatsnew61();
  static const int kWhatsnew61FieldNumber = 2;
  const ::micromsg::Whatsnew61& whatsnew61() const;
  ::micromsg::Whatsnew61* mutable_whatsnew61();
  ::micromsg::Whatsnew61* release_whatsnew61();
  void set_allocated_whatsnew61(::micromsg::Whatsnew61* whatsnew61);

  // @@protoc_insertion_point(class_scope:micromsg.SnsWhatsnewResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_whatsnew61();
  void clear_has_whatsnew61();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::Whatsnew61* whatsnew61_;
  friend struct protobuf_mmsns_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TwitterInfo

// optional string Oauth_Token = 1;
inline bool TwitterInfo::has_oauth_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TwitterInfo::set_has_oauth_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TwitterInfo::clear_has_oauth_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TwitterInfo::clear_oauth_token() {
  oauth_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_oauth_token();
}
inline const ::std::string& TwitterInfo::oauth_token() const {
  // @@protoc_insertion_point(field_get:micromsg.TwitterInfo.Oauth_Token)
  return oauth_token_.GetNoArena();
}
inline void TwitterInfo::set_oauth_token(const ::std::string& value) {
  set_has_oauth_token();
  oauth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.TwitterInfo.Oauth_Token)
}
#if LANG_CXX11
inline void TwitterInfo::set_oauth_token(::std::string&& value) {
  set_has_oauth_token();
  oauth_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.TwitterInfo.Oauth_Token)
}
#endif
inline void TwitterInfo::set_oauth_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_oauth_token();
  oauth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.TwitterInfo.Oauth_Token)
}
inline void TwitterInfo::set_oauth_token(const char* value, size_t size) {
  set_has_oauth_token();
  oauth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.TwitterInfo.Oauth_Token)
}
inline ::std::string* TwitterInfo::mutable_oauth_token() {
  set_has_oauth_token();
  // @@protoc_insertion_point(field_mutable:micromsg.TwitterInfo.Oauth_Token)
  return oauth_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TwitterInfo::release_oauth_token() {
  // @@protoc_insertion_point(field_release:micromsg.TwitterInfo.Oauth_Token)
  clear_has_oauth_token();
  return oauth_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TwitterInfo::set_allocated_oauth_token(::std::string* oauth_token) {
  if (oauth_token != NULL) {
    set_has_oauth_token();
  } else {
    clear_has_oauth_token();
  }
  oauth_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oauth_token);
  // @@protoc_insertion_point(field_set_allocated:micromsg.TwitterInfo.Oauth_Token)
}

// optional string Oauth_Token_Secret = 2;
inline bool TwitterInfo::has_oauth_token_secret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TwitterInfo::set_has_oauth_token_secret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TwitterInfo::clear_has_oauth_token_secret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TwitterInfo::clear_oauth_token_secret() {
  oauth_token_secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_oauth_token_secret();
}
inline const ::std::string& TwitterInfo::oauth_token_secret() const {
  // @@protoc_insertion_point(field_get:micromsg.TwitterInfo.Oauth_Token_Secret)
  return oauth_token_secret_.GetNoArena();
}
inline void TwitterInfo::set_oauth_token_secret(const ::std::string& value) {
  set_has_oauth_token_secret();
  oauth_token_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.TwitterInfo.Oauth_Token_Secret)
}
#if LANG_CXX11
inline void TwitterInfo::set_oauth_token_secret(::std::string&& value) {
  set_has_oauth_token_secret();
  oauth_token_secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.TwitterInfo.Oauth_Token_Secret)
}
#endif
inline void TwitterInfo::set_oauth_token_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_oauth_token_secret();
  oauth_token_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.TwitterInfo.Oauth_Token_Secret)
}
inline void TwitterInfo::set_oauth_token_secret(const char* value, size_t size) {
  set_has_oauth_token_secret();
  oauth_token_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.TwitterInfo.Oauth_Token_Secret)
}
inline ::std::string* TwitterInfo::mutable_oauth_token_secret() {
  set_has_oauth_token_secret();
  // @@protoc_insertion_point(field_mutable:micromsg.TwitterInfo.Oauth_Token_Secret)
  return oauth_token_secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TwitterInfo::release_oauth_token_secret() {
  // @@protoc_insertion_point(field_release:micromsg.TwitterInfo.Oauth_Token_Secret)
  clear_has_oauth_token_secret();
  return oauth_token_secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TwitterInfo::set_allocated_oauth_token_secret(::std::string* oauth_token_secret) {
  if (oauth_token_secret != NULL) {
    set_has_oauth_token_secret();
  } else {
    clear_has_oauth_token_secret();
  }
  oauth_token_secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oauth_token_secret);
  // @@protoc_insertion_point(field_set_allocated:micromsg.TwitterInfo.Oauth_Token_Secret)
}

// -------------------------------------------------------------------

// SnsBufferUrl

// optional string Url = 1;
inline bool SnsBufferUrl::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsBufferUrl::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsBufferUrl::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsBufferUrl::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& SnsBufferUrl::url() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsBufferUrl.Url)
  return url_.GetNoArena();
}
inline void SnsBufferUrl::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsBufferUrl.Url)
}
#if LANG_CXX11
inline void SnsBufferUrl::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsBufferUrl.Url)
}
#endif
inline void SnsBufferUrl::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsBufferUrl.Url)
}
inline void SnsBufferUrl::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsBufferUrl.Url)
}
inline ::std::string* SnsBufferUrl::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsBufferUrl.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsBufferUrl::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.SnsBufferUrl.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsBufferUrl::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsBufferUrl.Url)
}

// required uint32 Type = 2;
inline bool SnsBufferUrl::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsBufferUrl::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsBufferUrl::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsBufferUrl::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SnsBufferUrl::type() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsBufferUrl.Type)
  return type_;
}
inline void SnsBufferUrl::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsBufferUrl.Type)
}

// -------------------------------------------------------------------

// SnsUploadRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsUploadRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsUploadRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsUploadRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsUploadRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsUploadRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsUploadRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsUploadRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUploadRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsUploadRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUploadRequest.BaseRequest)
}

// required uint32 Type = 2;
inline bool SnsUploadRequest::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnsUploadRequest::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnsUploadRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnsUploadRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SnsUploadRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.Type)
  return type_;
}
inline void SnsUploadRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.Type)
}

// required uint32 StartPos = 3;
inline bool SnsUploadRequest::has_startpos() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SnsUploadRequest::set_has_startpos() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SnsUploadRequest::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SnsUploadRequest::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
inline ::google::protobuf::uint32 SnsUploadRequest::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.StartPos)
  return startpos_;
}
inline void SnsUploadRequest::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.StartPos)
}

// required uint32 TotalLen = 4;
inline bool SnsUploadRequest::has_totallen() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SnsUploadRequest::set_has_totallen() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SnsUploadRequest::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SnsUploadRequest::clear_totallen() {
  totallen_ = 0u;
  clear_has_totallen();
}
inline ::google::protobuf::uint32 SnsUploadRequest::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.TotalLen)
  return totallen_;
}
inline void SnsUploadRequest::set_totallen(::google::protobuf::uint32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.TotalLen)
}

// required .micromsg.SKBuiltinBuffer_t Buffer = 5;
inline bool SnsUploadRequest::has_buffer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsUploadRequest::set_has_buffer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsUploadRequest::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsUploadRequest::clear_buffer() {
  if (buffer_ != NULL) buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buffer();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsUploadRequest::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.Buffer)
  return buffer_ != NULL ? *buffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsUploadRequest::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == NULL) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadRequest.Buffer)
  return buffer_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsUploadRequest::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUploadRequest.Buffer)
  clear_has_buffer();
  ::micromsg::SKBuiltinBuffer_t* temp = buffer_;
  buffer_ = NULL;
  return temp;
}
inline void SnsUploadRequest::set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer) {
  delete buffer_;
  buffer_ = buffer;
  if (buffer) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUploadRequest.Buffer)
}

// optional string ClientId = 6;
inline bool SnsUploadRequest::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsUploadRequest::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsUploadRequest::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsUploadRequest::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientid();
}
inline const ::std::string& SnsUploadRequest::clientid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.ClientId)
  return clientid_.GetNoArena();
}
inline void SnsUploadRequest::set_clientid(const ::std::string& value) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.ClientId)
}
#if LANG_CXX11
inline void SnsUploadRequest::set_clientid(::std::string&& value) {
  set_has_clientid();
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsUploadRequest.ClientId)
}
#endif
inline void SnsUploadRequest::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsUploadRequest.ClientId)
}
inline void SnsUploadRequest::set_clientid(const char* value, size_t size) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsUploadRequest.ClientId)
}
inline ::std::string* SnsUploadRequest::mutable_clientid() {
  set_has_clientid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadRequest.ClientId)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsUploadRequest::release_clientid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUploadRequest.ClientId)
  clear_has_clientid();
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsUploadRequest::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    set_has_clientid();
  } else {
    clear_has_clientid();
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUploadRequest.ClientId)
}

// optional uint32 FilterStype = 7;
inline bool SnsUploadRequest::has_filterstype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SnsUploadRequest::set_has_filterstype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SnsUploadRequest::clear_has_filterstype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SnsUploadRequest::clear_filterstype() {
  filterstype_ = 0u;
  clear_has_filterstype();
}
inline ::google::protobuf::uint32 SnsUploadRequest::filterstype() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.FilterStype)
  return filterstype_;
}
inline void SnsUploadRequest::set_filterstype(::google::protobuf::uint32 value) {
  set_has_filterstype();
  filterstype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.FilterStype)
}

// optional uint32 SyncFlag = 8;
inline bool SnsUploadRequest::has_syncflag() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SnsUploadRequest::set_has_syncflag() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SnsUploadRequest::clear_has_syncflag() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SnsUploadRequest::clear_syncflag() {
  syncflag_ = 0u;
  clear_has_syncflag();
}
inline ::google::protobuf::uint32 SnsUploadRequest::syncflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.SyncFlag)
  return syncflag_;
}
inline void SnsUploadRequest::set_syncflag(::google::protobuf::uint32 value) {
  set_has_syncflag();
  syncflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.SyncFlag)
}

// optional string Description = 9;
inline bool SnsUploadRequest::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsUploadRequest::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsUploadRequest::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsUploadRequest::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& SnsUploadRequest::description() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.Description)
  return description_.GetNoArena();
}
inline void SnsUploadRequest::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.Description)
}
#if LANG_CXX11
inline void SnsUploadRequest::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsUploadRequest.Description)
}
#endif
inline void SnsUploadRequest::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsUploadRequest.Description)
}
inline void SnsUploadRequest::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsUploadRequest.Description)
}
inline ::std::string* SnsUploadRequest::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadRequest.Description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsUploadRequest::release_description() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUploadRequest.Description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsUploadRequest::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUploadRequest.Description)
}

// optional int32 PhotoFrom = 10;
inline bool SnsUploadRequest::has_photofrom() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SnsUploadRequest::set_has_photofrom() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SnsUploadRequest::clear_has_photofrom() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SnsUploadRequest::clear_photofrom() {
  photofrom_ = 0;
  clear_has_photofrom();
}
inline ::google::protobuf::int32 SnsUploadRequest::photofrom() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.PhotoFrom)
  return photofrom_;
}
inline void SnsUploadRequest::set_photofrom(::google::protobuf::int32 value) {
  set_has_photofrom();
  photofrom_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.PhotoFrom)
}

// optional int32 NetType = 11;
inline bool SnsUploadRequest::has_nettype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SnsUploadRequest::set_has_nettype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SnsUploadRequest::clear_has_nettype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SnsUploadRequest::clear_nettype() {
  nettype_ = 0;
  clear_has_nettype();
}
inline ::google::protobuf::int32 SnsUploadRequest::nettype() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.NetType)
  return nettype_;
}
inline void SnsUploadRequest::set_nettype(::google::protobuf::int32 value) {
  set_has_nettype();
  nettype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.NetType)
}

// optional .micromsg.TwitterInfo TwitterInfo = 12;
inline bool SnsUploadRequest::has_twitterinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsUploadRequest::set_has_twitterinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsUploadRequest::clear_has_twitterinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsUploadRequest::clear_twitterinfo() {
  if (twitterinfo_ != NULL) twitterinfo_->::micromsg::TwitterInfo::Clear();
  clear_has_twitterinfo();
}
inline const ::micromsg::TwitterInfo& SnsUploadRequest::twitterinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.TwitterInfo)
  return twitterinfo_ != NULL ? *twitterinfo_
                         : *::micromsg::TwitterInfo::internal_default_instance();
}
inline ::micromsg::TwitterInfo* SnsUploadRequest::mutable_twitterinfo() {
  set_has_twitterinfo();
  if (twitterinfo_ == NULL) {
    twitterinfo_ = new ::micromsg::TwitterInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadRequest.TwitterInfo)
  return twitterinfo_;
}
inline ::micromsg::TwitterInfo* SnsUploadRequest::release_twitterinfo() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUploadRequest.TwitterInfo)
  clear_has_twitterinfo();
  ::micromsg::TwitterInfo* temp = twitterinfo_;
  twitterinfo_ = NULL;
  return temp;
}
inline void SnsUploadRequest::set_allocated_twitterinfo(::micromsg::TwitterInfo* twitterinfo) {
  delete twitterinfo_;
  twitterinfo_ = twitterinfo;
  if (twitterinfo) {
    set_has_twitterinfo();
  } else {
    clear_has_twitterinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUploadRequest.TwitterInfo)
}

// optional string AppId = 13;
inline bool SnsUploadRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsUploadRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsUploadRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsUploadRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& SnsUploadRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.AppId)
  return appid_.GetNoArena();
}
inline void SnsUploadRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.AppId)
}
#if LANG_CXX11
inline void SnsUploadRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsUploadRequest.AppId)
}
#endif
inline void SnsUploadRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsUploadRequest.AppId)
}
inline void SnsUploadRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsUploadRequest.AppId)
}
inline ::std::string* SnsUploadRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadRequest.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsUploadRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUploadRequest.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsUploadRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUploadRequest.AppId)
}

// optional uint32 ExtFlag = 14;
inline bool SnsUploadRequest::has_extflag() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SnsUploadRequest::set_has_extflag() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SnsUploadRequest::clear_has_extflag() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SnsUploadRequest::clear_extflag() {
  extflag_ = 0u;
  clear_has_extflag();
}
inline ::google::protobuf::uint32 SnsUploadRequest::extflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.ExtFlag)
  return extflag_;
}
inline void SnsUploadRequest::set_extflag(::google::protobuf::uint32 value) {
  set_has_extflag();
  extflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.ExtFlag)
}

// optional string MD5 = 15;
inline bool SnsUploadRequest::has_md5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsUploadRequest::set_has_md5() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsUploadRequest::clear_has_md5() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsUploadRequest::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_md5();
}
inline const ::std::string& SnsUploadRequest::md5() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadRequest.MD5)
  return md5_.GetNoArena();
}
inline void SnsUploadRequest::set_md5(const ::std::string& value) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadRequest.MD5)
}
#if LANG_CXX11
inline void SnsUploadRequest::set_md5(::std::string&& value) {
  set_has_md5();
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsUploadRequest.MD5)
}
#endif
inline void SnsUploadRequest::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsUploadRequest.MD5)
}
inline void SnsUploadRequest::set_md5(const char* value, size_t size) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsUploadRequest.MD5)
}
inline ::std::string* SnsUploadRequest::mutable_md5() {
  set_has_md5();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadRequest.MD5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsUploadRequest::release_md5() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUploadRequest.MD5)
  clear_has_md5();
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsUploadRequest::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    set_has_md5();
  } else {
    clear_has_md5();
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUploadRequest.MD5)
}

// -------------------------------------------------------------------

// SnsUploadResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsUploadResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsUploadResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsUploadResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsUploadResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsUploadResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsUploadResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsUploadResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUploadResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsUploadResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUploadResponse.BaseResponse)
}

// required uint32 StartPos = 2;
inline bool SnsUploadResponse::has_startpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsUploadResponse::set_has_startpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsUploadResponse::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsUploadResponse::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
inline ::google::protobuf::uint32 SnsUploadResponse::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadResponse.StartPos)
  return startpos_;
}
inline void SnsUploadResponse::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadResponse.StartPos)
}

// required uint32 TotalLen = 3;
inline bool SnsUploadResponse::has_totallen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsUploadResponse::set_has_totallen() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsUploadResponse::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsUploadResponse::clear_totallen() {
  totallen_ = 0u;
  clear_has_totallen();
}
inline ::google::protobuf::uint32 SnsUploadResponse::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadResponse.TotalLen)
  return totallen_;
}
inline void SnsUploadResponse::set_totallen(::google::protobuf::uint32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadResponse.TotalLen)
}

// optional string ClientId = 4;
inline bool SnsUploadResponse::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsUploadResponse::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsUploadResponse::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsUploadResponse::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientid();
}
inline const ::std::string& SnsUploadResponse::clientid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadResponse.ClientId)
  return clientid_.GetNoArena();
}
inline void SnsUploadResponse::set_clientid(const ::std::string& value) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadResponse.ClientId)
}
#if LANG_CXX11
inline void SnsUploadResponse::set_clientid(::std::string&& value) {
  set_has_clientid();
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsUploadResponse.ClientId)
}
#endif
inline void SnsUploadResponse::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsUploadResponse.ClientId)
}
inline void SnsUploadResponse::set_clientid(const char* value, size_t size) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsUploadResponse.ClientId)
}
inline ::std::string* SnsUploadResponse::mutable_clientid() {
  set_has_clientid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadResponse.ClientId)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsUploadResponse::release_clientid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUploadResponse.ClientId)
  clear_has_clientid();
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsUploadResponse::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    set_has_clientid();
  } else {
    clear_has_clientid();
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUploadResponse.ClientId)
}

// required .micromsg.SnsBufferUrl BufferUrl = 5;
inline bool SnsUploadResponse::has_bufferurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsUploadResponse::set_has_bufferurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsUploadResponse::clear_has_bufferurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsUploadResponse::clear_bufferurl() {
  if (bufferurl_ != NULL) bufferurl_->::micromsg::SnsBufferUrl::Clear();
  clear_has_bufferurl();
}
inline const ::micromsg::SnsBufferUrl& SnsUploadResponse::bufferurl() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadResponse.BufferUrl)
  return bufferurl_ != NULL ? *bufferurl_
                         : *::micromsg::SnsBufferUrl::internal_default_instance();
}
inline ::micromsg::SnsBufferUrl* SnsUploadResponse::mutable_bufferurl() {
  set_has_bufferurl();
  if (bufferurl_ == NULL) {
    bufferurl_ = new ::micromsg::SnsBufferUrl;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadResponse.BufferUrl)
  return bufferurl_;
}
inline ::micromsg::SnsBufferUrl* SnsUploadResponse::release_bufferurl() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUploadResponse.BufferUrl)
  clear_has_bufferurl();
  ::micromsg::SnsBufferUrl* temp = bufferurl_;
  bufferurl_ = NULL;
  return temp;
}
inline void SnsUploadResponse::set_allocated_bufferurl(::micromsg::SnsBufferUrl* bufferurl) {
  delete bufferurl_;
  bufferurl_ = bufferurl;
  if (bufferurl) {
    set_has_bufferurl();
  } else {
    clear_has_bufferurl();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUploadResponse.BufferUrl)
}

// required uint32 ThumbUrlCount = 6;
inline bool SnsUploadResponse::has_thumburlcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsUploadResponse::set_has_thumburlcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsUploadResponse::clear_has_thumburlcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsUploadResponse::clear_thumburlcount() {
  thumburlcount_ = 0u;
  clear_has_thumburlcount();
}
inline ::google::protobuf::uint32 SnsUploadResponse::thumburlcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadResponse.ThumbUrlCount)
  return thumburlcount_;
}
inline void SnsUploadResponse::set_thumburlcount(::google::protobuf::uint32 value) {
  set_has_thumburlcount();
  thumburlcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadResponse.ThumbUrlCount)
}

// repeated .micromsg.SnsBufferUrl ThumbUrls = 7;
inline int SnsUploadResponse::thumburls_size() const {
  return thumburls_.size();
}
inline void SnsUploadResponse::clear_thumburls() {
  thumburls_.Clear();
}
inline const ::micromsg::SnsBufferUrl& SnsUploadResponse::thumburls(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadResponse.ThumbUrls)
  return thumburls_.Get(index);
}
inline ::micromsg::SnsBufferUrl* SnsUploadResponse::mutable_thumburls(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUploadResponse.ThumbUrls)
  return thumburls_.Mutable(index);
}
inline ::micromsg::SnsBufferUrl* SnsUploadResponse::add_thumburls() {
  // @@protoc_insertion_point(field_add:micromsg.SnsUploadResponse.ThumbUrls)
  return thumburls_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsBufferUrl >*
SnsUploadResponse::mutable_thumburls() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsUploadResponse.ThumbUrls)
  return &thumburls_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsBufferUrl >&
SnsUploadResponse::thumburls() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsUploadResponse.ThumbUrls)
  return thumburls_;
}

// required uint64 Id = 8;
inline bool SnsUploadResponse::has_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnsUploadResponse::set_has_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnsUploadResponse::clear_has_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnsUploadResponse::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 SnsUploadResponse::id() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadResponse.Id)
  return id_;
}
inline void SnsUploadResponse::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadResponse.Id)
}

// required uint32 Type = 9;
inline bool SnsUploadResponse::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsUploadResponse::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsUploadResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsUploadResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SnsUploadResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUploadResponse.Type)
  return type_;
}
inline void SnsUploadResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUploadResponse.Type)
}

// -------------------------------------------------------------------

// SnsDownloadRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsDownloadRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsDownloadRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsDownloadRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsDownloadRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsDownloadRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsDownloadRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsDownloadRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsDownloadRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsDownloadRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsDownloadRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsDownloadRequest.BaseRequest)
}

// required int32 StartPos = 2;
inline bool SnsDownloadRequest::has_startpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsDownloadRequest::set_has_startpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsDownloadRequest::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsDownloadRequest::clear_startpos() {
  startpos_ = 0;
  clear_has_startpos();
}
inline ::google::protobuf::int32 SnsDownloadRequest::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadRequest.StartPos)
  return startpos_;
}
inline void SnsDownloadRequest::set_startpos(::google::protobuf::int32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsDownloadRequest.StartPos)
}

// optional int32 TotalLen = 3;
inline bool SnsDownloadRequest::has_totallen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsDownloadRequest::set_has_totallen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsDownloadRequest::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsDownloadRequest::clear_totallen() {
  totallen_ = 0;
  clear_has_totallen();
}
inline ::google::protobuf::int32 SnsDownloadRequest::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadRequest.TotalLen)
  return totallen_;
}
inline void SnsDownloadRequest::set_totallen(::google::protobuf::int32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsDownloadRequest.TotalLen)
}

// optional string BufferId = 4;
inline bool SnsDownloadRequest::has_bufferid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsDownloadRequest::set_has_bufferid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsDownloadRequest::clear_has_bufferid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsDownloadRequest::clear_bufferid() {
  bufferid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bufferid();
}
inline const ::std::string& SnsDownloadRequest::bufferid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadRequest.BufferId)
  return bufferid_.GetNoArena();
}
inline void SnsDownloadRequest::set_bufferid(const ::std::string& value) {
  set_has_bufferid();
  bufferid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsDownloadRequest.BufferId)
}
#if LANG_CXX11
inline void SnsDownloadRequest::set_bufferid(::std::string&& value) {
  set_has_bufferid();
  bufferid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsDownloadRequest.BufferId)
}
#endif
inline void SnsDownloadRequest::set_bufferid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bufferid();
  bufferid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsDownloadRequest.BufferId)
}
inline void SnsDownloadRequest::set_bufferid(const char* value, size_t size) {
  set_has_bufferid();
  bufferid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsDownloadRequest.BufferId)
}
inline ::std::string* SnsDownloadRequest::mutable_bufferid() {
  set_has_bufferid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsDownloadRequest.BufferId)
  return bufferid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsDownloadRequest::release_bufferid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsDownloadRequest.BufferId)
  clear_has_bufferid();
  return bufferid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsDownloadRequest::set_allocated_bufferid(::std::string* bufferid) {
  if (bufferid != NULL) {
    set_has_bufferid();
  } else {
    clear_has_bufferid();
  }
  bufferid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bufferid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsDownloadRequest.BufferId)
}

// required uint32 Type = 5;
inline bool SnsDownloadRequest::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsDownloadRequest::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsDownloadRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsDownloadRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SnsDownloadRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadRequest.Type)
  return type_;
}
inline void SnsDownloadRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsDownloadRequest.Type)
}

// required uint32 DownBufLen = 6;
inline bool SnsDownloadRequest::has_downbuflen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsDownloadRequest::set_has_downbuflen() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsDownloadRequest::clear_has_downbuflen() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsDownloadRequest::clear_downbuflen() {
  downbuflen_ = 0u;
  clear_has_downbuflen();
}
inline ::google::protobuf::uint32 SnsDownloadRequest::downbuflen() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadRequest.DownBufLen)
  return downbuflen_;
}
inline void SnsDownloadRequest::set_downbuflen(::google::protobuf::uint32 value) {
  set_has_downbuflen();
  downbuflen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsDownloadRequest.DownBufLen)
}

// -------------------------------------------------------------------

// SnsDownloadResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsDownloadResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsDownloadResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsDownloadResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsDownloadResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsDownloadResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsDownloadResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsDownloadResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsDownloadResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsDownloadResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsDownloadResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsDownloadResponse.BaseResponse)
}

// required int32 StartPos = 2;
inline bool SnsDownloadResponse::has_startpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsDownloadResponse::set_has_startpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsDownloadResponse::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsDownloadResponse::clear_startpos() {
  startpos_ = 0;
  clear_has_startpos();
}
inline ::google::protobuf::int32 SnsDownloadResponse::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadResponse.StartPos)
  return startpos_;
}
inline void SnsDownloadResponse::set_startpos(::google::protobuf::int32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsDownloadResponse.StartPos)
}

// required int32 TotalLen = 3;
inline bool SnsDownloadResponse::has_totallen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsDownloadResponse::set_has_totallen() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsDownloadResponse::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsDownloadResponse::clear_totallen() {
  totallen_ = 0;
  clear_has_totallen();
}
inline ::google::protobuf::int32 SnsDownloadResponse::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadResponse.TotalLen)
  return totallen_;
}
inline void SnsDownloadResponse::set_totallen(::google::protobuf::int32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsDownloadResponse.TotalLen)
}

// required .micromsg.SKBuiltinBuffer_t Buffer = 4;
inline bool SnsDownloadResponse::has_buffer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsDownloadResponse::set_has_buffer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsDownloadResponse::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsDownloadResponse::clear_buffer() {
  if (buffer_ != NULL) buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buffer();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsDownloadResponse::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadResponse.Buffer)
  return buffer_ != NULL ? *buffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsDownloadResponse::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == NULL) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsDownloadResponse.Buffer)
  return buffer_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsDownloadResponse::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.SnsDownloadResponse.Buffer)
  clear_has_buffer();
  ::micromsg::SKBuiltinBuffer_t* temp = buffer_;
  buffer_ = NULL;
  return temp;
}
inline void SnsDownloadResponse::set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer) {
  delete buffer_;
  buffer_ = buffer;
  if (buffer) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsDownloadResponse.Buffer)
}

// optional string BufferId = 5;
inline bool SnsDownloadResponse::has_bufferid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsDownloadResponse::set_has_bufferid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsDownloadResponse::clear_has_bufferid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsDownloadResponse::clear_bufferid() {
  bufferid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bufferid();
}
inline const ::std::string& SnsDownloadResponse::bufferid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadResponse.BufferId)
  return bufferid_.GetNoArena();
}
inline void SnsDownloadResponse::set_bufferid(const ::std::string& value) {
  set_has_bufferid();
  bufferid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsDownloadResponse.BufferId)
}
#if LANG_CXX11
inline void SnsDownloadResponse::set_bufferid(::std::string&& value) {
  set_has_bufferid();
  bufferid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsDownloadResponse.BufferId)
}
#endif
inline void SnsDownloadResponse::set_bufferid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bufferid();
  bufferid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsDownloadResponse.BufferId)
}
inline void SnsDownloadResponse::set_bufferid(const char* value, size_t size) {
  set_has_bufferid();
  bufferid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsDownloadResponse.BufferId)
}
inline ::std::string* SnsDownloadResponse::mutable_bufferid() {
  set_has_bufferid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsDownloadResponse.BufferId)
  return bufferid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsDownloadResponse::release_bufferid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsDownloadResponse.BufferId)
  clear_has_bufferid();
  return bufferid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsDownloadResponse::set_allocated_bufferid(::std::string* bufferid) {
  if (bufferid != NULL) {
    set_has_bufferid();
  } else {
    clear_has_bufferid();
  }
  bufferid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bufferid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsDownloadResponse.BufferId)
}

// required uint32 Type = 6;
inline bool SnsDownloadResponse::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsDownloadResponse::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsDownloadResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsDownloadResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SnsDownloadResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsDownloadResponse.Type)
  return type_;
}
inline void SnsDownloadResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsDownloadResponse.Type)
}

// -------------------------------------------------------------------

// SnsCommentInfo

// optional string Username = 1;
inline bool SnsCommentInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsCommentInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsCommentInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsCommentInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& SnsCommentInfo::username() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.Username)
  return username_.GetNoArena();
}
inline void SnsCommentInfo::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.Username)
}
#if LANG_CXX11
inline void SnsCommentInfo::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsCommentInfo.Username)
}
#endif
inline void SnsCommentInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsCommentInfo.Username)
}
inline void SnsCommentInfo::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsCommentInfo.Username)
}
inline ::std::string* SnsCommentInfo::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsCommentInfo.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsCommentInfo::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.SnsCommentInfo.Username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsCommentInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsCommentInfo.Username)
}

// optional string Nickname = 2;
inline bool SnsCommentInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsCommentInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsCommentInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsCommentInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SnsCommentInfo::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.Nickname)
  return nickname_.GetNoArena();
}
inline void SnsCommentInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.Nickname)
}
#if LANG_CXX11
inline void SnsCommentInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsCommentInfo.Nickname)
}
#endif
inline void SnsCommentInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsCommentInfo.Nickname)
}
inline void SnsCommentInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsCommentInfo.Nickname)
}
inline ::std::string* SnsCommentInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsCommentInfo.Nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsCommentInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.SnsCommentInfo.Nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsCommentInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsCommentInfo.Nickname)
}

// required uint32 Source = 3;
inline bool SnsCommentInfo::has_source() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsCommentInfo::set_has_source() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsCommentInfo::clear_has_source() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsCommentInfo::clear_source() {
  source_ = 0u;
  clear_has_source();
}
inline ::google::protobuf::uint32 SnsCommentInfo::source() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.Source)
  return source_;
}
inline void SnsCommentInfo::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.Source)
}

// required uint32 Type = 4;
inline bool SnsCommentInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsCommentInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsCommentInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsCommentInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SnsCommentInfo::type() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.Type)
  return type_;
}
inline void SnsCommentInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.Type)
}

// optional string Content = 5;
inline bool SnsCommentInfo::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsCommentInfo::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsCommentInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsCommentInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& SnsCommentInfo::content() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.Content)
  return content_.GetNoArena();
}
inline void SnsCommentInfo::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.Content)
}
#if LANG_CXX11
inline void SnsCommentInfo::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsCommentInfo.Content)
}
#endif
inline void SnsCommentInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsCommentInfo.Content)
}
inline void SnsCommentInfo::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsCommentInfo.Content)
}
inline ::std::string* SnsCommentInfo::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsCommentInfo.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsCommentInfo::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.SnsCommentInfo.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsCommentInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsCommentInfo.Content)
}

// required uint32 CreateTime = 6;
inline bool SnsCommentInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsCommentInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsCommentInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsCommentInfo::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 SnsCommentInfo::createtime() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.CreateTime)
  return createtime_;
}
inline void SnsCommentInfo::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.CreateTime)
}

// optional int32 CommentId = 7;
inline bool SnsCommentInfo::has_commentid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnsCommentInfo::set_has_commentid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnsCommentInfo::clear_has_commentid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnsCommentInfo::clear_commentid() {
  commentid_ = 0;
  clear_has_commentid();
}
inline ::google::protobuf::int32 SnsCommentInfo::commentid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.CommentId)
  return commentid_;
}
inline void SnsCommentInfo::set_commentid(::google::protobuf::int32 value) {
  set_has_commentid();
  commentid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.CommentId)
}

// optional int32 ReplyCommentId = 8;
inline bool SnsCommentInfo::has_replycommentid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SnsCommentInfo::set_has_replycommentid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SnsCommentInfo::clear_has_replycommentid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SnsCommentInfo::clear_replycommentid() {
  replycommentid_ = 0;
  clear_has_replycommentid();
}
inline ::google::protobuf::int32 SnsCommentInfo::replycommentid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.ReplyCommentId)
  return replycommentid_;
}
inline void SnsCommentInfo::set_replycommentid(::google::protobuf::int32 value) {
  set_has_replycommentid();
  replycommentid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.ReplyCommentId)
}

// optional string ReplyUsername = 9;
inline bool SnsCommentInfo::has_replyusername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsCommentInfo::set_has_replyusername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsCommentInfo::clear_has_replyusername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsCommentInfo::clear_replyusername() {
  replyusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_replyusername();
}
inline const ::std::string& SnsCommentInfo::replyusername() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.ReplyUsername)
  return replyusername_.GetNoArena();
}
inline void SnsCommentInfo::set_replyusername(const ::std::string& value) {
  set_has_replyusername();
  replyusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.ReplyUsername)
}
#if LANG_CXX11
inline void SnsCommentInfo::set_replyusername(::std::string&& value) {
  set_has_replyusername();
  replyusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsCommentInfo.ReplyUsername)
}
#endif
inline void SnsCommentInfo::set_replyusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_replyusername();
  replyusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsCommentInfo.ReplyUsername)
}
inline void SnsCommentInfo::set_replyusername(const char* value, size_t size) {
  set_has_replyusername();
  replyusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsCommentInfo.ReplyUsername)
}
inline ::std::string* SnsCommentInfo::mutable_replyusername() {
  set_has_replyusername();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsCommentInfo.ReplyUsername)
  return replyusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsCommentInfo::release_replyusername() {
  // @@protoc_insertion_point(field_release:micromsg.SnsCommentInfo.ReplyUsername)
  clear_has_replyusername();
  return replyusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsCommentInfo::set_allocated_replyusername(::std::string* replyusername) {
  if (replyusername != NULL) {
    set_has_replyusername();
  } else {
    clear_has_replyusername();
  }
  replyusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), replyusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsCommentInfo.ReplyUsername)
}

// optional uint32 IsNotRichText = 10;
inline bool SnsCommentInfo::has_isnotrichtext() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SnsCommentInfo::set_has_isnotrichtext() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SnsCommentInfo::clear_has_isnotrichtext() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SnsCommentInfo::clear_isnotrichtext() {
  isnotrichtext_ = 0u;
  clear_has_isnotrichtext();
}
inline ::google::protobuf::uint32 SnsCommentInfo::isnotrichtext() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.IsNotRichText)
  return isnotrichtext_;
}
inline void SnsCommentInfo::set_isnotrichtext(::google::protobuf::uint32 value) {
  set_has_isnotrichtext();
  isnotrichtext_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.IsNotRichText)
}

// optional uint64 ReplyCommentId2 = 11;
inline bool SnsCommentInfo::has_replycommentid2() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SnsCommentInfo::set_has_replycommentid2() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SnsCommentInfo::clear_has_replycommentid2() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SnsCommentInfo::clear_replycommentid2() {
  replycommentid2_ = GOOGLE_ULONGLONG(0);
  clear_has_replycommentid2();
}
inline ::google::protobuf::uint64 SnsCommentInfo::replycommentid2() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.ReplyCommentId2)
  return replycommentid2_;
}
inline void SnsCommentInfo::set_replycommentid2(::google::protobuf::uint64 value) {
  set_has_replycommentid2();
  replycommentid2_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.ReplyCommentId2)
}

// optional uint64 CommentId2 = 12;
inline bool SnsCommentInfo::has_commentid2() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SnsCommentInfo::set_has_commentid2() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SnsCommentInfo::clear_has_commentid2() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SnsCommentInfo::clear_commentid2() {
  commentid2_ = GOOGLE_ULONGLONG(0);
  clear_has_commentid2();
}
inline ::google::protobuf::uint64 SnsCommentInfo::commentid2() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.CommentId2)
  return commentid2_;
}
inline void SnsCommentInfo::set_commentid2(::google::protobuf::uint64 value) {
  set_has_commentid2();
  commentid2_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.CommentId2)
}

// optional uint32 DeleteFlag = 13;
inline bool SnsCommentInfo::has_deleteflag() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SnsCommentInfo::set_has_deleteflag() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SnsCommentInfo::clear_has_deleteflag() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SnsCommentInfo::clear_deleteflag() {
  deleteflag_ = 0u;
  clear_has_deleteflag();
}
inline ::google::protobuf::uint32 SnsCommentInfo::deleteflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentInfo.DeleteFlag)
  return deleteflag_;
}
inline void SnsCommentInfo::set_deleteflag(::google::protobuf::uint32 value) {
  set_has_deleteflag();
  deleteflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentInfo.DeleteFlag)
}

// -------------------------------------------------------------------

// SnsGroup

// required uint64 GroupId = 1;
inline bool SnsGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsGroup::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
  clear_has_groupid();
}
inline ::google::protobuf::uint64 SnsGroup::groupid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGroup.GroupId)
  return groupid_;
}
inline void SnsGroup::set_groupid(::google::protobuf::uint64 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsGroup.GroupId)
}

// -------------------------------------------------------------------

// SnsObject

// required uint64 Id = 1;
inline bool SnsObject::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsObject::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsObject::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsObject::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 SnsObject::id() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.Id)
  return id_;
}
inline void SnsObject::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.Id)
}

// optional string Username = 2;
inline bool SnsObject::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsObject::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsObject::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsObject::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& SnsObject::username() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.Username)
  return username_.GetNoArena();
}
inline void SnsObject::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.Username)
}
#if LANG_CXX11
inline void SnsObject::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsObject.Username)
}
#endif
inline void SnsObject::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsObject.Username)
}
inline void SnsObject::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsObject.Username)
}
inline ::std::string* SnsObject::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObject.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsObject::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.SnsObject.Username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsObject::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsObject.Username)
}

// optional string Nickname = 3;
inline bool SnsObject::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsObject::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsObject::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsObject::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SnsObject::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.Nickname)
  return nickname_.GetNoArena();
}
inline void SnsObject::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.Nickname)
}
#if LANG_CXX11
inline void SnsObject::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsObject.Nickname)
}
#endif
inline void SnsObject::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsObject.Nickname)
}
inline void SnsObject::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsObject.Nickname)
}
inline ::std::string* SnsObject::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObject.Nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsObject::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.SnsObject.Nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsObject::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsObject.Nickname)
}

// required uint32 CreateTime = 4;
inline bool SnsObject::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsObject::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsObject::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsObject::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 SnsObject::createtime() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.CreateTime)
  return createtime_;
}
inline void SnsObject::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.CreateTime)
}

// required .micromsg.SKBuiltinBuffer_t ObjectDesc = 5;
inline bool SnsObject::has_objectdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsObject::set_has_objectdesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsObject::clear_has_objectdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsObject::clear_objectdesc() {
  if (objectdesc_ != NULL) objectdesc_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_objectdesc();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsObject::objectdesc() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.ObjectDesc)
  return objectdesc_ != NULL ? *objectdesc_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsObject::mutable_objectdesc() {
  set_has_objectdesc();
  if (objectdesc_ == NULL) {
    objectdesc_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObject.ObjectDesc)
  return objectdesc_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsObject::release_objectdesc() {
  // @@protoc_insertion_point(field_release:micromsg.SnsObject.ObjectDesc)
  clear_has_objectdesc();
  ::micromsg::SKBuiltinBuffer_t* temp = objectdesc_;
  objectdesc_ = NULL;
  return temp;
}
inline void SnsObject::set_allocated_objectdesc(::micromsg::SKBuiltinBuffer_t* objectdesc) {
  delete objectdesc_;
  objectdesc_ = objectdesc;
  if (objectdesc) {
    set_has_objectdesc();
  } else {
    clear_has_objectdesc();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsObject.ObjectDesc)
}

// required uint32 LikeFlag = 6;
inline bool SnsObject::has_likeflag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsObject::set_has_likeflag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsObject::clear_has_likeflag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsObject::clear_likeflag() {
  likeflag_ = 0u;
  clear_has_likeflag();
}
inline ::google::protobuf::uint32 SnsObject::likeflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.LikeFlag)
  return likeflag_;
}
inline void SnsObject::set_likeflag(::google::protobuf::uint32 value) {
  set_has_likeflag();
  likeflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.LikeFlag)
}

// required uint32 LikeCount = 7;
inline bool SnsObject::has_likecount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnsObject::set_has_likecount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnsObject::clear_has_likecount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnsObject::clear_likecount() {
  likecount_ = 0u;
  clear_has_likecount();
}
inline ::google::protobuf::uint32 SnsObject::likecount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.LikeCount)
  return likecount_;
}
inline void SnsObject::set_likecount(::google::protobuf::uint32 value) {
  set_has_likecount();
  likecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.LikeCount)
}

// required uint32 LikeUserListCount = 8;
inline bool SnsObject::has_likeuserlistcount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SnsObject::set_has_likeuserlistcount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SnsObject::clear_has_likeuserlistcount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SnsObject::clear_likeuserlistcount() {
  likeuserlistcount_ = 0u;
  clear_has_likeuserlistcount();
}
inline ::google::protobuf::uint32 SnsObject::likeuserlistcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.LikeUserListCount)
  return likeuserlistcount_;
}
inline void SnsObject::set_likeuserlistcount(::google::protobuf::uint32 value) {
  set_has_likeuserlistcount();
  likeuserlistcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.LikeUserListCount)
}

// repeated .micromsg.SnsCommentInfo LikeUserList = 9;
inline int SnsObject::likeuserlist_size() const {
  return likeuserlist_.size();
}
inline void SnsObject::clear_likeuserlist() {
  likeuserlist_.Clear();
}
inline const ::micromsg::SnsCommentInfo& SnsObject::likeuserlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.LikeUserList)
  return likeuserlist_.Get(index);
}
inline ::micromsg::SnsCommentInfo* SnsObject::mutable_likeuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObject.LikeUserList)
  return likeuserlist_.Mutable(index);
}
inline ::micromsg::SnsCommentInfo* SnsObject::add_likeuserlist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsObject.LikeUserList)
  return likeuserlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >*
SnsObject::mutable_likeuserlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsObject.LikeUserList)
  return &likeuserlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >&
SnsObject::likeuserlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsObject.LikeUserList)
  return likeuserlist_;
}

// required uint32 CommentCount = 10;
inline bool SnsObject::has_commentcount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SnsObject::set_has_commentcount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SnsObject::clear_has_commentcount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SnsObject::clear_commentcount() {
  commentcount_ = 0u;
  clear_has_commentcount();
}
inline ::google::protobuf::uint32 SnsObject::commentcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.CommentCount)
  return commentcount_;
}
inline void SnsObject::set_commentcount(::google::protobuf::uint32 value) {
  set_has_commentcount();
  commentcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.CommentCount)
}

// required uint32 CommentUserListCount = 11;
inline bool SnsObject::has_commentuserlistcount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SnsObject::set_has_commentuserlistcount() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SnsObject::clear_has_commentuserlistcount() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SnsObject::clear_commentuserlistcount() {
  commentuserlistcount_ = 0u;
  clear_has_commentuserlistcount();
}
inline ::google::protobuf::uint32 SnsObject::commentuserlistcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.CommentUserListCount)
  return commentuserlistcount_;
}
inline void SnsObject::set_commentuserlistcount(::google::protobuf::uint32 value) {
  set_has_commentuserlistcount();
  commentuserlistcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.CommentUserListCount)
}

// repeated .micromsg.SnsCommentInfo CommentUserList = 12;
inline int SnsObject::commentuserlist_size() const {
  return commentuserlist_.size();
}
inline void SnsObject::clear_commentuserlist() {
  commentuserlist_.Clear();
}
inline const ::micromsg::SnsCommentInfo& SnsObject::commentuserlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.CommentUserList)
  return commentuserlist_.Get(index);
}
inline ::micromsg::SnsCommentInfo* SnsObject::mutable_commentuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObject.CommentUserList)
  return commentuserlist_.Mutable(index);
}
inline ::micromsg::SnsCommentInfo* SnsObject::add_commentuserlist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsObject.CommentUserList)
  return commentuserlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >*
SnsObject::mutable_commentuserlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsObject.CommentUserList)
  return &commentuserlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >&
SnsObject::commentuserlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsObject.CommentUserList)
  return commentuserlist_;
}

// required uint32 WithUserCount = 13;
inline bool SnsObject::has_withusercount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SnsObject::set_has_withusercount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SnsObject::clear_has_withusercount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SnsObject::clear_withusercount() {
  withusercount_ = 0u;
  clear_has_withusercount();
}
inline ::google::protobuf::uint32 SnsObject::withusercount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.WithUserCount)
  return withusercount_;
}
inline void SnsObject::set_withusercount(::google::protobuf::uint32 value) {
  set_has_withusercount();
  withusercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.WithUserCount)
}

// required uint32 WithUserListCount = 14;
inline bool SnsObject::has_withuserlistcount() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SnsObject::set_has_withuserlistcount() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SnsObject::clear_has_withuserlistcount() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SnsObject::clear_withuserlistcount() {
  withuserlistcount_ = 0u;
  clear_has_withuserlistcount();
}
inline ::google::protobuf::uint32 SnsObject::withuserlistcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.WithUserListCount)
  return withuserlistcount_;
}
inline void SnsObject::set_withuserlistcount(::google::protobuf::uint32 value) {
  set_has_withuserlistcount();
  withuserlistcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.WithUserListCount)
}

// repeated .micromsg.SnsCommentInfo WithUserList = 15;
inline int SnsObject::withuserlist_size() const {
  return withuserlist_.size();
}
inline void SnsObject::clear_withuserlist() {
  withuserlist_.Clear();
}
inline const ::micromsg::SnsCommentInfo& SnsObject::withuserlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.WithUserList)
  return withuserlist_.Get(index);
}
inline ::micromsg::SnsCommentInfo* SnsObject::mutable_withuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObject.WithUserList)
  return withuserlist_.Mutable(index);
}
inline ::micromsg::SnsCommentInfo* SnsObject::add_withuserlist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsObject.WithUserList)
  return withuserlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >*
SnsObject::mutable_withuserlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsObject.WithUserList)
  return &withuserlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsCommentInfo >&
SnsObject::withuserlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsObject.WithUserList)
  return withuserlist_;
}

// optional uint32 ExtFlag = 16;
inline bool SnsObject::has_extflag() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SnsObject::set_has_extflag() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SnsObject::clear_has_extflag() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SnsObject::clear_extflag() {
  extflag_ = 0u;
  clear_has_extflag();
}
inline ::google::protobuf::uint32 SnsObject::extflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.ExtFlag)
  return extflag_;
}
inline void SnsObject::set_extflag(::google::protobuf::uint32 value) {
  set_has_extflag();
  extflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.ExtFlag)
}

// optional uint32 NoChange = 17;
inline bool SnsObject::has_nochange() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SnsObject::set_has_nochange() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SnsObject::clear_has_nochange() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SnsObject::clear_nochange() {
  nochange_ = 0u;
  clear_has_nochange();
}
inline ::google::protobuf::uint32 SnsObject::nochange() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.NoChange)
  return nochange_;
}
inline void SnsObject::set_nochange(::google::protobuf::uint32 value) {
  set_has_nochange();
  nochange_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.NoChange)
}

// optional uint32 GroupCount = 18;
inline bool SnsObject::has_groupcount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SnsObject::set_has_groupcount() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SnsObject::clear_has_groupcount() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SnsObject::clear_groupcount() {
  groupcount_ = 0u;
  clear_has_groupcount();
}
inline ::google::protobuf::uint32 SnsObject::groupcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.GroupCount)
  return groupcount_;
}
inline void SnsObject::set_groupcount(::google::protobuf::uint32 value) {
  set_has_groupcount();
  groupcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.GroupCount)
}

// repeated .micromsg.SnsGroup GroupList = 19;
inline int SnsObject::grouplist_size() const {
  return grouplist_.size();
}
inline void SnsObject::clear_grouplist() {
  grouplist_.Clear();
}
inline const ::micromsg::SnsGroup& SnsObject::grouplist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.GroupList)
  return grouplist_.Get(index);
}
inline ::micromsg::SnsGroup* SnsObject::mutable_grouplist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObject.GroupList)
  return grouplist_.Mutable(index);
}
inline ::micromsg::SnsGroup* SnsObject::add_grouplist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsObject.GroupList)
  return grouplist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsGroup >*
SnsObject::mutable_grouplist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsObject.GroupList)
  return &grouplist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsGroup >&
SnsObject::grouplist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsObject.GroupList)
  return grouplist_;
}

// optional uint32 IsNotRichText = 20;
inline bool SnsObject::has_isnotrichtext() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SnsObject::set_has_isnotrichtext() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SnsObject::clear_has_isnotrichtext() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SnsObject::clear_isnotrichtext() {
  isnotrichtext_ = 0u;
  clear_has_isnotrichtext();
}
inline ::google::protobuf::uint32 SnsObject::isnotrichtext() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.IsNotRichText)
  return isnotrichtext_;
}
inline void SnsObject::set_isnotrichtext(::google::protobuf::uint32 value) {
  set_has_isnotrichtext();
  isnotrichtext_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.IsNotRichText)
}

// optional string ReferUsername = 21;
inline bool SnsObject::has_referusername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsObject::set_has_referusername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsObject::clear_has_referusername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsObject::clear_referusername() {
  referusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_referusername();
}
inline const ::std::string& SnsObject::referusername() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.ReferUsername)
  return referusername_.GetNoArena();
}
inline void SnsObject::set_referusername(const ::std::string& value) {
  set_has_referusername();
  referusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.ReferUsername)
}
#if LANG_CXX11
inline void SnsObject::set_referusername(::std::string&& value) {
  set_has_referusername();
  referusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsObject.ReferUsername)
}
#endif
inline void SnsObject::set_referusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_referusername();
  referusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsObject.ReferUsername)
}
inline void SnsObject::set_referusername(const char* value, size_t size) {
  set_has_referusername();
  referusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsObject.ReferUsername)
}
inline ::std::string* SnsObject::mutable_referusername() {
  set_has_referusername();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObject.ReferUsername)
  return referusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsObject::release_referusername() {
  // @@protoc_insertion_point(field_release:micromsg.SnsObject.ReferUsername)
  clear_has_referusername();
  return referusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsObject::set_allocated_referusername(::std::string* referusername) {
  if (referusername != NULL) {
    set_has_referusername();
  } else {
    clear_has_referusername();
  }
  referusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsObject.ReferUsername)
}

// optional uint64 ReferId = 22;
inline bool SnsObject::has_referid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SnsObject::set_has_referid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SnsObject::clear_has_referid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SnsObject::clear_referid() {
  referid_ = GOOGLE_ULONGLONG(0);
  clear_has_referid();
}
inline ::google::protobuf::uint64 SnsObject::referid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.ReferId)
  return referid_;
}
inline void SnsObject::set_referid(::google::protobuf::uint64 value) {
  set_has_referid();
  referid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.ReferId)
}

// optional uint32 BlackListCount = 23;
inline bool SnsObject::has_blacklistcount() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SnsObject::set_has_blacklistcount() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SnsObject::clear_has_blacklistcount() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SnsObject::clear_blacklistcount() {
  blacklistcount_ = 0u;
  clear_has_blacklistcount();
}
inline ::google::protobuf::uint32 SnsObject::blacklistcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.BlackListCount)
  return blacklistcount_;
}
inline void SnsObject::set_blacklistcount(::google::protobuf::uint32 value) {
  set_has_blacklistcount();
  blacklistcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.BlackListCount)
}

// repeated .micromsg.SKBuiltinString_t BlackList = 24;
inline int SnsObject::blacklist_size() const {
  return blacklist_.size();
}
inline void SnsObject::clear_blacklist() {
  blacklist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& SnsObject::blacklist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.BlackList)
  return blacklist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* SnsObject::mutable_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObject.BlackList)
  return blacklist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* SnsObject::add_blacklist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsObject.BlackList)
  return blacklist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
SnsObject::mutable_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsObject.BlackList)
  return &blacklist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
SnsObject::blacklist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsObject.BlackList)
  return blacklist_;
}

// optional uint32 DeleteFlag = 25;
inline bool SnsObject::has_deleteflag() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SnsObject::set_has_deleteflag() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SnsObject::clear_has_deleteflag() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SnsObject::clear_deleteflag() {
  deleteflag_ = 0u;
  clear_has_deleteflag();
}
inline ::google::protobuf::uint32 SnsObject::deleteflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.DeleteFlag)
  return deleteflag_;
}
inline void SnsObject::set_deleteflag(::google::protobuf::uint32 value) {
  set_has_deleteflag();
  deleteflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.DeleteFlag)
}

// optional uint32 GroupUserCount = 26;
inline bool SnsObject::has_groupusercount() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SnsObject::set_has_groupusercount() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SnsObject::clear_has_groupusercount() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SnsObject::clear_groupusercount() {
  groupusercount_ = 0u;
  clear_has_groupusercount();
}
inline ::google::protobuf::uint32 SnsObject::groupusercount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.GroupUserCount)
  return groupusercount_;
}
inline void SnsObject::set_groupusercount(::google::protobuf::uint32 value) {
  set_has_groupusercount();
  groupusercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObject.GroupUserCount)
}

// repeated .micromsg.SKBuiltinString_t GroupUser = 27;
inline int SnsObject::groupuser_size() const {
  return groupuser_.size();
}
inline void SnsObject::clear_groupuser() {
  groupuser_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& SnsObject::groupuser(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObject.GroupUser)
  return groupuser_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* SnsObject::mutable_groupuser(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObject.GroupUser)
  return groupuser_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* SnsObject::add_groupuser() {
  // @@protoc_insertion_point(field_add:micromsg.SnsObject.GroupUser)
  return groupuser_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
SnsObject::mutable_groupuser() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsObject.GroupUser)
  return &groupuser_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
SnsObject::groupuser() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsObject.GroupUser)
  return groupuser_;
}

// -------------------------------------------------------------------

// SnsADObject

// required .micromsg.SnsObject SnsObject = 1;
inline bool SnsADObject::has_snsobject() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsADObject::set_has_snsobject() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsADObject::clear_has_snsobject() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsADObject::clear_snsobject() {
  if (snsobject_ != NULL) snsobject_->::micromsg::SnsObject::Clear();
  clear_has_snsobject();
}
inline const ::micromsg::SnsObject& SnsADObject::snsobject() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADObject.SnsObject)
  return snsobject_ != NULL ? *snsobject_
                         : *::micromsg::SnsObject::internal_default_instance();
}
inline ::micromsg::SnsObject* SnsADObject::mutable_snsobject() {
  set_has_snsobject();
  if (snsobject_ == NULL) {
    snsobject_ = new ::micromsg::SnsObject;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADObject.SnsObject)
  return snsobject_;
}
inline ::micromsg::SnsObject* SnsADObject::release_snsobject() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADObject.SnsObject)
  clear_has_snsobject();
  ::micromsg::SnsObject* temp = snsobject_;
  snsobject_ = NULL;
  return temp;
}
inline void SnsADObject::set_allocated_snsobject(::micromsg::SnsObject* snsobject) {
  delete snsobject_;
  snsobject_ = snsobject;
  if (snsobject) {
    set_has_snsobject();
  } else {
    clear_has_snsobject();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADObject.SnsObject)
}

// optional .micromsg.SKBuiltinString_t ADXML = 2;
inline bool SnsADObject::has_adxml() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsADObject::set_has_adxml() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsADObject::clear_has_adxml() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsADObject::clear_adxml() {
  if (adxml_ != NULL) adxml_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_adxml();
}
inline const ::micromsg::SKBuiltinString_t& SnsADObject::adxml() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADObject.ADXML)
  return adxml_ != NULL ? *adxml_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* SnsADObject::mutable_adxml() {
  set_has_adxml();
  if (adxml_ == NULL) {
    adxml_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADObject.ADXML)
  return adxml_;
}
inline ::micromsg::SKBuiltinString_t* SnsADObject::release_adxml() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADObject.ADXML)
  clear_has_adxml();
  ::micromsg::SKBuiltinString_t* temp = adxml_;
  adxml_ = NULL;
  return temp;
}
inline void SnsADObject::set_allocated_adxml(::micromsg::SKBuiltinString_t* adxml) {
  delete adxml_;
  adxml_ = adxml;
  if (adxml) {
    set_has_adxml();
  } else {
    clear_has_adxml();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADObject.ADXML)
}

// -------------------------------------------------------------------

// AdvertiseObject

// required .micromsg.SnsADObject SnsADObject = 1;
inline bool AdvertiseObject::has_snsadobject() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdvertiseObject::set_has_snsadobject() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdvertiseObject::clear_has_snsadobject() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdvertiseObject::clear_snsadobject() {
  if (snsadobject_ != NULL) snsadobject_->::micromsg::SnsADObject::Clear();
  clear_has_snsadobject();
}
inline const ::micromsg::SnsADObject& AdvertiseObject::snsadobject() const {
  // @@protoc_insertion_point(field_get:micromsg.AdvertiseObject.SnsADObject)
  return snsadobject_ != NULL ? *snsadobject_
                         : *::micromsg::SnsADObject::internal_default_instance();
}
inline ::micromsg::SnsADObject* AdvertiseObject::mutable_snsadobject() {
  set_has_snsadobject();
  if (snsadobject_ == NULL) {
    snsadobject_ = new ::micromsg::SnsADObject;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AdvertiseObject.SnsADObject)
  return snsadobject_;
}
inline ::micromsg::SnsADObject* AdvertiseObject::release_snsadobject() {
  // @@protoc_insertion_point(field_release:micromsg.AdvertiseObject.SnsADObject)
  clear_has_snsadobject();
  ::micromsg::SnsADObject* temp = snsadobject_;
  snsadobject_ = NULL;
  return temp;
}
inline void AdvertiseObject::set_allocated_snsadobject(::micromsg::SnsADObject* snsadobject) {
  delete snsadobject_;
  snsadobject_ = snsadobject;
  if (snsadobject) {
    set_has_snsadobject();
  } else {
    clear_has_snsadobject();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdvertiseObject.SnsADObject)
}

// optional .micromsg.SKBuiltinString_t ADInfo = 2;
inline bool AdvertiseObject::has_adinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdvertiseObject::set_has_adinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdvertiseObject::clear_has_adinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdvertiseObject::clear_adinfo() {
  if (adinfo_ != NULL) adinfo_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_adinfo();
}
inline const ::micromsg::SKBuiltinString_t& AdvertiseObject::adinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.AdvertiseObject.ADInfo)
  return adinfo_ != NULL ? *adinfo_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* AdvertiseObject::mutable_adinfo() {
  set_has_adinfo();
  if (adinfo_ == NULL) {
    adinfo_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AdvertiseObject.ADInfo)
  return adinfo_;
}
inline ::micromsg::SKBuiltinString_t* AdvertiseObject::release_adinfo() {
  // @@protoc_insertion_point(field_release:micromsg.AdvertiseObject.ADInfo)
  clear_has_adinfo();
  ::micromsg::SKBuiltinString_t* temp = adinfo_;
  adinfo_ = NULL;
  return temp;
}
inline void AdvertiseObject::set_allocated_adinfo(::micromsg::SKBuiltinString_t* adinfo) {
  delete adinfo_;
  adinfo_ = adinfo;
  if (adinfo) {
    set_has_adinfo();
  } else {
    clear_has_adinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdvertiseObject.ADInfo)
}

// -------------------------------------------------------------------

// SnsPostCtocUploadInfo

// required uint32 Flag = 1;
inline bool SnsPostCtocUploadInfo::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsPostCtocUploadInfo::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsPostCtocUploadInfo::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsPostCtocUploadInfo::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 SnsPostCtocUploadInfo::flag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostCtocUploadInfo.Flag)
  return flag_;
}
inline void SnsPostCtocUploadInfo::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostCtocUploadInfo.Flag)
}

// required uint32 PhotoCount = 2;
inline bool SnsPostCtocUploadInfo::has_photocount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsPostCtocUploadInfo::set_has_photocount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsPostCtocUploadInfo::clear_has_photocount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsPostCtocUploadInfo::clear_photocount() {
  photocount_ = 0u;
  clear_has_photocount();
}
inline ::google::protobuf::uint32 SnsPostCtocUploadInfo::photocount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostCtocUploadInfo.PhotoCount)
  return photocount_;
}
inline void SnsPostCtocUploadInfo::set_photocount(::google::protobuf::uint32 value) {
  set_has_photocount();
  photocount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostCtocUploadInfo.PhotoCount)
}

// -------------------------------------------------------------------

// SnsPostRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsPostRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsPostRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsPostRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsPostRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsPostRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsPostRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsPostRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsPostRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsPostRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsPostRequest.BaseRequest)
}

// required .micromsg.SKBuiltinBuffer_t ObjectDesc = 2;
inline bool SnsPostRequest::has_objectdesc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsPostRequest::set_has_objectdesc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsPostRequest::clear_has_objectdesc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsPostRequest::clear_objectdesc() {
  if (objectdesc_ != NULL) objectdesc_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_objectdesc();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsPostRequest::objectdesc() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.ObjectDesc)
  return objectdesc_ != NULL ? *objectdesc_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsPostRequest::mutable_objectdesc() {
  set_has_objectdesc();
  if (objectdesc_ == NULL) {
    objectdesc_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostRequest.ObjectDesc)
  return objectdesc_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsPostRequest::release_objectdesc() {
  // @@protoc_insertion_point(field_release:micromsg.SnsPostRequest.ObjectDesc)
  clear_has_objectdesc();
  ::micromsg::SKBuiltinBuffer_t* temp = objectdesc_;
  objectdesc_ = NULL;
  return temp;
}
inline void SnsPostRequest::set_allocated_objectdesc(::micromsg::SKBuiltinBuffer_t* objectdesc) {
  delete objectdesc_;
  objectdesc_ = objectdesc;
  if (objectdesc) {
    set_has_objectdesc();
  } else {
    clear_has_objectdesc();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsPostRequest.ObjectDesc)
}

// optional uint32 WithUserListCount = 3;
inline bool SnsPostRequest::has_withuserlistcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsPostRequest::set_has_withuserlistcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsPostRequest::clear_has_withuserlistcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsPostRequest::clear_withuserlistcount() {
  withuserlistcount_ = 0u;
  clear_has_withuserlistcount();
}
inline ::google::protobuf::uint32 SnsPostRequest::withuserlistcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.WithUserListCount)
  return withuserlistcount_;
}
inline void SnsPostRequest::set_withuserlistcount(::google::protobuf::uint32 value) {
  set_has_withuserlistcount();
  withuserlistcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostRequest.WithUserListCount)
}

// repeated .micromsg.SKBuiltinString_t WithUserList = 4;
inline int SnsPostRequest::withuserlist_size() const {
  return withuserlist_.size();
}
inline void SnsPostRequest::clear_withuserlist() {
  withuserlist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& SnsPostRequest::withuserlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.WithUserList)
  return withuserlist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* SnsPostRequest::mutable_withuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostRequest.WithUserList)
  return withuserlist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* SnsPostRequest::add_withuserlist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsPostRequest.WithUserList)
  return withuserlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
SnsPostRequest::mutable_withuserlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsPostRequest.WithUserList)
  return &withuserlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
SnsPostRequest::withuserlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsPostRequest.WithUserList)
  return withuserlist_;
}

// optional uint32 Privacy = 5;
inline bool SnsPostRequest::has_privacy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsPostRequest::set_has_privacy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsPostRequest::clear_has_privacy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsPostRequest::clear_privacy() {
  privacy_ = 0u;
  clear_has_privacy();
}
inline ::google::protobuf::uint32 SnsPostRequest::privacy() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.Privacy)
  return privacy_;
}
inline void SnsPostRequest::set_privacy(::google::protobuf::uint32 value) {
  set_has_privacy();
  privacy_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostRequest.Privacy)
}

// optional uint32 SyncFlag = 6;
inline bool SnsPostRequest::has_syncflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnsPostRequest::set_has_syncflag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnsPostRequest::clear_has_syncflag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnsPostRequest::clear_syncflag() {
  syncflag_ = 0u;
  clear_has_syncflag();
}
inline ::google::protobuf::uint32 SnsPostRequest::syncflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.SyncFlag)
  return syncflag_;
}
inline void SnsPostRequest::set_syncflag(::google::protobuf::uint32 value) {
  set_has_syncflag();
  syncflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostRequest.SyncFlag)
}

// optional string ClientId = 7;
inline bool SnsPostRequest::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsPostRequest::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsPostRequest::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsPostRequest::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientid();
}
inline const ::std::string& SnsPostRequest::clientid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.ClientId)
  return clientid_.GetNoArena();
}
inline void SnsPostRequest::set_clientid(const ::std::string& value) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsPostRequest.ClientId)
}
#if LANG_CXX11
inline void SnsPostRequest::set_clientid(::std::string&& value) {
  set_has_clientid();
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsPostRequest.ClientId)
}
#endif
inline void SnsPostRequest::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsPostRequest.ClientId)
}
inline void SnsPostRequest::set_clientid(const char* value, size_t size) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsPostRequest.ClientId)
}
inline ::std::string* SnsPostRequest::mutable_clientid() {
  set_has_clientid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostRequest.ClientId)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsPostRequest::release_clientid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsPostRequest.ClientId)
  clear_has_clientid();
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsPostRequest::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    set_has_clientid();
  } else {
    clear_has_clientid();
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsPostRequest.ClientId)
}

// optional uint32 PostBGImgType = 8;
inline bool SnsPostRequest::has_postbgimgtype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SnsPostRequest::set_has_postbgimgtype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SnsPostRequest::clear_has_postbgimgtype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SnsPostRequest::clear_postbgimgtype() {
  postbgimgtype_ = 0u;
  clear_has_postbgimgtype();
}
inline ::google::protobuf::uint32 SnsPostRequest::postbgimgtype() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.PostBGImgType)
  return postbgimgtype_;
}
inline void SnsPostRequest::set_postbgimgtype(::google::protobuf::uint32 value) {
  set_has_postbgimgtype();
  postbgimgtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostRequest.PostBGImgType)
}

// optional uint32 GroupCount = 9;
inline bool SnsPostRequest::has_groupcount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SnsPostRequest::set_has_groupcount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SnsPostRequest::clear_has_groupcount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SnsPostRequest::clear_groupcount() {
  groupcount_ = 0u;
  clear_has_groupcount();
}
inline ::google::protobuf::uint32 SnsPostRequest::groupcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.GroupCount)
  return groupcount_;
}
inline void SnsPostRequest::set_groupcount(::google::protobuf::uint32 value) {
  set_has_groupcount();
  groupcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostRequest.GroupCount)
}

// repeated .micromsg.SnsGroup GroupIds = 10;
inline int SnsPostRequest::groupids_size() const {
  return groupids_.size();
}
inline void SnsPostRequest::clear_groupids() {
  groupids_.Clear();
}
inline const ::micromsg::SnsGroup& SnsPostRequest::groupids(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.GroupIds)
  return groupids_.Get(index);
}
inline ::micromsg::SnsGroup* SnsPostRequest::mutable_groupids(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostRequest.GroupIds)
  return groupids_.Mutable(index);
}
inline ::micromsg::SnsGroup* SnsPostRequest::add_groupids() {
  // @@protoc_insertion_point(field_add:micromsg.SnsPostRequest.GroupIds)
  return groupids_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsGroup >*
SnsPostRequest::mutable_groupids() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsPostRequest.GroupIds)
  return &groupids_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsGroup >&
SnsPostRequest::groupids() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsPostRequest.GroupIds)
  return groupids_;
}

// optional uint32 ObjectSource = 11;
inline bool SnsPostRequest::has_objectsource() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SnsPostRequest::set_has_objectsource() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SnsPostRequest::clear_has_objectsource() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SnsPostRequest::clear_objectsource() {
  objectsource_ = 0u;
  clear_has_objectsource();
}
inline ::google::protobuf::uint32 SnsPostRequest::objectsource() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.ObjectSource)
  return objectsource_;
}
inline void SnsPostRequest::set_objectsource(::google::protobuf::uint32 value) {
  set_has_objectsource();
  objectsource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostRequest.ObjectSource)
}

// optional uint64 ReferId = 12;
inline bool SnsPostRequest::has_referid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SnsPostRequest::set_has_referid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SnsPostRequest::clear_has_referid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SnsPostRequest::clear_referid() {
  referid_ = GOOGLE_ULONGLONG(0);
  clear_has_referid();
}
inline ::google::protobuf::uint64 SnsPostRequest::referid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.ReferId)
  return referid_;
}
inline void SnsPostRequest::set_referid(::google::protobuf::uint64 value) {
  set_has_referid();
  referid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostRequest.ReferId)
}

// optional uint32 BlackListCount = 13;
inline bool SnsPostRequest::has_blacklistcount() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SnsPostRequest::set_has_blacklistcount() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SnsPostRequest::clear_has_blacklistcount() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SnsPostRequest::clear_blacklistcount() {
  blacklistcount_ = 0u;
  clear_has_blacklistcount();
}
inline ::google::protobuf::uint32 SnsPostRequest::blacklistcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.BlackListCount)
  return blacklistcount_;
}
inline void SnsPostRequest::set_blacklistcount(::google::protobuf::uint32 value) {
  set_has_blacklistcount();
  blacklistcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostRequest.BlackListCount)
}

// repeated .micromsg.SKBuiltinString_t BlackList = 14;
inline int SnsPostRequest::blacklist_size() const {
  return blacklist_.size();
}
inline void SnsPostRequest::clear_blacklist() {
  blacklist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& SnsPostRequest::blacklist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.BlackList)
  return blacklist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* SnsPostRequest::mutable_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostRequest.BlackList)
  return blacklist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* SnsPostRequest::add_blacklist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsPostRequest.BlackList)
  return blacklist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
SnsPostRequest::mutable_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsPostRequest.BlackList)
  return &blacklist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
SnsPostRequest::blacklist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsPostRequest.BlackList)
  return blacklist_;
}

// optional .micromsg.TwitterInfo TwitterInfo = 15;
inline bool SnsPostRequest::has_twitterinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsPostRequest::set_has_twitterinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsPostRequest::clear_has_twitterinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsPostRequest::clear_twitterinfo() {
  if (twitterinfo_ != NULL) twitterinfo_->::micromsg::TwitterInfo::Clear();
  clear_has_twitterinfo();
}
inline const ::micromsg::TwitterInfo& SnsPostRequest::twitterinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.TwitterInfo)
  return twitterinfo_ != NULL ? *twitterinfo_
                         : *::micromsg::TwitterInfo::internal_default_instance();
}
inline ::micromsg::TwitterInfo* SnsPostRequest::mutable_twitterinfo() {
  set_has_twitterinfo();
  if (twitterinfo_ == NULL) {
    twitterinfo_ = new ::micromsg::TwitterInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostRequest.TwitterInfo)
  return twitterinfo_;
}
inline ::micromsg::TwitterInfo* SnsPostRequest::release_twitterinfo() {
  // @@protoc_insertion_point(field_release:micromsg.SnsPostRequest.TwitterInfo)
  clear_has_twitterinfo();
  ::micromsg::TwitterInfo* temp = twitterinfo_;
  twitterinfo_ = NULL;
  return temp;
}
inline void SnsPostRequest::set_allocated_twitterinfo(::micromsg::TwitterInfo* twitterinfo) {
  delete twitterinfo_;
  twitterinfo_ = twitterinfo;
  if (twitterinfo) {
    set_has_twitterinfo();
  } else {
    clear_has_twitterinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsPostRequest.TwitterInfo)
}

// optional uint32 GroupUserCount = 16;
inline bool SnsPostRequest::has_groupusercount() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SnsPostRequest::set_has_groupusercount() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SnsPostRequest::clear_has_groupusercount() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SnsPostRequest::clear_groupusercount() {
  groupusercount_ = 0u;
  clear_has_groupusercount();
}
inline ::google::protobuf::uint32 SnsPostRequest::groupusercount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.GroupUserCount)
  return groupusercount_;
}
inline void SnsPostRequest::set_groupusercount(::google::protobuf::uint32 value) {
  set_has_groupusercount();
  groupusercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsPostRequest.GroupUserCount)
}

// repeated .micromsg.SKBuiltinString_t GroupUser = 17;
inline int SnsPostRequest::groupuser_size() const {
  return groupuser_.size();
}
inline void SnsPostRequest::clear_groupuser() {
  groupuser_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& SnsPostRequest::groupuser(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.GroupUser)
  return groupuser_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* SnsPostRequest::mutable_groupuser(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostRequest.GroupUser)
  return groupuser_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* SnsPostRequest::add_groupuser() {
  // @@protoc_insertion_point(field_add:micromsg.SnsPostRequest.GroupUser)
  return groupuser_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
SnsPostRequest::mutable_groupuser() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsPostRequest.GroupUser)
  return &groupuser_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
SnsPostRequest::groupuser() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsPostRequest.GroupUser)
  return groupuser_;
}

// optional .micromsg.SnsPostCtocUploadInfo CtocUploadInfo = 18;
inline bool SnsPostRequest::has_ctocuploadinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsPostRequest::set_has_ctocuploadinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsPostRequest::clear_has_ctocuploadinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsPostRequest::clear_ctocuploadinfo() {
  if (ctocuploadinfo_ != NULL) ctocuploadinfo_->::micromsg::SnsPostCtocUploadInfo::Clear();
  clear_has_ctocuploadinfo();
}
inline const ::micromsg::SnsPostCtocUploadInfo& SnsPostRequest::ctocuploadinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostRequest.CtocUploadInfo)
  return ctocuploadinfo_ != NULL ? *ctocuploadinfo_
                         : *::micromsg::SnsPostCtocUploadInfo::internal_default_instance();
}
inline ::micromsg::SnsPostCtocUploadInfo* SnsPostRequest::mutable_ctocuploadinfo() {
  set_has_ctocuploadinfo();
  if (ctocuploadinfo_ == NULL) {
    ctocuploadinfo_ = new ::micromsg::SnsPostCtocUploadInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostRequest.CtocUploadInfo)
  return ctocuploadinfo_;
}
inline ::micromsg::SnsPostCtocUploadInfo* SnsPostRequest::release_ctocuploadinfo() {
  // @@protoc_insertion_point(field_release:micromsg.SnsPostRequest.CtocUploadInfo)
  clear_has_ctocuploadinfo();
  ::micromsg::SnsPostCtocUploadInfo* temp = ctocuploadinfo_;
  ctocuploadinfo_ = NULL;
  return temp;
}
inline void SnsPostRequest::set_allocated_ctocuploadinfo(::micromsg::SnsPostCtocUploadInfo* ctocuploadinfo) {
  delete ctocuploadinfo_;
  ctocuploadinfo_ = ctocuploadinfo;
  if (ctocuploadinfo) {
    set_has_ctocuploadinfo();
  } else {
    clear_has_ctocuploadinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsPostRequest.CtocUploadInfo)
}

// -------------------------------------------------------------------

// SnsPostResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsPostResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsPostResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsPostResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsPostResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsPostResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsPostResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsPostResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsPostResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsPostResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsPostResponse.BaseResponse)
}

// required .micromsg.SnsObject SnsObject = 2;
inline bool SnsPostResponse::has_snsobject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsPostResponse::set_has_snsobject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsPostResponse::clear_has_snsobject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsPostResponse::clear_snsobject() {
  if (snsobject_ != NULL) snsobject_->::micromsg::SnsObject::Clear();
  clear_has_snsobject();
}
inline const ::micromsg::SnsObject& SnsPostResponse::snsobject() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsPostResponse.SnsObject)
  return snsobject_ != NULL ? *snsobject_
                         : *::micromsg::SnsObject::internal_default_instance();
}
inline ::micromsg::SnsObject* SnsPostResponse::mutable_snsobject() {
  set_has_snsobject();
  if (snsobject_ == NULL) {
    snsobject_ = new ::micromsg::SnsObject;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsPostResponse.SnsObject)
  return snsobject_;
}
inline ::micromsg::SnsObject* SnsPostResponse::release_snsobject() {
  // @@protoc_insertion_point(field_release:micromsg.SnsPostResponse.SnsObject)
  clear_has_snsobject();
  ::micromsg::SnsObject* temp = snsobject_;
  snsobject_ = NULL;
  return temp;
}
inline void SnsPostResponse::set_allocated_snsobject(::micromsg::SnsObject* snsobject) {
  delete snsobject_;
  snsobject_ = snsobject;
  if (snsobject) {
    set_has_snsobject();
  } else {
    clear_has_snsobject();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsPostResponse.SnsObject)
}

// -------------------------------------------------------------------

// SnsObjectDetailRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsObjectDetailRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsObjectDetailRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsObjectDetailRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsObjectDetailRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsObjectDetailRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectDetailRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsObjectDetailRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObjectDetailRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsObjectDetailRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsObjectDetailRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsObjectDetailRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsObjectDetailRequest.BaseRequest)
}

// required uint64 Id = 2;
inline bool SnsObjectDetailRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsObjectDetailRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsObjectDetailRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsObjectDetailRequest::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 SnsObjectDetailRequest::id() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectDetailRequest.Id)
  return id_;
}
inline void SnsObjectDetailRequest::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObjectDetailRequest.Id)
}

// optional uint32 GroupDetail = 3;
inline bool SnsObjectDetailRequest::has_groupdetail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsObjectDetailRequest::set_has_groupdetail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsObjectDetailRequest::clear_has_groupdetail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsObjectDetailRequest::clear_groupdetail() {
  groupdetail_ = 0u;
  clear_has_groupdetail();
}
inline ::google::protobuf::uint32 SnsObjectDetailRequest::groupdetail() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectDetailRequest.GroupDetail)
  return groupdetail_;
}
inline void SnsObjectDetailRequest::set_groupdetail(::google::protobuf::uint32 value) {
  set_has_groupdetail();
  groupdetail_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObjectDetailRequest.GroupDetail)
}

// -------------------------------------------------------------------

// SnsObjectDetailResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsObjectDetailResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsObjectDetailResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsObjectDetailResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsObjectDetailResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsObjectDetailResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectDetailResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsObjectDetailResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObjectDetailResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsObjectDetailResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsObjectDetailResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsObjectDetailResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsObjectDetailResponse.BaseResponse)
}

// required .micromsg.SnsObject Object = 2;
inline bool SnsObjectDetailResponse::has_object() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsObjectDetailResponse::set_has_object() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsObjectDetailResponse::clear_has_object() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsObjectDetailResponse::clear_object() {
  if (object_ != NULL) object_->::micromsg::SnsObject::Clear();
  clear_has_object();
}
inline const ::micromsg::SnsObject& SnsObjectDetailResponse::object() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectDetailResponse.Object)
  return object_ != NULL ? *object_
                         : *::micromsg::SnsObject::internal_default_instance();
}
inline ::micromsg::SnsObject* SnsObjectDetailResponse::mutable_object() {
  set_has_object();
  if (object_ == NULL) {
    object_ = new ::micromsg::SnsObject;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObjectDetailResponse.Object)
  return object_;
}
inline ::micromsg::SnsObject* SnsObjectDetailResponse::release_object() {
  // @@protoc_insertion_point(field_release:micromsg.SnsObjectDetailResponse.Object)
  clear_has_object();
  ::micromsg::SnsObject* temp = object_;
  object_ = NULL;
  return temp;
}
inline void SnsObjectDetailResponse::set_allocated_object(::micromsg::SnsObject* object) {
  delete object_;
  object_ = object;
  if (object) {
    set_has_object();
  } else {
    clear_has_object();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsObjectDetailResponse.Object)
}

// -------------------------------------------------------------------

// SnsADObjectDetailRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsADObjectDetailRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsADObjectDetailRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsADObjectDetailRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsADObjectDetailRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsADObjectDetailRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADObjectDetailRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsADObjectDetailRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADObjectDetailRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsADObjectDetailRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADObjectDetailRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsADObjectDetailRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADObjectDetailRequest.BaseRequest)
}

// required uint64 Id = 2;
inline bool SnsADObjectDetailRequest::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsADObjectDetailRequest::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsADObjectDetailRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsADObjectDetailRequest::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 SnsADObjectDetailRequest::id() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADObjectDetailRequest.Id)
  return id_;
}
inline void SnsADObjectDetailRequest::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsADObjectDetailRequest.Id)
}

// optional uint32 Scene = 3;
inline bool SnsADObjectDetailRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsADObjectDetailRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsADObjectDetailRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsADObjectDetailRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 SnsADObjectDetailRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADObjectDetailRequest.Scene)
  return scene_;
}
inline void SnsADObjectDetailRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsADObjectDetailRequest.Scene)
}

// optional .micromsg.SKBuiltinBuffer_t Session = 4;
inline bool SnsADObjectDetailRequest::has_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsADObjectDetailRequest::set_has_session() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsADObjectDetailRequest::clear_has_session() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsADObjectDetailRequest::clear_session() {
  if (session_ != NULL) session_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_session();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsADObjectDetailRequest::session() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADObjectDetailRequest.Session)
  return session_ != NULL ? *session_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsADObjectDetailRequest::mutable_session() {
  set_has_session();
  if (session_ == NULL) {
    session_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADObjectDetailRequest.Session)
  return session_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsADObjectDetailRequest::release_session() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADObjectDetailRequest.Session)
  clear_has_session();
  ::micromsg::SKBuiltinBuffer_t* temp = session_;
  session_ = NULL;
  return temp;
}
inline void SnsADObjectDetailRequest::set_allocated_session(::micromsg::SKBuiltinBuffer_t* session) {
  delete session_;
  session_ = session;
  if (session) {
    set_has_session();
  } else {
    clear_has_session();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADObjectDetailRequest.Session)
}

// -------------------------------------------------------------------

// SnsADObjectDetailResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsADObjectDetailResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsADObjectDetailResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsADObjectDetailResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsADObjectDetailResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsADObjectDetailResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADObjectDetailResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsADObjectDetailResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADObjectDetailResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsADObjectDetailResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADObjectDetailResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsADObjectDetailResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADObjectDetailResponse.BaseResponse)
}

// required .micromsg.SnsADObject Object = 2;
inline bool SnsADObjectDetailResponse::has_object() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsADObjectDetailResponse::set_has_object() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsADObjectDetailResponse::clear_has_object() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsADObjectDetailResponse::clear_object() {
  if (object_ != NULL) object_->::micromsg::SnsADObject::Clear();
  clear_has_object();
}
inline const ::micromsg::SnsADObject& SnsADObjectDetailResponse::object() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADObjectDetailResponse.Object)
  return object_ != NULL ? *object_
                         : *::micromsg::SnsADObject::internal_default_instance();
}
inline ::micromsg::SnsADObject* SnsADObjectDetailResponse::mutable_object() {
  set_has_object();
  if (object_ == NULL) {
    object_ = new ::micromsg::SnsADObject;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADObjectDetailResponse.Object)
  return object_;
}
inline ::micromsg::SnsADObject* SnsADObjectDetailResponse::release_object() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADObjectDetailResponse.Object)
  clear_has_object();
  ::micromsg::SnsADObject* temp = object_;
  object_ = NULL;
  return temp;
}
inline void SnsADObjectDetailResponse::set_allocated_object(::micromsg::SnsADObject* object) {
  delete object_;
  object_ = object;
  if (object) {
    set_has_object();
  } else {
    clear_has_object();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADObjectDetailResponse.Object)
}

// optional .micromsg.SKBuiltinBuffer_t Session = 3;
inline bool SnsADObjectDetailResponse::has_session() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsADObjectDetailResponse::set_has_session() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsADObjectDetailResponse::clear_has_session() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsADObjectDetailResponse::clear_session() {
  if (session_ != NULL) session_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_session();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsADObjectDetailResponse::session() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADObjectDetailResponse.Session)
  return session_ != NULL ? *session_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsADObjectDetailResponse::mutable_session() {
  set_has_session();
  if (session_ == NULL) {
    session_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADObjectDetailResponse.Session)
  return session_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsADObjectDetailResponse::release_session() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADObjectDetailResponse.Session)
  clear_has_session();
  ::micromsg::SKBuiltinBuffer_t* temp = session_;
  session_ = NULL;
  return temp;
}
inline void SnsADObjectDetailResponse::set_allocated_session(::micromsg::SKBuiltinBuffer_t* session) {
  delete session_;
  session_ = session;
  if (session) {
    set_has_session();
  } else {
    clear_has_session();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADObjectDetailResponse.Session)
}

// -------------------------------------------------------------------

// SnsServerConfig

// optional int32 PostMentionLimit = 1;
inline bool SnsServerConfig::has_postmentionlimit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsServerConfig::set_has_postmentionlimit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsServerConfig::clear_has_postmentionlimit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsServerConfig::clear_postmentionlimit() {
  postmentionlimit_ = 0;
  clear_has_postmentionlimit();
}
inline ::google::protobuf::int32 SnsServerConfig::postmentionlimit() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsServerConfig.PostMentionLimit)
  return postmentionlimit_;
}
inline void SnsServerConfig::set_postmentionlimit(::google::protobuf::int32 value) {
  set_has_postmentionlimit();
  postmentionlimit_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsServerConfig.PostMentionLimit)
}

// optional int32 CopyAndPasteWordLimit = 2;
inline bool SnsServerConfig::has_copyandpastewordlimit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsServerConfig::set_has_copyandpastewordlimit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsServerConfig::clear_has_copyandpastewordlimit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsServerConfig::clear_copyandpastewordlimit() {
  copyandpastewordlimit_ = 0;
  clear_has_copyandpastewordlimit();
}
inline ::google::protobuf::int32 SnsServerConfig::copyandpastewordlimit() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsServerConfig.CopyAndPasteWordLimit)
  return copyandpastewordlimit_;
}
inline void SnsServerConfig::set_copyandpastewordlimit(::google::protobuf::int32 value) {
  set_has_copyandpastewordlimit();
  copyandpastewordlimit_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsServerConfig.CopyAndPasteWordLimit)
}

// -------------------------------------------------------------------

// SnsTimeLineRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsTimeLineRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsTimeLineRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsTimeLineRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsTimeLineRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsTimeLineRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsTimeLineRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsTimeLineRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsTimeLineRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsTimeLineRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsTimeLineRequest.BaseRequest)
}

// optional string FirstPageMd5 = 2;
inline bool SnsTimeLineRequest::has_firstpagemd5() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsTimeLineRequest::set_has_firstpagemd5() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsTimeLineRequest::clear_has_firstpagemd5() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsTimeLineRequest::clear_firstpagemd5() {
  firstpagemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_firstpagemd5();
}
inline const ::std::string& SnsTimeLineRequest::firstpagemd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineRequest.FirstPageMd5)
  return firstpagemd5_.GetNoArena();
}
inline void SnsTimeLineRequest::set_firstpagemd5(const ::std::string& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineRequest.FirstPageMd5)
}
#if LANG_CXX11
inline void SnsTimeLineRequest::set_firstpagemd5(::std::string&& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsTimeLineRequest.FirstPageMd5)
}
#endif
inline void SnsTimeLineRequest::set_firstpagemd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsTimeLineRequest.FirstPageMd5)
}
inline void SnsTimeLineRequest::set_firstpagemd5(const char* value, size_t size) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsTimeLineRequest.FirstPageMd5)
}
inline ::std::string* SnsTimeLineRequest::mutable_firstpagemd5() {
  set_has_firstpagemd5();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineRequest.FirstPageMd5)
  return firstpagemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsTimeLineRequest::release_firstpagemd5() {
  // @@protoc_insertion_point(field_release:micromsg.SnsTimeLineRequest.FirstPageMd5)
  clear_has_firstpagemd5();
  return firstpagemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsTimeLineRequest::set_allocated_firstpagemd5(::std::string* firstpagemd5) {
  if (firstpagemd5 != NULL) {
    set_has_firstpagemd5();
  } else {
    clear_has_firstpagemd5();
  }
  firstpagemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstpagemd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsTimeLineRequest.FirstPageMd5)
}

// required uint64 MaxId = 3;
inline bool SnsTimeLineRequest::has_maxid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsTimeLineRequest::set_has_maxid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsTimeLineRequest::clear_has_maxid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsTimeLineRequest::clear_maxid() {
  maxid_ = GOOGLE_ULONGLONG(0);
  clear_has_maxid();
}
inline ::google::protobuf::uint64 SnsTimeLineRequest::maxid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineRequest.MaxId)
  return maxid_;
}
inline void SnsTimeLineRequest::set_maxid(::google::protobuf::uint64 value) {
  set_has_maxid();
  maxid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineRequest.MaxId)
}

// optional uint64 MinFilterId = 4;
inline bool SnsTimeLineRequest::has_minfilterid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsTimeLineRequest::set_has_minfilterid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsTimeLineRequest::clear_has_minfilterid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsTimeLineRequest::clear_minfilterid() {
  minfilterid_ = GOOGLE_ULONGLONG(0);
  clear_has_minfilterid();
}
inline ::google::protobuf::uint64 SnsTimeLineRequest::minfilterid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineRequest.MinFilterId)
  return minfilterid_;
}
inline void SnsTimeLineRequest::set_minfilterid(::google::protobuf::uint64 value) {
  set_has_minfilterid();
  minfilterid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineRequest.MinFilterId)
}

// optional uint32 LastRequestTime = 5;
inline bool SnsTimeLineRequest::has_lastrequesttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsTimeLineRequest::set_has_lastrequesttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsTimeLineRequest::clear_has_lastrequesttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsTimeLineRequest::clear_lastrequesttime() {
  lastrequesttime_ = 0u;
  clear_has_lastrequesttime();
}
inline ::google::protobuf::uint32 SnsTimeLineRequest::lastrequesttime() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineRequest.LastRequestTime)
  return lastrequesttime_;
}
inline void SnsTimeLineRequest::set_lastrequesttime(::google::protobuf::uint32 value) {
  set_has_lastrequesttime();
  lastrequesttime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineRequest.LastRequestTime)
}

// optional uint64 ClientLatestId = 6;
inline bool SnsTimeLineRequest::has_clientlatestid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsTimeLineRequest::set_has_clientlatestid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsTimeLineRequest::clear_has_clientlatestid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsTimeLineRequest::clear_clientlatestid() {
  clientlatestid_ = GOOGLE_ULONGLONG(0);
  clear_has_clientlatestid();
}
inline ::google::protobuf::uint64 SnsTimeLineRequest::clientlatestid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineRequest.ClientLatestId)
  return clientlatestid_;
}
inline void SnsTimeLineRequest::set_clientlatestid(::google::protobuf::uint64 value) {
  set_has_clientlatestid();
  clientlatestid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineRequest.ClientLatestId)
}

// optional .micromsg.SKBuiltinBuffer_t Session = 7;
inline bool SnsTimeLineRequest::has_session() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsTimeLineRequest::set_has_session() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsTimeLineRequest::clear_has_session() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsTimeLineRequest::clear_session() {
  if (session_ != NULL) session_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_session();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsTimeLineRequest::session() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineRequest.Session)
  return session_ != NULL ? *session_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsTimeLineRequest::mutable_session() {
  set_has_session();
  if (session_ == NULL) {
    session_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineRequest.Session)
  return session_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsTimeLineRequest::release_session() {
  // @@protoc_insertion_point(field_release:micromsg.SnsTimeLineRequest.Session)
  clear_has_session();
  ::micromsg::SKBuiltinBuffer_t* temp = session_;
  session_ = NULL;
  return temp;
}
inline void SnsTimeLineRequest::set_allocated_session(::micromsg::SKBuiltinBuffer_t* session) {
  delete session_;
  session_ = session;
  if (session) {
    set_has_session();
  } else {
    clear_has_session();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsTimeLineRequest.Session)
}

// -------------------------------------------------------------------

// SnsTimeLineResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsTimeLineResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsTimeLineResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsTimeLineResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsTimeLineResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsTimeLineResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsTimeLineResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsTimeLineResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsTimeLineResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsTimeLineResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsTimeLineResponse.BaseResponse)
}

// optional string FirstPageMd5 = 2;
inline bool SnsTimeLineResponse::has_firstpagemd5() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsTimeLineResponse::set_has_firstpagemd5() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsTimeLineResponse::clear_has_firstpagemd5() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsTimeLineResponse::clear_firstpagemd5() {
  firstpagemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_firstpagemd5();
}
inline const ::std::string& SnsTimeLineResponse::firstpagemd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.FirstPageMd5)
  return firstpagemd5_.GetNoArena();
}
inline void SnsTimeLineResponse::set_firstpagemd5(const ::std::string& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineResponse.FirstPageMd5)
}
#if LANG_CXX11
inline void SnsTimeLineResponse::set_firstpagemd5(::std::string&& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsTimeLineResponse.FirstPageMd5)
}
#endif
inline void SnsTimeLineResponse::set_firstpagemd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsTimeLineResponse.FirstPageMd5)
}
inline void SnsTimeLineResponse::set_firstpagemd5(const char* value, size_t size) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsTimeLineResponse.FirstPageMd5)
}
inline ::std::string* SnsTimeLineResponse::mutable_firstpagemd5() {
  set_has_firstpagemd5();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineResponse.FirstPageMd5)
  return firstpagemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsTimeLineResponse::release_firstpagemd5() {
  // @@protoc_insertion_point(field_release:micromsg.SnsTimeLineResponse.FirstPageMd5)
  clear_has_firstpagemd5();
  return firstpagemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsTimeLineResponse::set_allocated_firstpagemd5(::std::string* firstpagemd5) {
  if (firstpagemd5 != NULL) {
    set_has_firstpagemd5();
  } else {
    clear_has_firstpagemd5();
  }
  firstpagemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstpagemd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsTimeLineResponse.FirstPageMd5)
}

// required uint32 ObjectCount = 3;
inline bool SnsTimeLineResponse::has_objectcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsTimeLineResponse::set_has_objectcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsTimeLineResponse::clear_has_objectcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsTimeLineResponse::clear_objectcount() {
  objectcount_ = 0u;
  clear_has_objectcount();
}
inline ::google::protobuf::uint32 SnsTimeLineResponse::objectcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.ObjectCount)
  return objectcount_;
}
inline void SnsTimeLineResponse::set_objectcount(::google::protobuf::uint32 value) {
  set_has_objectcount();
  objectcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineResponse.ObjectCount)
}

// repeated .micromsg.SnsObject ObjectList = 4;
inline int SnsTimeLineResponse::objectlist_size() const {
  return objectlist_.size();
}
inline void SnsTimeLineResponse::clear_objectlist() {
  objectlist_.Clear();
}
inline const ::micromsg::SnsObject& SnsTimeLineResponse::objectlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.ObjectList)
  return objectlist_.Get(index);
}
inline ::micromsg::SnsObject* SnsTimeLineResponse::mutable_objectlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineResponse.ObjectList)
  return objectlist_.Mutable(index);
}
inline ::micromsg::SnsObject* SnsTimeLineResponse::add_objectlist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsTimeLineResponse.ObjectList)
  return objectlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >*
SnsTimeLineResponse::mutable_objectlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsTimeLineResponse.ObjectList)
  return &objectlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >&
SnsTimeLineResponse::objectlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsTimeLineResponse.ObjectList)
  return objectlist_;
}

// optional uint32 NewRequestTime = 5;
inline bool SnsTimeLineResponse::has_newrequesttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsTimeLineResponse::set_has_newrequesttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsTimeLineResponse::clear_has_newrequesttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsTimeLineResponse::clear_newrequesttime() {
  newrequesttime_ = 0u;
  clear_has_newrequesttime();
}
inline ::google::protobuf::uint32 SnsTimeLineResponse::newrequesttime() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.NewRequestTime)
  return newrequesttime_;
}
inline void SnsTimeLineResponse::set_newrequesttime(::google::protobuf::uint32 value) {
  set_has_newrequesttime();
  newrequesttime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineResponse.NewRequestTime)
}

// optional uint32 ObjectCountForSameMd5 = 6;
inline bool SnsTimeLineResponse::has_objectcountforsamemd5() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsTimeLineResponse::set_has_objectcountforsamemd5() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsTimeLineResponse::clear_has_objectcountforsamemd5() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsTimeLineResponse::clear_objectcountforsamemd5() {
  objectcountforsamemd5_ = 0u;
  clear_has_objectcountforsamemd5();
}
inline ::google::protobuf::uint32 SnsTimeLineResponse::objectcountforsamemd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.ObjectCountForSameMd5)
  return objectcountforsamemd5_;
}
inline void SnsTimeLineResponse::set_objectcountforsamemd5(::google::protobuf::uint32 value) {
  set_has_objectcountforsamemd5();
  objectcountforsamemd5_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineResponse.ObjectCountForSameMd5)
}

// optional uint32 ControlFlag = 7;
inline bool SnsTimeLineResponse::has_controlflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnsTimeLineResponse::set_has_controlflag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnsTimeLineResponse::clear_has_controlflag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnsTimeLineResponse::clear_controlflag() {
  controlflag_ = 0u;
  clear_has_controlflag();
}
inline ::google::protobuf::uint32 SnsTimeLineResponse::controlflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.ControlFlag)
  return controlflag_;
}
inline void SnsTimeLineResponse::set_controlflag(::google::protobuf::uint32 value) {
  set_has_controlflag();
  controlflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineResponse.ControlFlag)
}

// optional .micromsg.SnsServerConfig ServerConfig = 8;
inline bool SnsTimeLineResponse::has_serverconfig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsTimeLineResponse::set_has_serverconfig() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsTimeLineResponse::clear_has_serverconfig() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsTimeLineResponse::clear_serverconfig() {
  if (serverconfig_ != NULL) serverconfig_->::micromsg::SnsServerConfig::Clear();
  clear_has_serverconfig();
}
inline const ::micromsg::SnsServerConfig& SnsTimeLineResponse::serverconfig() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.ServerConfig)
  return serverconfig_ != NULL ? *serverconfig_
                         : *::micromsg::SnsServerConfig::internal_default_instance();
}
inline ::micromsg::SnsServerConfig* SnsTimeLineResponse::mutable_serverconfig() {
  set_has_serverconfig();
  if (serverconfig_ == NULL) {
    serverconfig_ = new ::micromsg::SnsServerConfig;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineResponse.ServerConfig)
  return serverconfig_;
}
inline ::micromsg::SnsServerConfig* SnsTimeLineResponse::release_serverconfig() {
  // @@protoc_insertion_point(field_release:micromsg.SnsTimeLineResponse.ServerConfig)
  clear_has_serverconfig();
  ::micromsg::SnsServerConfig* temp = serverconfig_;
  serverconfig_ = NULL;
  return temp;
}
inline void SnsTimeLineResponse::set_allocated_serverconfig(::micromsg::SnsServerConfig* serverconfig) {
  delete serverconfig_;
  serverconfig_ = serverconfig;
  if (serverconfig) {
    set_has_serverconfig();
  } else {
    clear_has_serverconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsTimeLineResponse.ServerConfig)
}

// optional uint32 AdvertiseCount = 9;
inline bool SnsTimeLineResponse::has_advertisecount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SnsTimeLineResponse::set_has_advertisecount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SnsTimeLineResponse::clear_has_advertisecount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SnsTimeLineResponse::clear_advertisecount() {
  advertisecount_ = 0u;
  clear_has_advertisecount();
}
inline ::google::protobuf::uint32 SnsTimeLineResponse::advertisecount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.AdvertiseCount)
  return advertisecount_;
}
inline void SnsTimeLineResponse::set_advertisecount(::google::protobuf::uint32 value) {
  set_has_advertisecount();
  advertisecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineResponse.AdvertiseCount)
}

// repeated .micromsg.AdvertiseObject AdvertiseList = 10;
inline int SnsTimeLineResponse::advertiselist_size() const {
  return advertiselist_.size();
}
inline void SnsTimeLineResponse::clear_advertiselist() {
  advertiselist_.Clear();
}
inline const ::micromsg::AdvertiseObject& SnsTimeLineResponse::advertiselist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.AdvertiseList)
  return advertiselist_.Get(index);
}
inline ::micromsg::AdvertiseObject* SnsTimeLineResponse::mutable_advertiselist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineResponse.AdvertiseList)
  return advertiselist_.Mutable(index);
}
inline ::micromsg::AdvertiseObject* SnsTimeLineResponse::add_advertiselist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsTimeLineResponse.AdvertiseList)
  return advertiselist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::AdvertiseObject >*
SnsTimeLineResponse::mutable_advertiselist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsTimeLineResponse.AdvertiseList)
  return &advertiselist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::AdvertiseObject >&
SnsTimeLineResponse::advertiselist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsTimeLineResponse.AdvertiseList)
  return advertiselist_;
}

// optional .micromsg.SKBuiltinBuffer_t Session = 11;
inline bool SnsTimeLineResponse::has_session() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsTimeLineResponse::set_has_session() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsTimeLineResponse::clear_has_session() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsTimeLineResponse::clear_session() {
  if (session_ != NULL) session_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_session();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsTimeLineResponse::session() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineResponse.Session)
  return session_ != NULL ? *session_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsTimeLineResponse::mutable_session() {
  set_has_session();
  if (session_ == NULL) {
    session_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineResponse.Session)
  return session_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsTimeLineResponse::release_session() {
  // @@protoc_insertion_point(field_release:micromsg.SnsTimeLineResponse.Session)
  clear_has_session();
  ::micromsg::SKBuiltinBuffer_t* temp = session_;
  session_ = NULL;
  return temp;
}
inline void SnsTimeLineResponse::set_allocated_session(::micromsg::SKBuiltinBuffer_t* session) {
  delete session_;
  session_ = session;
  if (session) {
    set_has_session();
  } else {
    clear_has_session();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsTimeLineResponse.Session)
}

// -------------------------------------------------------------------

// SnsTimeLineWithTypeRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsTimeLineWithTypeRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsTimeLineWithTypeRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsTimeLineWithTypeRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsTimeLineWithTypeRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsTimeLineWithTypeRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineWithTypeRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsTimeLineWithTypeRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineWithTypeRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsTimeLineWithTypeRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsTimeLineWithTypeRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsTimeLineWithTypeRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsTimeLineWithTypeRequest.BaseRequest)
}

// optional uint64 SelectType = 2;
inline bool SnsTimeLineWithTypeRequest::has_selecttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsTimeLineWithTypeRequest::set_has_selecttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsTimeLineWithTypeRequest::clear_has_selecttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsTimeLineWithTypeRequest::clear_selecttype() {
  selecttype_ = GOOGLE_ULONGLONG(0);
  clear_has_selecttype();
}
inline ::google::protobuf::uint64 SnsTimeLineWithTypeRequest::selecttype() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineWithTypeRequest.SelectType)
  return selecttype_;
}
inline void SnsTimeLineWithTypeRequest::set_selecttype(::google::protobuf::uint64 value) {
  set_has_selecttype();
  selecttype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineWithTypeRequest.SelectType)
}

// -------------------------------------------------------------------

// SnsTimeLineWithTypeResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsTimeLineWithTypeResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsTimeLineWithTypeResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsTimeLineWithTypeResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsTimeLineWithTypeResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsTimeLineWithTypeResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineWithTypeResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsTimeLineWithTypeResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineWithTypeResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsTimeLineWithTypeResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsTimeLineWithTypeResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsTimeLineWithTypeResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsTimeLineWithTypeResponse.BaseResponse)
}

// required uint32 ObjectCount = 2;
inline bool SnsTimeLineWithTypeResponse::has_objectcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsTimeLineWithTypeResponse::set_has_objectcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsTimeLineWithTypeResponse::clear_has_objectcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsTimeLineWithTypeResponse::clear_objectcount() {
  objectcount_ = 0u;
  clear_has_objectcount();
}
inline ::google::protobuf::uint32 SnsTimeLineWithTypeResponse::objectcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineWithTypeResponse.ObjectCount)
  return objectcount_;
}
inline void SnsTimeLineWithTypeResponse::set_objectcount(::google::protobuf::uint32 value) {
  set_has_objectcount();
  objectcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsTimeLineWithTypeResponse.ObjectCount)
}

// repeated .micromsg.SnsObject ObjectList = 3;
inline int SnsTimeLineWithTypeResponse::objectlist_size() const {
  return objectlist_.size();
}
inline void SnsTimeLineWithTypeResponse::clear_objectlist() {
  objectlist_.Clear();
}
inline const ::micromsg::SnsObject& SnsTimeLineWithTypeResponse::objectlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsTimeLineWithTypeResponse.ObjectList)
  return objectlist_.Get(index);
}
inline ::micromsg::SnsObject* SnsTimeLineWithTypeResponse::mutable_objectlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsTimeLineWithTypeResponse.ObjectList)
  return objectlist_.Mutable(index);
}
inline ::micromsg::SnsObject* SnsTimeLineWithTypeResponse::add_objectlist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsTimeLineWithTypeResponse.ObjectList)
  return objectlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >*
SnsTimeLineWithTypeResponse::mutable_objectlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsTimeLineWithTypeResponse.ObjectList)
  return &objectlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >&
SnsTimeLineWithTypeResponse::objectlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsTimeLineWithTypeResponse.ObjectList)
  return objectlist_;
}

// -------------------------------------------------------------------

// SnsUserPageRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsUserPageRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsUserPageRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsUserPageRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsUserPageRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsUserPageRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsUserPageRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUserPageRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsUserPageRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUserPageRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsUserPageRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUserPageRequest.BaseRequest)
}

// optional string FirstPageMd5 = 2;
inline bool SnsUserPageRequest::has_firstpagemd5() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsUserPageRequest::set_has_firstpagemd5() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsUserPageRequest::clear_has_firstpagemd5() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsUserPageRequest::clear_firstpagemd5() {
  firstpagemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_firstpagemd5();
}
inline const ::std::string& SnsUserPageRequest::firstpagemd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageRequest.FirstPageMd5)
  return firstpagemd5_.GetNoArena();
}
inline void SnsUserPageRequest::set_firstpagemd5(const ::std::string& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageRequest.FirstPageMd5)
}
#if LANG_CXX11
inline void SnsUserPageRequest::set_firstpagemd5(::std::string&& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsUserPageRequest.FirstPageMd5)
}
#endif
inline void SnsUserPageRequest::set_firstpagemd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsUserPageRequest.FirstPageMd5)
}
inline void SnsUserPageRequest::set_firstpagemd5(const char* value, size_t size) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsUserPageRequest.FirstPageMd5)
}
inline ::std::string* SnsUserPageRequest::mutable_firstpagemd5() {
  set_has_firstpagemd5();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUserPageRequest.FirstPageMd5)
  return firstpagemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsUserPageRequest::release_firstpagemd5() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUserPageRequest.FirstPageMd5)
  clear_has_firstpagemd5();
  return firstpagemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsUserPageRequest::set_allocated_firstpagemd5(::std::string* firstpagemd5) {
  if (firstpagemd5 != NULL) {
    set_has_firstpagemd5();
  } else {
    clear_has_firstpagemd5();
  }
  firstpagemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstpagemd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUserPageRequest.FirstPageMd5)
}

// optional string Username = 3;
inline bool SnsUserPageRequest::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsUserPageRequest::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsUserPageRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsUserPageRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& SnsUserPageRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageRequest.Username)
  return username_.GetNoArena();
}
inline void SnsUserPageRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageRequest.Username)
}
#if LANG_CXX11
inline void SnsUserPageRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsUserPageRequest.Username)
}
#endif
inline void SnsUserPageRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsUserPageRequest.Username)
}
inline void SnsUserPageRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsUserPageRequest.Username)
}
inline ::std::string* SnsUserPageRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUserPageRequest.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsUserPageRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUserPageRequest.Username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsUserPageRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUserPageRequest.Username)
}

// required uint64 MaxId = 4;
inline bool SnsUserPageRequest::has_maxid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsUserPageRequest::set_has_maxid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsUserPageRequest::clear_has_maxid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsUserPageRequest::clear_maxid() {
  maxid_ = GOOGLE_ULONGLONG(0);
  clear_has_maxid();
}
inline ::google::protobuf::uint64 SnsUserPageRequest::maxid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageRequest.MaxId)
  return maxid_;
}
inline void SnsUserPageRequest::set_maxid(::google::protobuf::uint64 value) {
  set_has_maxid();
  maxid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageRequest.MaxId)
}

// optional uint32 Source = 5;
inline bool SnsUserPageRequest::has_source() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsUserPageRequest::set_has_source() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsUserPageRequest::clear_has_source() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsUserPageRequest::clear_source() {
  source_ = 0u;
  clear_has_source();
}
inline ::google::protobuf::uint32 SnsUserPageRequest::source() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageRequest.Source)
  return source_;
}
inline void SnsUserPageRequest::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageRequest.Source)
}

// optional uint64 MinFilterId = 6;
inline bool SnsUserPageRequest::has_minfilterid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsUserPageRequest::set_has_minfilterid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsUserPageRequest::clear_has_minfilterid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsUserPageRequest::clear_minfilterid() {
  minfilterid_ = GOOGLE_ULONGLONG(0);
  clear_has_minfilterid();
}
inline ::google::protobuf::uint64 SnsUserPageRequest::minfilterid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageRequest.MinFilterId)
  return minfilterid_;
}
inline void SnsUserPageRequest::set_minfilterid(::google::protobuf::uint64 value) {
  set_has_minfilterid();
  minfilterid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageRequest.MinFilterId)
}

// optional uint32 LastRequestTime = 7;
inline bool SnsUserPageRequest::has_lastrequesttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsUserPageRequest::set_has_lastrequesttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsUserPageRequest::clear_has_lastrequesttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsUserPageRequest::clear_lastrequesttime() {
  lastrequesttime_ = 0u;
  clear_has_lastrequesttime();
}
inline ::google::protobuf::uint32 SnsUserPageRequest::lastrequesttime() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageRequest.LastRequestTime)
  return lastrequesttime_;
}
inline void SnsUserPageRequest::set_lastrequesttime(::google::protobuf::uint32 value) {
  set_has_lastrequesttime();
  lastrequesttime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageRequest.LastRequestTime)
}

// -------------------------------------------------------------------

// SnsUserPageResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsUserPageResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsUserPageResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsUserPageResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsUserPageResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsUserPageResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsUserPageResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUserPageResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsUserPageResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUserPageResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsUserPageResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUserPageResponse.BaseResponse)
}

// optional string FirstPageMd5 = 2;
inline bool SnsUserPageResponse::has_firstpagemd5() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsUserPageResponse::set_has_firstpagemd5() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsUserPageResponse::clear_has_firstpagemd5() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsUserPageResponse::clear_firstpagemd5() {
  firstpagemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_firstpagemd5();
}
inline const ::std::string& SnsUserPageResponse::firstpagemd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageResponse.FirstPageMd5)
  return firstpagemd5_.GetNoArena();
}
inline void SnsUserPageResponse::set_firstpagemd5(const ::std::string& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageResponse.FirstPageMd5)
}
#if LANG_CXX11
inline void SnsUserPageResponse::set_firstpagemd5(::std::string&& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsUserPageResponse.FirstPageMd5)
}
#endif
inline void SnsUserPageResponse::set_firstpagemd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsUserPageResponse.FirstPageMd5)
}
inline void SnsUserPageResponse::set_firstpagemd5(const char* value, size_t size) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsUserPageResponse.FirstPageMd5)
}
inline ::std::string* SnsUserPageResponse::mutable_firstpagemd5() {
  set_has_firstpagemd5();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUserPageResponse.FirstPageMd5)
  return firstpagemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsUserPageResponse::release_firstpagemd5() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUserPageResponse.FirstPageMd5)
  clear_has_firstpagemd5();
  return firstpagemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsUserPageResponse::set_allocated_firstpagemd5(::std::string* firstpagemd5) {
  if (firstpagemd5 != NULL) {
    set_has_firstpagemd5();
  } else {
    clear_has_firstpagemd5();
  }
  firstpagemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstpagemd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUserPageResponse.FirstPageMd5)
}

// required uint32 ObjectCount = 3;
inline bool SnsUserPageResponse::has_objectcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsUserPageResponse::set_has_objectcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsUserPageResponse::clear_has_objectcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsUserPageResponse::clear_objectcount() {
  objectcount_ = 0u;
  clear_has_objectcount();
}
inline ::google::protobuf::uint32 SnsUserPageResponse::objectcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageResponse.ObjectCount)
  return objectcount_;
}
inline void SnsUserPageResponse::set_objectcount(::google::protobuf::uint32 value) {
  set_has_objectcount();
  objectcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageResponse.ObjectCount)
}

// repeated .micromsg.SnsObject ObjectList = 4;
inline int SnsUserPageResponse::objectlist_size() const {
  return objectlist_.size();
}
inline void SnsUserPageResponse::clear_objectlist() {
  objectlist_.Clear();
}
inline const ::micromsg::SnsObject& SnsUserPageResponse::objectlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageResponse.ObjectList)
  return objectlist_.Get(index);
}
inline ::micromsg::SnsObject* SnsUserPageResponse::mutable_objectlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUserPageResponse.ObjectList)
  return objectlist_.Mutable(index);
}
inline ::micromsg::SnsObject* SnsUserPageResponse::add_objectlist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsUserPageResponse.ObjectList)
  return objectlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >*
SnsUserPageResponse::mutable_objectlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsUserPageResponse.ObjectList)
  return &objectlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >&
SnsUserPageResponse::objectlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsUserPageResponse.ObjectList)
  return objectlist_;
}

// required uint32 ObjectTotalCount = 5;
inline bool SnsUserPageResponse::has_objecttotalcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsUserPageResponse::set_has_objecttotalcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsUserPageResponse::clear_has_objecttotalcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsUserPageResponse::clear_objecttotalcount() {
  objecttotalcount_ = 0u;
  clear_has_objecttotalcount();
}
inline ::google::protobuf::uint32 SnsUserPageResponse::objecttotalcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageResponse.ObjectTotalCount)
  return objecttotalcount_;
}
inline void SnsUserPageResponse::set_objecttotalcount(::google::protobuf::uint32 value) {
  set_has_objecttotalcount();
  objecttotalcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageResponse.ObjectTotalCount)
}

// optional .micromsg.SnsUserInfo SnsUserInfo = 6;
inline bool SnsUserPageResponse::has_snsuserinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsUserPageResponse::set_has_snsuserinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsUserPageResponse::clear_has_snsuserinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsUserPageResponse::clear_snsuserinfo() {
  if (snsuserinfo_ != NULL) snsuserinfo_->::micromsg::SnsUserInfo::Clear();
  clear_has_snsuserinfo();
}
inline const ::micromsg::SnsUserInfo& SnsUserPageResponse::snsuserinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageResponse.SnsUserInfo)
  return snsuserinfo_ != NULL ? *snsuserinfo_
                         : *::micromsg::SnsUserInfo::internal_default_instance();
}
inline ::micromsg::SnsUserInfo* SnsUserPageResponse::mutable_snsuserinfo() {
  set_has_snsuserinfo();
  if (snsuserinfo_ == NULL) {
    snsuserinfo_ = new ::micromsg::SnsUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUserPageResponse.SnsUserInfo)
  return snsuserinfo_;
}
inline ::micromsg::SnsUserInfo* SnsUserPageResponse::release_snsuserinfo() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUserPageResponse.SnsUserInfo)
  clear_has_snsuserinfo();
  ::micromsg::SnsUserInfo* temp = snsuserinfo_;
  snsuserinfo_ = NULL;
  return temp;
}
inline void SnsUserPageResponse::set_allocated_snsuserinfo(::micromsg::SnsUserInfo* snsuserinfo) {
  delete snsuserinfo_;
  snsuserinfo_ = snsuserinfo;
  if (snsuserinfo) {
    set_has_snsuserinfo();
  } else {
    clear_has_snsuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUserPageResponse.SnsUserInfo)
}

// optional uint32 NewRequestTime = 7;
inline bool SnsUserPageResponse::has_newrequesttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsUserPageResponse::set_has_newrequesttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsUserPageResponse::clear_has_newrequesttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsUserPageResponse::clear_newrequesttime() {
  newrequesttime_ = 0u;
  clear_has_newrequesttime();
}
inline ::google::protobuf::uint32 SnsUserPageResponse::newrequesttime() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageResponse.NewRequestTime)
  return newrequesttime_;
}
inline void SnsUserPageResponse::set_newrequesttime(::google::protobuf::uint32 value) {
  set_has_newrequesttime();
  newrequesttime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageResponse.NewRequestTime)
}

// optional uint32 ObjectCountForSameMd5 = 8;
inline bool SnsUserPageResponse::has_objectcountforsamemd5() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnsUserPageResponse::set_has_objectcountforsamemd5() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnsUserPageResponse::clear_has_objectcountforsamemd5() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnsUserPageResponse::clear_objectcountforsamemd5() {
  objectcountforsamemd5_ = 0u;
  clear_has_objectcountforsamemd5();
}
inline ::google::protobuf::uint32 SnsUserPageResponse::objectcountforsamemd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageResponse.ObjectCountForSameMd5)
  return objectcountforsamemd5_;
}
inline void SnsUserPageResponse::set_objectcountforsamemd5(::google::protobuf::uint32 value) {
  set_has_objectcountforsamemd5();
  objectcountforsamemd5_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsUserPageResponse.ObjectCountForSameMd5)
}

// optional .micromsg.SnsServerConfig ServerConfig = 9;
inline bool SnsUserPageResponse::has_serverconfig() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsUserPageResponse::set_has_serverconfig() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsUserPageResponse::clear_has_serverconfig() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsUserPageResponse::clear_serverconfig() {
  if (serverconfig_ != NULL) serverconfig_->::micromsg::SnsServerConfig::Clear();
  clear_has_serverconfig();
}
inline const ::micromsg::SnsServerConfig& SnsUserPageResponse::serverconfig() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsUserPageResponse.ServerConfig)
  return serverconfig_ != NULL ? *serverconfig_
                         : *::micromsg::SnsServerConfig::internal_default_instance();
}
inline ::micromsg::SnsServerConfig* SnsUserPageResponse::mutable_serverconfig() {
  set_has_serverconfig();
  if (serverconfig_ == NULL) {
    serverconfig_ = new ::micromsg::SnsServerConfig;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsUserPageResponse.ServerConfig)
  return serverconfig_;
}
inline ::micromsg::SnsServerConfig* SnsUserPageResponse::release_serverconfig() {
  // @@protoc_insertion_point(field_release:micromsg.SnsUserPageResponse.ServerConfig)
  clear_has_serverconfig();
  ::micromsg::SnsServerConfig* temp = serverconfig_;
  serverconfig_ = NULL;
  return temp;
}
inline void SnsUserPageResponse::set_allocated_serverconfig(::micromsg::SnsServerConfig* serverconfig) {
  delete serverconfig_;
  serverconfig_ = serverconfig;
  if (serverconfig) {
    set_has_serverconfig();
  } else {
    clear_has_serverconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsUserPageResponse.ServerConfig)
}

// -------------------------------------------------------------------

// SnsAction

// optional string FromUsername = 1;
inline bool SnsAction::has_fromusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsAction::set_has_fromusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsAction::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsAction::clear_fromusername() {
  fromusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromusername();
}
inline const ::std::string& SnsAction::fromusername() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.FromUsername)
  return fromusername_.GetNoArena();
}
inline void SnsAction::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.FromUsername)
}
#if LANG_CXX11
inline void SnsAction::set_fromusername(::std::string&& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsAction.FromUsername)
}
#endif
inline void SnsAction::set_fromusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsAction.FromUsername)
}
inline void SnsAction::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsAction.FromUsername)
}
inline ::std::string* SnsAction::mutable_fromusername() {
  set_has_fromusername();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsAction.FromUsername)
  return fromusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsAction::release_fromusername() {
  // @@protoc_insertion_point(field_release:micromsg.SnsAction.FromUsername)
  clear_has_fromusername();
  return fromusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsAction::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername != NULL) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  fromusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsAction.FromUsername)
}

// optional string ToUsername = 2;
inline bool SnsAction::has_tousername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsAction::set_has_tousername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsAction::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsAction::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
inline const ::std::string& SnsAction::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.ToUsername)
  return tousername_.GetNoArena();
}
inline void SnsAction::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.ToUsername)
}
#if LANG_CXX11
inline void SnsAction::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsAction.ToUsername)
}
#endif
inline void SnsAction::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsAction.ToUsername)
}
inline void SnsAction::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsAction.ToUsername)
}
inline ::std::string* SnsAction::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsAction.ToUsername)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsAction::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.SnsAction.ToUsername)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsAction::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsAction.ToUsername)
}

// optional string FromNickname = 3;
inline bool SnsAction::has_fromnickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsAction::set_has_fromnickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsAction::clear_has_fromnickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsAction::clear_fromnickname() {
  fromnickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromnickname();
}
inline const ::std::string& SnsAction::fromnickname() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.FromNickname)
  return fromnickname_.GetNoArena();
}
inline void SnsAction::set_fromnickname(const ::std::string& value) {
  set_has_fromnickname();
  fromnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.FromNickname)
}
#if LANG_CXX11
inline void SnsAction::set_fromnickname(::std::string&& value) {
  set_has_fromnickname();
  fromnickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsAction.FromNickname)
}
#endif
inline void SnsAction::set_fromnickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromnickname();
  fromnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsAction.FromNickname)
}
inline void SnsAction::set_fromnickname(const char* value, size_t size) {
  set_has_fromnickname();
  fromnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsAction.FromNickname)
}
inline ::std::string* SnsAction::mutable_fromnickname() {
  set_has_fromnickname();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsAction.FromNickname)
  return fromnickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsAction::release_fromnickname() {
  // @@protoc_insertion_point(field_release:micromsg.SnsAction.FromNickname)
  clear_has_fromnickname();
  return fromnickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsAction::set_allocated_fromnickname(::std::string* fromnickname) {
  if (fromnickname != NULL) {
    set_has_fromnickname();
  } else {
    clear_has_fromnickname();
  }
  fromnickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromnickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsAction.FromNickname)
}

// optional string ToNickname = 4;
inline bool SnsAction::has_tonickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsAction::set_has_tonickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsAction::clear_has_tonickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsAction::clear_tonickname() {
  tonickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tonickname();
}
inline const ::std::string& SnsAction::tonickname() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.ToNickname)
  return tonickname_.GetNoArena();
}
inline void SnsAction::set_tonickname(const ::std::string& value) {
  set_has_tonickname();
  tonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.ToNickname)
}
#if LANG_CXX11
inline void SnsAction::set_tonickname(::std::string&& value) {
  set_has_tonickname();
  tonickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsAction.ToNickname)
}
#endif
inline void SnsAction::set_tonickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tonickname();
  tonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsAction.ToNickname)
}
inline void SnsAction::set_tonickname(const char* value, size_t size) {
  set_has_tonickname();
  tonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsAction.ToNickname)
}
inline ::std::string* SnsAction::mutable_tonickname() {
  set_has_tonickname();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsAction.ToNickname)
  return tonickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsAction::release_tonickname() {
  // @@protoc_insertion_point(field_release:micromsg.SnsAction.ToNickname)
  clear_has_tonickname();
  return tonickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsAction::set_allocated_tonickname(::std::string* tonickname) {
  if (tonickname != NULL) {
    set_has_tonickname();
  } else {
    clear_has_tonickname();
  }
  tonickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tonickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsAction.ToNickname)
}

// required uint32 Type = 5;
inline bool SnsAction::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsAction::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsAction::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsAction::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SnsAction::type() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.Type)
  return type_;
}
inline void SnsAction::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.Type)
}

// required uint32 Source = 6;
inline bool SnsAction::has_source() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsAction::set_has_source() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsAction::clear_has_source() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsAction::clear_source() {
  source_ = 0u;
  clear_has_source();
}
inline ::google::protobuf::uint32 SnsAction::source() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.Source)
  return source_;
}
inline void SnsAction::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.Source)
}

// optional uint32 CreateTime = 7;
inline bool SnsAction::has_createtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnsAction::set_has_createtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnsAction::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnsAction::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 SnsAction::createtime() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.CreateTime)
  return createtime_;
}
inline void SnsAction::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.CreateTime)
}

// optional string Content = 8;
inline bool SnsAction::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsAction::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsAction::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsAction::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& SnsAction::content() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.Content)
  return content_.GetNoArena();
}
inline void SnsAction::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.Content)
}
#if LANG_CXX11
inline void SnsAction::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsAction.Content)
}
#endif
inline void SnsAction::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsAction.Content)
}
inline void SnsAction::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsAction.Content)
}
inline ::std::string* SnsAction::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsAction.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsAction::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.SnsAction.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsAction::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsAction.Content)
}

// optional int32 ReplyCommentId = 9;
inline bool SnsAction::has_replycommentid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SnsAction::set_has_replycommentid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SnsAction::clear_has_replycommentid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SnsAction::clear_replycommentid() {
  replycommentid_ = 0;
  clear_has_replycommentid();
}
inline ::google::protobuf::int32 SnsAction::replycommentid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.ReplyCommentId)
  return replycommentid_;
}
inline void SnsAction::set_replycommentid(::google::protobuf::int32 value) {
  set_has_replycommentid();
  replycommentid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.ReplyCommentId)
}

// optional int32 CommentId = 10;
inline bool SnsAction::has_commentid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SnsAction::set_has_commentid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SnsAction::clear_has_commentid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SnsAction::clear_commentid() {
  commentid_ = 0;
  clear_has_commentid();
}
inline ::google::protobuf::int32 SnsAction::commentid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.CommentId)
  return commentid_;
}
inline void SnsAction::set_commentid(::google::protobuf::int32 value) {
  set_has_commentid();
  commentid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.CommentId)
}

// optional uint32 IsNotRichText = 11;
inline bool SnsAction::has_isnotrichtext() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SnsAction::set_has_isnotrichtext() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SnsAction::clear_has_isnotrichtext() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SnsAction::clear_isnotrichtext() {
  isnotrichtext_ = 0u;
  clear_has_isnotrichtext();
}
inline ::google::protobuf::uint32 SnsAction::isnotrichtext() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.IsNotRichText)
  return isnotrichtext_;
}
inline void SnsAction::set_isnotrichtext(::google::protobuf::uint32 value) {
  set_has_isnotrichtext();
  isnotrichtext_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.IsNotRichText)
}

// optional uint64 ReplyCommentId2 = 12;
inline bool SnsAction::has_replycommentid2() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SnsAction::set_has_replycommentid2() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SnsAction::clear_has_replycommentid2() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SnsAction::clear_replycommentid2() {
  replycommentid2_ = GOOGLE_ULONGLONG(0);
  clear_has_replycommentid2();
}
inline ::google::protobuf::uint64 SnsAction::replycommentid2() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.ReplyCommentId2)
  return replycommentid2_;
}
inline void SnsAction::set_replycommentid2(::google::protobuf::uint64 value) {
  set_has_replycommentid2();
  replycommentid2_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.ReplyCommentId2)
}

// optional uint64 CommentId2 = 13;
inline bool SnsAction::has_commentid2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SnsAction::set_has_commentid2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SnsAction::clear_has_commentid2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SnsAction::clear_commentid2() {
  commentid2_ = GOOGLE_ULONGLONG(0);
  clear_has_commentid2();
}
inline ::google::protobuf::uint64 SnsAction::commentid2() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsAction.CommentId2)
  return commentid2_;
}
inline void SnsAction::set_commentid2(::google::protobuf::uint64 value) {
  set_has_commentid2();
  commentid2_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsAction.CommentId2)
}

// -------------------------------------------------------------------

// SnsActionGroup

// required uint64 Id = 1;
inline bool SnsActionGroup::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsActionGroup::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsActionGroup::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsActionGroup::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 SnsActionGroup::id() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsActionGroup.Id)
  return id_;
}
inline void SnsActionGroup::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsActionGroup.Id)
}

// optional uint64 ParentId = 2;
inline bool SnsActionGroup::has_parentid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsActionGroup::set_has_parentid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsActionGroup::clear_has_parentid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsActionGroup::clear_parentid() {
  parentid_ = GOOGLE_ULONGLONG(0);
  clear_has_parentid();
}
inline ::google::protobuf::uint64 SnsActionGroup::parentid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsActionGroup.ParentId)
  return parentid_;
}
inline void SnsActionGroup::set_parentid(::google::protobuf::uint64 value) {
  set_has_parentid();
  parentid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsActionGroup.ParentId)
}

// required .micromsg.SnsAction CurrentAction = 3;
inline bool SnsActionGroup::has_currentaction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsActionGroup::set_has_currentaction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsActionGroup::clear_has_currentaction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsActionGroup::clear_currentaction() {
  if (currentaction_ != NULL) currentaction_->::micromsg::SnsAction::Clear();
  clear_has_currentaction();
}
inline const ::micromsg::SnsAction& SnsActionGroup::currentaction() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsActionGroup.CurrentAction)
  return currentaction_ != NULL ? *currentaction_
                         : *::micromsg::SnsAction::internal_default_instance();
}
inline ::micromsg::SnsAction* SnsActionGroup::mutable_currentaction() {
  set_has_currentaction();
  if (currentaction_ == NULL) {
    currentaction_ = new ::micromsg::SnsAction;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsActionGroup.CurrentAction)
  return currentaction_;
}
inline ::micromsg::SnsAction* SnsActionGroup::release_currentaction() {
  // @@protoc_insertion_point(field_release:micromsg.SnsActionGroup.CurrentAction)
  clear_has_currentaction();
  ::micromsg::SnsAction* temp = currentaction_;
  currentaction_ = NULL;
  return temp;
}
inline void SnsActionGroup::set_allocated_currentaction(::micromsg::SnsAction* currentaction) {
  delete currentaction_;
  currentaction_ = currentaction;
  if (currentaction) {
    set_has_currentaction();
  } else {
    clear_has_currentaction();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsActionGroup.CurrentAction)
}

// optional .micromsg.SnsAction ReferAction = 4;
inline bool SnsActionGroup::has_referaction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsActionGroup::set_has_referaction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsActionGroup::clear_has_referaction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsActionGroup::clear_referaction() {
  if (referaction_ != NULL) referaction_->::micromsg::SnsAction::Clear();
  clear_has_referaction();
}
inline const ::micromsg::SnsAction& SnsActionGroup::referaction() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsActionGroup.ReferAction)
  return referaction_ != NULL ? *referaction_
                         : *::micromsg::SnsAction::internal_default_instance();
}
inline ::micromsg::SnsAction* SnsActionGroup::mutable_referaction() {
  set_has_referaction();
  if (referaction_ == NULL) {
    referaction_ = new ::micromsg::SnsAction;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsActionGroup.ReferAction)
  return referaction_;
}
inline ::micromsg::SnsAction* SnsActionGroup::release_referaction() {
  // @@protoc_insertion_point(field_release:micromsg.SnsActionGroup.ReferAction)
  clear_has_referaction();
  ::micromsg::SnsAction* temp = referaction_;
  referaction_ = NULL;
  return temp;
}
inline void SnsActionGroup::set_allocated_referaction(::micromsg::SnsAction* referaction) {
  delete referaction_;
  referaction_ = referaction;
  if (referaction) {
    set_has_referaction();
  } else {
    clear_has_referaction();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsActionGroup.ReferAction)
}

// optional string ClientId = 5;
inline bool SnsActionGroup::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsActionGroup::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsActionGroup::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsActionGroup::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientid();
}
inline const ::std::string& SnsActionGroup::clientid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsActionGroup.ClientId)
  return clientid_.GetNoArena();
}
inline void SnsActionGroup::set_clientid(const ::std::string& value) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsActionGroup.ClientId)
}
#if LANG_CXX11
inline void SnsActionGroup::set_clientid(::std::string&& value) {
  set_has_clientid();
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsActionGroup.ClientId)
}
#endif
inline void SnsActionGroup::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsActionGroup.ClientId)
}
inline void SnsActionGroup::set_clientid(const char* value, size_t size) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsActionGroup.ClientId)
}
inline ::std::string* SnsActionGroup::mutable_clientid() {
  set_has_clientid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsActionGroup.ClientId)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsActionGroup::release_clientid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsActionGroup.ClientId)
  clear_has_clientid();
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsActionGroup::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    set_has_clientid();
  } else {
    clear_has_clientid();
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsActionGroup.ClientId)
}

// -------------------------------------------------------------------

// SnsCommentRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsCommentRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsCommentRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsCommentRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsCommentRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsCommentRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsCommentRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsCommentRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsCommentRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsCommentRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsCommentRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsCommentRequest.BaseRequest)
}

// required .micromsg.SnsActionGroup Action = 2;
inline bool SnsCommentRequest::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsCommentRequest::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsCommentRequest::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsCommentRequest::clear_action() {
  if (action_ != NULL) action_->::micromsg::SnsActionGroup::Clear();
  clear_has_action();
}
inline const ::micromsg::SnsActionGroup& SnsCommentRequest::action() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentRequest.Action)
  return action_ != NULL ? *action_
                         : *::micromsg::SnsActionGroup::internal_default_instance();
}
inline ::micromsg::SnsActionGroup* SnsCommentRequest::mutable_action() {
  set_has_action();
  if (action_ == NULL) {
    action_ = new ::micromsg::SnsActionGroup;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsCommentRequest.Action)
  return action_;
}
inline ::micromsg::SnsActionGroup* SnsCommentRequest::release_action() {
  // @@protoc_insertion_point(field_release:micromsg.SnsCommentRequest.Action)
  clear_has_action();
  ::micromsg::SnsActionGroup* temp = action_;
  action_ = NULL;
  return temp;
}
inline void SnsCommentRequest::set_allocated_action(::micromsg::SnsActionGroup* action) {
  delete action_;
  action_ = action;
  if (action) {
    set_has_action();
  } else {
    clear_has_action();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsCommentRequest.Action)
}

// optional string ClientId = 3;
inline bool SnsCommentRequest::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsCommentRequest::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsCommentRequest::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsCommentRequest::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientid();
}
inline const ::std::string& SnsCommentRequest::clientid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentRequest.ClientId)
  return clientid_.GetNoArena();
}
inline void SnsCommentRequest::set_clientid(const ::std::string& value) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsCommentRequest.ClientId)
}
#if LANG_CXX11
inline void SnsCommentRequest::set_clientid(::std::string&& value) {
  set_has_clientid();
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsCommentRequest.ClientId)
}
#endif
inline void SnsCommentRequest::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsCommentRequest.ClientId)
}
inline void SnsCommentRequest::set_clientid(const char* value, size_t size) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsCommentRequest.ClientId)
}
inline ::std::string* SnsCommentRequest::mutable_clientid() {
  set_has_clientid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsCommentRequest.ClientId)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsCommentRequest::release_clientid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsCommentRequest.ClientId)
  clear_has_clientid();
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsCommentRequest::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    set_has_clientid();
  } else {
    clear_has_clientid();
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsCommentRequest.ClientId)
}

// -------------------------------------------------------------------

// SnsCommentResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsCommentResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsCommentResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsCommentResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsCommentResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsCommentResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsCommentResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsCommentResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsCommentResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsCommentResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsCommentResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsCommentResponse.BaseResponse)
}

// required .micromsg.SnsObject SnsObject = 2;
inline bool SnsCommentResponse::has_snsobject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsCommentResponse::set_has_snsobject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsCommentResponse::clear_has_snsobject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsCommentResponse::clear_snsobject() {
  if (snsobject_ != NULL) snsobject_->::micromsg::SnsObject::Clear();
  clear_has_snsobject();
}
inline const ::micromsg::SnsObject& SnsCommentResponse::snsobject() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsCommentResponse.SnsObject)
  return snsobject_ != NULL ? *snsobject_
                         : *::micromsg::SnsObject::internal_default_instance();
}
inline ::micromsg::SnsObject* SnsCommentResponse::mutable_snsobject() {
  set_has_snsobject();
  if (snsobject_ == NULL) {
    snsobject_ = new ::micromsg::SnsObject;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsCommentResponse.SnsObject)
  return snsobject_;
}
inline ::micromsg::SnsObject* SnsCommentResponse::release_snsobject() {
  // @@protoc_insertion_point(field_release:micromsg.SnsCommentResponse.SnsObject)
  clear_has_snsobject();
  ::micromsg::SnsObject* temp = snsobject_;
  snsobject_ = NULL;
  return temp;
}
inline void SnsCommentResponse::set_allocated_snsobject(::micromsg::SnsObject* snsobject) {
  delete snsobject_;
  snsobject_ = snsobject;
  if (snsobject) {
    set_has_snsobject();
  } else {
    clear_has_snsobject();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsCommentResponse.SnsObject)
}

// -------------------------------------------------------------------

// SnsADCommentRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsADCommentRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsADCommentRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsADCommentRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsADCommentRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsADCommentRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADCommentRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsADCommentRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADCommentRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsADCommentRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADCommentRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsADCommentRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADCommentRequest.BaseRequest)
}

// required .micromsg.SnsActionGroup Action = 2;
inline bool SnsADCommentRequest::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsADCommentRequest::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsADCommentRequest::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsADCommentRequest::clear_action() {
  if (action_ != NULL) action_->::micromsg::SnsActionGroup::Clear();
  clear_has_action();
}
inline const ::micromsg::SnsActionGroup& SnsADCommentRequest::action() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADCommentRequest.Action)
  return action_ != NULL ? *action_
                         : *::micromsg::SnsActionGroup::internal_default_instance();
}
inline ::micromsg::SnsActionGroup* SnsADCommentRequest::mutable_action() {
  set_has_action();
  if (action_ == NULL) {
    action_ = new ::micromsg::SnsActionGroup;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADCommentRequest.Action)
  return action_;
}
inline ::micromsg::SnsActionGroup* SnsADCommentRequest::release_action() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADCommentRequest.Action)
  clear_has_action();
  ::micromsg::SnsActionGroup* temp = action_;
  action_ = NULL;
  return temp;
}
inline void SnsADCommentRequest::set_allocated_action(::micromsg::SnsActionGroup* action) {
  delete action_;
  action_ = action;
  if (action) {
    set_has_action();
  } else {
    clear_has_action();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADCommentRequest.Action)
}

// optional string ClientId = 3;
inline bool SnsADCommentRequest::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsADCommentRequest::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsADCommentRequest::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsADCommentRequest::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientid();
}
inline const ::std::string& SnsADCommentRequest::clientid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADCommentRequest.ClientId)
  return clientid_.GetNoArena();
}
inline void SnsADCommentRequest::set_clientid(const ::std::string& value) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsADCommentRequest.ClientId)
}
#if LANG_CXX11
inline void SnsADCommentRequest::set_clientid(::std::string&& value) {
  set_has_clientid();
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsADCommentRequest.ClientId)
}
#endif
inline void SnsADCommentRequest::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsADCommentRequest.ClientId)
}
inline void SnsADCommentRequest::set_clientid(const char* value, size_t size) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsADCommentRequest.ClientId)
}
inline ::std::string* SnsADCommentRequest::mutable_clientid() {
  set_has_clientid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADCommentRequest.ClientId)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsADCommentRequest::release_clientid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADCommentRequest.ClientId)
  clear_has_clientid();
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsADCommentRequest::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    set_has_clientid();
  } else {
    clear_has_clientid();
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADCommentRequest.ClientId)
}

// -------------------------------------------------------------------

// SnsADCommentResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsADCommentResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsADCommentResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsADCommentResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsADCommentResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsADCommentResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADCommentResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsADCommentResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADCommentResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsADCommentResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADCommentResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsADCommentResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADCommentResponse.BaseResponse)
}

// required .micromsg.SnsADObject SnsADObject = 2;
inline bool SnsADCommentResponse::has_snsadobject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsADCommentResponse::set_has_snsadobject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsADCommentResponse::clear_has_snsadobject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsADCommentResponse::clear_snsadobject() {
  if (snsadobject_ != NULL) snsadobject_->::micromsg::SnsADObject::Clear();
  clear_has_snsadobject();
}
inline const ::micromsg::SnsADObject& SnsADCommentResponse::snsadobject() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADCommentResponse.SnsADObject)
  return snsadobject_ != NULL ? *snsadobject_
                         : *::micromsg::SnsADObject::internal_default_instance();
}
inline ::micromsg::SnsADObject* SnsADCommentResponse::mutable_snsadobject() {
  set_has_snsadobject();
  if (snsadobject_ == NULL) {
    snsadobject_ = new ::micromsg::SnsADObject;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsADCommentResponse.SnsADObject)
  return snsadobject_;
}
inline ::micromsg::SnsADObject* SnsADCommentResponse::release_snsadobject() {
  // @@protoc_insertion_point(field_release:micromsg.SnsADCommentResponse.SnsADObject)
  clear_has_snsadobject();
  ::micromsg::SnsADObject* temp = snsadobject_;
  snsadobject_ = NULL;
  return temp;
}
inline void SnsADCommentResponse::set_allocated_snsadobject(::micromsg::SnsADObject* snsadobject) {
  delete snsadobject_;
  snsadobject_ = snsadobject;
  if (snsadobject) {
    set_has_snsadobject();
  } else {
    clear_has_snsadobject();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsADCommentResponse.SnsADObject)
}

// -------------------------------------------------------------------

// SnsSyncRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsSyncRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsSyncRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsSyncRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsSyncRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsSyncRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsSyncRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsSyncRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsSyncRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsSyncRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsSyncRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsSyncRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsSyncRequest.BaseRequest)
}

// required uint32 Selector = 2;
inline bool SnsSyncRequest::has_selector() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsSyncRequest::set_has_selector() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsSyncRequest::clear_has_selector() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsSyncRequest::clear_selector() {
  selector_ = 0u;
  clear_has_selector();
}
inline ::google::protobuf::uint32 SnsSyncRequest::selector() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsSyncRequest.Selector)
  return selector_;
}
inline void SnsSyncRequest::set_selector(::google::protobuf::uint32 value) {
  set_has_selector();
  selector_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsSyncRequest.Selector)
}

// required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
inline bool SnsSyncRequest::has_keybuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsSyncRequest::set_has_keybuf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsSyncRequest::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsSyncRequest::clear_keybuf() {
  if (keybuf_ != NULL) keybuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsSyncRequest::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsSyncRequest.KeyBuf)
  return keybuf_ != NULL ? *keybuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsSyncRequest::mutable_keybuf() {
  set_has_keybuf();
  if (keybuf_ == NULL) {
    keybuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsSyncRequest.KeyBuf)
  return keybuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsSyncRequest::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.SnsSyncRequest.KeyBuf)
  clear_has_keybuf();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuf_;
  keybuf_ = NULL;
  return temp;
}
inline void SnsSyncRequest::set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf) {
  delete keybuf_;
  keybuf_ = keybuf;
  if (keybuf) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsSyncRequest.KeyBuf)
}

// -------------------------------------------------------------------

// SnsSyncResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsSyncResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsSyncResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsSyncResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsSyncResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsSyncResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsSyncResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsSyncResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsSyncResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsSyncResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsSyncResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsSyncResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsSyncResponse.BaseResponse)
}

// required .micromsg.CmdList CmdList = 2;
inline bool SnsSyncResponse::has_cmdlist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsSyncResponse::set_has_cmdlist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsSyncResponse::clear_has_cmdlist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsSyncResponse::clear_cmdlist() {
  if (cmdlist_ != NULL) cmdlist_->::micromsg::CmdList::Clear();
  clear_has_cmdlist();
}
inline const ::micromsg::CmdList& SnsSyncResponse::cmdlist() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsSyncResponse.CmdList)
  return cmdlist_ != NULL ? *cmdlist_
                         : *::micromsg::CmdList::internal_default_instance();
}
inline ::micromsg::CmdList* SnsSyncResponse::mutable_cmdlist() {
  set_has_cmdlist();
  if (cmdlist_ == NULL) {
    cmdlist_ = new ::micromsg::CmdList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsSyncResponse.CmdList)
  return cmdlist_;
}
inline ::micromsg::CmdList* SnsSyncResponse::release_cmdlist() {
  // @@protoc_insertion_point(field_release:micromsg.SnsSyncResponse.CmdList)
  clear_has_cmdlist();
  ::micromsg::CmdList* temp = cmdlist_;
  cmdlist_ = NULL;
  return temp;
}
inline void SnsSyncResponse::set_allocated_cmdlist(::micromsg::CmdList* cmdlist) {
  delete cmdlist_;
  cmdlist_ = cmdlist;
  if (cmdlist) {
    set_has_cmdlist();
  } else {
    clear_has_cmdlist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsSyncResponse.CmdList)
}

// required uint32 ContinueFlag = 3;
inline bool SnsSyncResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsSyncResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsSyncResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsSyncResponse::clear_continueflag() {
  continueflag_ = 0u;
  clear_has_continueflag();
}
inline ::google::protobuf::uint32 SnsSyncResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsSyncResponse.ContinueFlag)
  return continueflag_;
}
inline void SnsSyncResponse::set_continueflag(::google::protobuf::uint32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsSyncResponse.ContinueFlag)
}

// required .micromsg.SKBuiltinBuffer_t KeyBuf = 4;
inline bool SnsSyncResponse::has_keybuf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsSyncResponse::set_has_keybuf() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsSyncResponse::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsSyncResponse::clear_keybuf() {
  if (keybuf_ != NULL) keybuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsSyncResponse::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsSyncResponse.KeyBuf)
  return keybuf_ != NULL ? *keybuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsSyncResponse::mutable_keybuf() {
  set_has_keybuf();
  if (keybuf_ == NULL) {
    keybuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsSyncResponse.KeyBuf)
  return keybuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsSyncResponse::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.SnsSyncResponse.KeyBuf)
  clear_has_keybuf();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuf_;
  keybuf_ = NULL;
  return temp;
}
inline void SnsSyncResponse::set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf) {
  delete keybuf_;
  keybuf_ = keybuf;
  if (keybuf) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsSyncResponse.KeyBuf)
}

// -------------------------------------------------------------------

// SnsObjectOp

// required uint64 Id = 1;
inline bool SnsObjectOp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsObjectOp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsObjectOp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsObjectOp::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 SnsObjectOp::id() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectOp.Id)
  return id_;
}
inline void SnsObjectOp::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObjectOp.Id)
}

// required uint32 OpType = 2;
inline bool SnsObjectOp::has_optype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsObjectOp::set_has_optype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsObjectOp::clear_has_optype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsObjectOp::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 SnsObjectOp::optype() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectOp.OpType)
  return optype_;
}
inline void SnsObjectOp::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObjectOp.OpType)
}

// optional .micromsg.SKBuiltinBuffer_t Ext = 3;
inline bool SnsObjectOp::has_ext() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsObjectOp::set_has_ext() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsObjectOp::clear_has_ext() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsObjectOp::clear_ext() {
  if (ext_ != NULL) ext_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_ext();
}
inline const ::micromsg::SKBuiltinBuffer_t& SnsObjectOp::ext() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectOp.Ext)
  return ext_ != NULL ? *ext_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* SnsObjectOp::mutable_ext() {
  set_has_ext();
  if (ext_ == NULL) {
    ext_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObjectOp.Ext)
  return ext_;
}
inline ::micromsg::SKBuiltinBuffer_t* SnsObjectOp::release_ext() {
  // @@protoc_insertion_point(field_release:micromsg.SnsObjectOp.Ext)
  clear_has_ext();
  ::micromsg::SKBuiltinBuffer_t* temp = ext_;
  ext_ = NULL;
  return temp;
}
inline void SnsObjectOp::set_allocated_ext(::micromsg::SKBuiltinBuffer_t* ext) {
  delete ext_;
  ext_ = ext;
  if (ext) {
    set_has_ext();
  } else {
    clear_has_ext();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsObjectOp.Ext)
}

// -------------------------------------------------------------------

// SnsObjectOpDeleteComment

// required int32 CommentId = 1;
inline bool SnsObjectOpDeleteComment::has_commentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsObjectOpDeleteComment::set_has_commentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsObjectOpDeleteComment::clear_has_commentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsObjectOpDeleteComment::clear_commentid() {
  commentid_ = 0;
  clear_has_commentid();
}
inline ::google::protobuf::int32 SnsObjectOpDeleteComment::commentid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectOpDeleteComment.CommentId)
  return commentid_;
}
inline void SnsObjectOpDeleteComment::set_commentid(::google::protobuf::int32 value) {
  set_has_commentid();
  commentid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObjectOpDeleteComment.CommentId)
}

// -------------------------------------------------------------------

// SnsADObjectOpDeleteComment

// required uint64 CommentId = 1;
inline bool SnsADObjectOpDeleteComment::has_commentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsADObjectOpDeleteComment::set_has_commentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsADObjectOpDeleteComment::clear_has_commentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsADObjectOpDeleteComment::clear_commentid() {
  commentid_ = GOOGLE_ULONGLONG(0);
  clear_has_commentid();
}
inline ::google::protobuf::uint64 SnsADObjectOpDeleteComment::commentid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsADObjectOpDeleteComment.CommentId)
  return commentid_;
}
inline void SnsADObjectOpDeleteComment::set_commentid(::google::protobuf::uint64 value) {
  set_has_commentid();
  commentid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsADObjectOpDeleteComment.CommentId)
}

// -------------------------------------------------------------------

// SnsObjectOpRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsObjectOpRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsObjectOpRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsObjectOpRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsObjectOpRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsObjectOpRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectOpRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsObjectOpRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObjectOpRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsObjectOpRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsObjectOpRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsObjectOpRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsObjectOpRequest.BaseRequest)
}

// required uint32 OpCount = 2;
inline bool SnsObjectOpRequest::has_opcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsObjectOpRequest::set_has_opcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsObjectOpRequest::clear_has_opcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsObjectOpRequest::clear_opcount() {
  opcount_ = 0u;
  clear_has_opcount();
}
inline ::google::protobuf::uint32 SnsObjectOpRequest::opcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectOpRequest.OpCount)
  return opcount_;
}
inline void SnsObjectOpRequest::set_opcount(::google::protobuf::uint32 value) {
  set_has_opcount();
  opcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObjectOpRequest.OpCount)
}

// repeated .micromsg.SnsObjectOp OpList = 3;
inline int SnsObjectOpRequest::oplist_size() const {
  return oplist_.size();
}
inline void SnsObjectOpRequest::clear_oplist() {
  oplist_.Clear();
}
inline const ::micromsg::SnsObjectOp& SnsObjectOpRequest::oplist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectOpRequest.OpList)
  return oplist_.Get(index);
}
inline ::micromsg::SnsObjectOp* SnsObjectOpRequest::mutable_oplist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObjectOpRequest.OpList)
  return oplist_.Mutable(index);
}
inline ::micromsg::SnsObjectOp* SnsObjectOpRequest::add_oplist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsObjectOpRequest.OpList)
  return oplist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObjectOp >*
SnsObjectOpRequest::mutable_oplist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsObjectOpRequest.OpList)
  return &oplist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObjectOp >&
SnsObjectOpRequest::oplist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsObjectOpRequest.OpList)
  return oplist_;
}

// -------------------------------------------------------------------

// SnsObjectOpResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsObjectOpResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsObjectOpResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsObjectOpResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsObjectOpResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsObjectOpResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectOpResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsObjectOpResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsObjectOpResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsObjectOpResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsObjectOpResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsObjectOpResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsObjectOpResponse.BaseResponse)
}

// required uint32 OpCount = 2;
inline bool SnsObjectOpResponse::has_opcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsObjectOpResponse::set_has_opcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsObjectOpResponse::clear_has_opcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsObjectOpResponse::clear_opcount() {
  opcount_ = 0u;
  clear_has_opcount();
}
inline ::google::protobuf::uint32 SnsObjectOpResponse::opcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectOpResponse.OpCount)
  return opcount_;
}
inline void SnsObjectOpResponse::set_opcount(::google::protobuf::uint32 value) {
  set_has_opcount();
  opcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsObjectOpResponse.OpCount)
}

// repeated int32 OpRetList = 3 [packed = true];
inline int SnsObjectOpResponse::opretlist_size() const {
  return opretlist_.size();
}
inline void SnsObjectOpResponse::clear_opretlist() {
  opretlist_.Clear();
}
inline ::google::protobuf::int32 SnsObjectOpResponse::opretlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsObjectOpResponse.OpRetList)
  return opretlist_.Get(index);
}
inline void SnsObjectOpResponse::set_opretlist(int index, ::google::protobuf::int32 value) {
  opretlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:micromsg.SnsObjectOpResponse.OpRetList)
}
inline void SnsObjectOpResponse::add_opretlist(::google::protobuf::int32 value) {
  opretlist_.Add(value);
  // @@protoc_insertion_point(field_add:micromsg.SnsObjectOpResponse.OpRetList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SnsObjectOpResponse::opretlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsObjectOpResponse.OpRetList)
  return opretlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SnsObjectOpResponse::mutable_opretlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsObjectOpResponse.OpRetList)
  return &opretlist_;
}

// -------------------------------------------------------------------

// SnsLbsRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsLbsRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsLbsRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsLbsRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsLbsRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsLbsRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsLbsRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsLbsRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsLbsRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsLbsRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsLbsRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsLbsRequest.BaseRequest)
}

// required uint32 OpCode = 2;
inline bool SnsLbsRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsLbsRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsLbsRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsLbsRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 SnsLbsRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsRequest.OpCode)
  return opcode_;
}
inline void SnsLbsRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsLbsRequest.OpCode)
}

// required float Longitude = 3;
inline bool SnsLbsRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsLbsRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsLbsRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsLbsRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float SnsLbsRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsRequest.Longitude)
  return longitude_;
}
inline void SnsLbsRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsLbsRequest.Longitude)
}

// required float Latitude = 4;
inline bool SnsLbsRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsLbsRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsLbsRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsLbsRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float SnsLbsRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsRequest.Latitude)
  return latitude_;
}
inline void SnsLbsRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsLbsRequest.Latitude)
}

// required int32 Precision = 5;
inline bool SnsLbsRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsLbsRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsLbsRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsLbsRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 SnsLbsRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsRequest.Precision)
  return precision_;
}
inline void SnsLbsRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsLbsRequest.Precision)
}

// optional string MacAddr = 6;
inline bool SnsLbsRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsLbsRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsLbsRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsLbsRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& SnsLbsRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsRequest.MacAddr)
  return macaddr_.GetNoArena();
}
inline void SnsLbsRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsLbsRequest.MacAddr)
}
#if LANG_CXX11
inline void SnsLbsRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsLbsRequest.MacAddr)
}
#endif
inline void SnsLbsRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsLbsRequest.MacAddr)
}
inline void SnsLbsRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsLbsRequest.MacAddr)
}
inline ::std::string* SnsLbsRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsLbsRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsLbsRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.SnsLbsRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsLbsRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsLbsRequest.MacAddr)
}

// optional string CellId = 7;
inline bool SnsLbsRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsLbsRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsLbsRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsLbsRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
inline const ::std::string& SnsLbsRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsRequest.CellId)
  return cellid_.GetNoArena();
}
inline void SnsLbsRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsLbsRequest.CellId)
}
#if LANG_CXX11
inline void SnsLbsRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsLbsRequest.CellId)
}
#endif
inline void SnsLbsRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsLbsRequest.CellId)
}
inline void SnsLbsRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsLbsRequest.CellId)
}
inline ::std::string* SnsLbsRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsLbsRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsLbsRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsLbsRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsLbsRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsLbsRequest.CellId)
}

// required int32 GPSSource = 8;
inline bool SnsLbsRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnsLbsRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnsLbsRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnsLbsRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
inline ::google::protobuf::int32 SnsLbsRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsRequest.GPSSource)
  return gpssource_;
}
inline void SnsLbsRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsLbsRequest.GPSSource)
}

// required uint32 SBTime = 9;
inline bool SnsLbsRequest::has_sbtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SnsLbsRequest::set_has_sbtime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SnsLbsRequest::clear_has_sbtime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SnsLbsRequest::clear_sbtime() {
  sbtime_ = 0u;
  clear_has_sbtime();
}
inline ::google::protobuf::uint32 SnsLbsRequest::sbtime() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsRequest.SBTime)
  return sbtime_;
}
inline void SnsLbsRequest::set_sbtime(::google::protobuf::uint32 value) {
  set_has_sbtime();
  sbtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsLbsRequest.SBTime)
}

// -------------------------------------------------------------------

// SnsLbsContactInfo

// optional string UserName = 1;
inline bool SnsLbsContactInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsLbsContactInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsLbsContactInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsLbsContactInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& SnsLbsContactInfo::username() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsContactInfo.UserName)
  return username_.GetNoArena();
}
inline void SnsLbsContactInfo::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsLbsContactInfo.UserName)
}
#if LANG_CXX11
inline void SnsLbsContactInfo::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsLbsContactInfo.UserName)
}
#endif
inline void SnsLbsContactInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsLbsContactInfo.UserName)
}
inline void SnsLbsContactInfo::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsLbsContactInfo.UserName)
}
inline ::std::string* SnsLbsContactInfo::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsLbsContactInfo.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsLbsContactInfo::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.SnsLbsContactInfo.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsLbsContactInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsLbsContactInfo.UserName)
}

// -------------------------------------------------------------------

// SnsLbsResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsLbsResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsLbsResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsLbsResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsLbsResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsLbsResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsLbsResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsLbsResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsLbsResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsLbsResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsLbsResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsLbsResponse.BaseResponse)
}

// required uint32 ContactCount = 2;
inline bool SnsLbsResponse::has_contactcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsLbsResponse::set_has_contactcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsLbsResponse::clear_has_contactcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsLbsResponse::clear_contactcount() {
  contactcount_ = 0u;
  clear_has_contactcount();
}
inline ::google::protobuf::uint32 SnsLbsResponse::contactcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsResponse.ContactCount)
  return contactcount_;
}
inline void SnsLbsResponse::set_contactcount(::google::protobuf::uint32 value) {
  set_has_contactcount();
  contactcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsLbsResponse.ContactCount)
}

// repeated .micromsg.SnsLbsContactInfo ContactList = 3;
inline int SnsLbsResponse::contactlist_size() const {
  return contactlist_.size();
}
inline void SnsLbsResponse::clear_contactlist() {
  contactlist_.Clear();
}
inline const ::micromsg::SnsLbsContactInfo& SnsLbsResponse::contactlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsLbsResponse.ContactList)
  return contactlist_.Get(index);
}
inline ::micromsg::SnsLbsContactInfo* SnsLbsResponse::mutable_contactlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsLbsResponse.ContactList)
  return contactlist_.Mutable(index);
}
inline ::micromsg::SnsLbsContactInfo* SnsLbsResponse::add_contactlist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsLbsResponse.ContactList)
  return contactlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsLbsContactInfo >*
SnsLbsResponse::mutable_contactlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsLbsResponse.ContactList)
  return &contactlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsLbsContactInfo >&
SnsLbsResponse::contactlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsLbsResponse.ContactList)
  return contactlist_;
}

// -------------------------------------------------------------------

// SnsGetCityRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsGetCityRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsGetCityRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsGetCityRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsGetCityRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsGetCityRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsGetCityRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsGetCityRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsGetCityRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsGetCityRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsGetCityRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsGetCityRequest.BaseRequest)
}

// required int32 Longitude = 3;
inline bool SnsGetCityRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsGetCityRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsGetCityRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsGetCityRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline ::google::protobuf::int32 SnsGetCityRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityRequest.Longitude)
  return longitude_;
}
inline void SnsGetCityRequest::set_longitude(::google::protobuf::int32 value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsGetCityRequest.Longitude)
}

// required int32 Latitude = 4;
inline bool SnsGetCityRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsGetCityRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsGetCityRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsGetCityRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline ::google::protobuf::int32 SnsGetCityRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityRequest.Latitude)
  return latitude_;
}
inline void SnsGetCityRequest::set_latitude(::google::protobuf::int32 value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsGetCityRequest.Latitude)
}

// required int32 Precision = 5;
inline bool SnsGetCityRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsGetCityRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsGetCityRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsGetCityRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 SnsGetCityRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityRequest.Precision)
  return precision_;
}
inline void SnsGetCityRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsGetCityRequest.Precision)
}

// optional string MacAddr = 6;
inline bool SnsGetCityRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsGetCityRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsGetCityRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsGetCityRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& SnsGetCityRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityRequest.MacAddr)
  return macaddr_.GetNoArena();
}
inline void SnsGetCityRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsGetCityRequest.MacAddr)
}
#if LANG_CXX11
inline void SnsGetCityRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsGetCityRequest.MacAddr)
}
#endif
inline void SnsGetCityRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsGetCityRequest.MacAddr)
}
inline void SnsGetCityRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsGetCityRequest.MacAddr)
}
inline ::std::string* SnsGetCityRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsGetCityRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsGetCityRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.SnsGetCityRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsGetCityRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsGetCityRequest.MacAddr)
}

// optional string CellId = 7;
inline bool SnsGetCityRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsGetCityRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsGetCityRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsGetCityRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
inline const ::std::string& SnsGetCityRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityRequest.CellId)
  return cellid_.GetNoArena();
}
inline void SnsGetCityRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsGetCityRequest.CellId)
}
#if LANG_CXX11
inline void SnsGetCityRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsGetCityRequest.CellId)
}
#endif
inline void SnsGetCityRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsGetCityRequest.CellId)
}
inline void SnsGetCityRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsGetCityRequest.CellId)
}
inline ::std::string* SnsGetCityRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsGetCityRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsGetCityRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsGetCityRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsGetCityRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsGetCityRequest.CellId)
}

// required int32 GPSSource = 8;
inline bool SnsGetCityRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsGetCityRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsGetCityRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsGetCityRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
inline ::google::protobuf::int32 SnsGetCityRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityRequest.GPSSource)
  return gpssource_;
}
inline void SnsGetCityRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsGetCityRequest.GPSSource)
}

// -------------------------------------------------------------------

// SnsGetCityResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsGetCityResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsGetCityResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsGetCityResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsGetCityResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsGetCityResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsGetCityResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsGetCityResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsGetCityResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsGetCityResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsGetCityResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsGetCityResponse.BaseResponse)
}

// required int32 Longitude = 2;
inline bool SnsGetCityResponse::has_longitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsGetCityResponse::set_has_longitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsGetCityResponse::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsGetCityResponse::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline ::google::protobuf::int32 SnsGetCityResponse::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityResponse.Longitude)
  return longitude_;
}
inline void SnsGetCityResponse::set_longitude(::google::protobuf::int32 value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsGetCityResponse.Longitude)
}

// required int32 Latitude = 3;
inline bool SnsGetCityResponse::has_latitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsGetCityResponse::set_has_latitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsGetCityResponse::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsGetCityResponse::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline ::google::protobuf::int32 SnsGetCityResponse::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityResponse.Latitude)
  return latitude_;
}
inline void SnsGetCityResponse::set_latitude(::google::protobuf::int32 value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsGetCityResponse.Latitude)
}

// optional string Country = 4;
inline bool SnsGetCityResponse::has_country() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsGetCityResponse::set_has_country() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsGetCityResponse::clear_has_country() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsGetCityResponse::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& SnsGetCityResponse::country() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityResponse.Country)
  return country_.GetNoArena();
}
inline void SnsGetCityResponse::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsGetCityResponse.Country)
}
#if LANG_CXX11
inline void SnsGetCityResponse::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsGetCityResponse.Country)
}
#endif
inline void SnsGetCityResponse::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsGetCityResponse.Country)
}
inline void SnsGetCityResponse::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsGetCityResponse.Country)
}
inline ::std::string* SnsGetCityResponse::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsGetCityResponse.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsGetCityResponse::release_country() {
  // @@protoc_insertion_point(field_release:micromsg.SnsGetCityResponse.Country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsGetCityResponse::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsGetCityResponse.Country)
}

// optional string City = 5;
inline bool SnsGetCityResponse::has_city() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsGetCityResponse::set_has_city() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsGetCityResponse::clear_has_city() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsGetCityResponse::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
inline const ::std::string& SnsGetCityResponse::city() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsGetCityResponse.City)
  return city_.GetNoArena();
}
inline void SnsGetCityResponse::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsGetCityResponse.City)
}
#if LANG_CXX11
inline void SnsGetCityResponse::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsGetCityResponse.City)
}
#endif
inline void SnsGetCityResponse::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsGetCityResponse.City)
}
inline void SnsGetCityResponse::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsGetCityResponse.City)
}
inline ::std::string* SnsGetCityResponse::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsGetCityResponse.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsGetCityResponse::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.SnsGetCityResponse.City)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsGetCityResponse::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsGetCityResponse.City)
}

// -------------------------------------------------------------------

// SnsClassifyTimeLineRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsClassifyTimeLineRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsClassifyTimeLineRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsClassifyTimeLineRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsClassifyTimeLineRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsClassifyTimeLineRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsClassifyTimeLineRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsClassifyTimeLineRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsClassifyTimeLineRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsClassifyTimeLineRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsClassifyTimeLineRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsClassifyTimeLineRequest.BaseRequest)
}

// optional string FirstPageMd5 = 2;
inline bool SnsClassifyTimeLineRequest::has_firstpagemd5() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsClassifyTimeLineRequest::set_has_firstpagemd5() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsClassifyTimeLineRequest::clear_has_firstpagemd5() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsClassifyTimeLineRequest::clear_firstpagemd5() {
  firstpagemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_firstpagemd5();
}
inline const ::std::string& SnsClassifyTimeLineRequest::firstpagemd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineRequest.FirstPageMd5)
  return firstpagemd5_.GetNoArena();
}
inline void SnsClassifyTimeLineRequest::set_firstpagemd5(const ::std::string& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsClassifyTimeLineRequest.FirstPageMd5)
}
#if LANG_CXX11
inline void SnsClassifyTimeLineRequest::set_firstpagemd5(::std::string&& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsClassifyTimeLineRequest.FirstPageMd5)
}
#endif
inline void SnsClassifyTimeLineRequest::set_firstpagemd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsClassifyTimeLineRequest.FirstPageMd5)
}
inline void SnsClassifyTimeLineRequest::set_firstpagemd5(const char* value, size_t size) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsClassifyTimeLineRequest.FirstPageMd5)
}
inline ::std::string* SnsClassifyTimeLineRequest::mutable_firstpagemd5() {
  set_has_firstpagemd5();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsClassifyTimeLineRequest.FirstPageMd5)
  return firstpagemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsClassifyTimeLineRequest::release_firstpagemd5() {
  // @@protoc_insertion_point(field_release:micromsg.SnsClassifyTimeLineRequest.FirstPageMd5)
  clear_has_firstpagemd5();
  return firstpagemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsClassifyTimeLineRequest::set_allocated_firstpagemd5(::std::string* firstpagemd5) {
  if (firstpagemd5 != NULL) {
    set_has_firstpagemd5();
  } else {
    clear_has_firstpagemd5();
  }
  firstpagemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstpagemd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsClassifyTimeLineRequest.FirstPageMd5)
}

// required uint64 MaxId = 3;
inline bool SnsClassifyTimeLineRequest::has_maxid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsClassifyTimeLineRequest::set_has_maxid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsClassifyTimeLineRequest::clear_has_maxid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsClassifyTimeLineRequest::clear_maxid() {
  maxid_ = GOOGLE_ULONGLONG(0);
  clear_has_maxid();
}
inline ::google::protobuf::uint64 SnsClassifyTimeLineRequest::maxid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineRequest.MaxId)
  return maxid_;
}
inline void SnsClassifyTimeLineRequest::set_maxid(::google::protobuf::uint64 value) {
  set_has_maxid();
  maxid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsClassifyTimeLineRequest.MaxId)
}

// optional string ClassifyId = 4;
inline bool SnsClassifyTimeLineRequest::has_classifyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsClassifyTimeLineRequest::set_has_classifyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsClassifyTimeLineRequest::clear_has_classifyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsClassifyTimeLineRequest::clear_classifyid() {
  classifyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_classifyid();
}
inline const ::std::string& SnsClassifyTimeLineRequest::classifyid() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineRequest.ClassifyId)
  return classifyid_.GetNoArena();
}
inline void SnsClassifyTimeLineRequest::set_classifyid(const ::std::string& value) {
  set_has_classifyid();
  classifyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsClassifyTimeLineRequest.ClassifyId)
}
#if LANG_CXX11
inline void SnsClassifyTimeLineRequest::set_classifyid(::std::string&& value) {
  set_has_classifyid();
  classifyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsClassifyTimeLineRequest.ClassifyId)
}
#endif
inline void SnsClassifyTimeLineRequest::set_classifyid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_classifyid();
  classifyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsClassifyTimeLineRequest.ClassifyId)
}
inline void SnsClassifyTimeLineRequest::set_classifyid(const char* value, size_t size) {
  set_has_classifyid();
  classifyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsClassifyTimeLineRequest.ClassifyId)
}
inline ::std::string* SnsClassifyTimeLineRequest::mutable_classifyid() {
  set_has_classifyid();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsClassifyTimeLineRequest.ClassifyId)
  return classifyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsClassifyTimeLineRequest::release_classifyid() {
  // @@protoc_insertion_point(field_release:micromsg.SnsClassifyTimeLineRequest.ClassifyId)
  clear_has_classifyid();
  return classifyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsClassifyTimeLineRequest::set_allocated_classifyid(::std::string* classifyid) {
  if (classifyid != NULL) {
    set_has_classifyid();
  } else {
    clear_has_classifyid();
  }
  classifyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classifyid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsClassifyTimeLineRequest.ClassifyId)
}

// required uint32 ClassifyType = 5;
inline bool SnsClassifyTimeLineRequest::has_classifytype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsClassifyTimeLineRequest::set_has_classifytype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsClassifyTimeLineRequest::clear_has_classifytype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsClassifyTimeLineRequest::clear_classifytype() {
  classifytype_ = 0u;
  clear_has_classifytype();
}
inline ::google::protobuf::uint32 SnsClassifyTimeLineRequest::classifytype() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineRequest.ClassifyType)
  return classifytype_;
}
inline void SnsClassifyTimeLineRequest::set_classifytype(::google::protobuf::uint32 value) {
  set_has_classifytype();
  classifytype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsClassifyTimeLineRequest.ClassifyType)
}

// -------------------------------------------------------------------

// SnsClassifyTimeLineResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsClassifyTimeLineResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsClassifyTimeLineResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsClassifyTimeLineResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsClassifyTimeLineResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsClassifyTimeLineResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsClassifyTimeLineResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsClassifyTimeLineResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsClassifyTimeLineResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsClassifyTimeLineResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsClassifyTimeLineResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsClassifyTimeLineResponse.BaseResponse)
}

// optional string FirstPageMd5 = 2;
inline bool SnsClassifyTimeLineResponse::has_firstpagemd5() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsClassifyTimeLineResponse::set_has_firstpagemd5() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsClassifyTimeLineResponse::clear_has_firstpagemd5() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsClassifyTimeLineResponse::clear_firstpagemd5() {
  firstpagemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_firstpagemd5();
}
inline const ::std::string& SnsClassifyTimeLineResponse::firstpagemd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineResponse.FirstPageMd5)
  return firstpagemd5_.GetNoArena();
}
inline void SnsClassifyTimeLineResponse::set_firstpagemd5(const ::std::string& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsClassifyTimeLineResponse.FirstPageMd5)
}
#if LANG_CXX11
inline void SnsClassifyTimeLineResponse::set_firstpagemd5(::std::string&& value) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsClassifyTimeLineResponse.FirstPageMd5)
}
#endif
inline void SnsClassifyTimeLineResponse::set_firstpagemd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsClassifyTimeLineResponse.FirstPageMd5)
}
inline void SnsClassifyTimeLineResponse::set_firstpagemd5(const char* value, size_t size) {
  set_has_firstpagemd5();
  firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsClassifyTimeLineResponse.FirstPageMd5)
}
inline ::std::string* SnsClassifyTimeLineResponse::mutable_firstpagemd5() {
  set_has_firstpagemd5();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsClassifyTimeLineResponse.FirstPageMd5)
  return firstpagemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsClassifyTimeLineResponse::release_firstpagemd5() {
  // @@protoc_insertion_point(field_release:micromsg.SnsClassifyTimeLineResponse.FirstPageMd5)
  clear_has_firstpagemd5();
  return firstpagemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsClassifyTimeLineResponse::set_allocated_firstpagemd5(::std::string* firstpagemd5) {
  if (firstpagemd5 != NULL) {
    set_has_firstpagemd5();
  } else {
    clear_has_firstpagemd5();
  }
  firstpagemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstpagemd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsClassifyTimeLineResponse.FirstPageMd5)
}

// required uint32 ObjectCount = 3;
inline bool SnsClassifyTimeLineResponse::has_objectcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsClassifyTimeLineResponse::set_has_objectcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsClassifyTimeLineResponse::clear_has_objectcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsClassifyTimeLineResponse::clear_objectcount() {
  objectcount_ = 0u;
  clear_has_objectcount();
}
inline ::google::protobuf::uint32 SnsClassifyTimeLineResponse::objectcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineResponse.ObjectCount)
  return objectcount_;
}
inline void SnsClassifyTimeLineResponse::set_objectcount(::google::protobuf::uint32 value) {
  set_has_objectcount();
  objectcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsClassifyTimeLineResponse.ObjectCount)
}

// repeated .micromsg.SnsObject ObjectList = 4;
inline int SnsClassifyTimeLineResponse::objectlist_size() const {
  return objectlist_.size();
}
inline void SnsClassifyTimeLineResponse::clear_objectlist() {
  objectlist_.Clear();
}
inline const ::micromsg::SnsObject& SnsClassifyTimeLineResponse::objectlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineResponse.ObjectList)
  return objectlist_.Get(index);
}
inline ::micromsg::SnsObject* SnsClassifyTimeLineResponse::mutable_objectlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SnsClassifyTimeLineResponse.ObjectList)
  return objectlist_.Mutable(index);
}
inline ::micromsg::SnsObject* SnsClassifyTimeLineResponse::add_objectlist() {
  // @@protoc_insertion_point(field_add:micromsg.SnsClassifyTimeLineResponse.ObjectList)
  return objectlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >*
SnsClassifyTimeLineResponse::mutable_objectlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SnsClassifyTimeLineResponse.ObjectList)
  return &objectlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SnsObject >&
SnsClassifyTimeLineResponse::objectlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SnsClassifyTimeLineResponse.ObjectList)
  return objectlist_;
}

// required uint32 ObjectCountForSameMd5 = 5;
inline bool SnsClassifyTimeLineResponse::has_objectcountforsamemd5() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsClassifyTimeLineResponse::set_has_objectcountforsamemd5() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsClassifyTimeLineResponse::clear_has_objectcountforsamemd5() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsClassifyTimeLineResponse::clear_objectcountforsamemd5() {
  objectcountforsamemd5_ = 0u;
  clear_has_objectcountforsamemd5();
}
inline ::google::protobuf::uint32 SnsClassifyTimeLineResponse::objectcountforsamemd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineResponse.ObjectCountForSameMd5)
  return objectcountforsamemd5_;
}
inline void SnsClassifyTimeLineResponse::set_objectcountforsamemd5(::google::protobuf::uint32 value) {
  set_has_objectcountforsamemd5();
  objectcountforsamemd5_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsClassifyTimeLineResponse.ObjectCountForSameMd5)
}

// optional string Description = 6;
inline bool SnsClassifyTimeLineResponse::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsClassifyTimeLineResponse::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsClassifyTimeLineResponse::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsClassifyTimeLineResponse::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& SnsClassifyTimeLineResponse::description() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineResponse.Description)
  return description_.GetNoArena();
}
inline void SnsClassifyTimeLineResponse::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SnsClassifyTimeLineResponse.Description)
}
#if LANG_CXX11
inline void SnsClassifyTimeLineResponse::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SnsClassifyTimeLineResponse.Description)
}
#endif
inline void SnsClassifyTimeLineResponse::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SnsClassifyTimeLineResponse.Description)
}
inline void SnsClassifyTimeLineResponse::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SnsClassifyTimeLineResponse.Description)
}
inline ::std::string* SnsClassifyTimeLineResponse::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:micromsg.SnsClassifyTimeLineResponse.Description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsClassifyTimeLineResponse::release_description() {
  // @@protoc_insertion_point(field_release:micromsg.SnsClassifyTimeLineResponse.Description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsClassifyTimeLineResponse::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsClassifyTimeLineResponse.Description)
}

// required uint32 ControlFlag = 7;
inline bool SnsClassifyTimeLineResponse::has_controlflag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsClassifyTimeLineResponse::set_has_controlflag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsClassifyTimeLineResponse::clear_has_controlflag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsClassifyTimeLineResponse::clear_controlflag() {
  controlflag_ = 0u;
  clear_has_controlflag();
}
inline ::google::protobuf::uint32 SnsClassifyTimeLineResponse::controlflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineResponse.ControlFlag)
  return controlflag_;
}
inline void SnsClassifyTimeLineResponse::set_controlflag(::google::protobuf::uint32 value) {
  set_has_controlflag();
  controlflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SnsClassifyTimeLineResponse.ControlFlag)
}

// required .micromsg.SnsServerConfig ServerConfig = 8;
inline bool SnsClassifyTimeLineResponse::has_serverconfig() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsClassifyTimeLineResponse::set_has_serverconfig() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsClassifyTimeLineResponse::clear_has_serverconfig() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsClassifyTimeLineResponse::clear_serverconfig() {
  if (serverconfig_ != NULL) serverconfig_->::micromsg::SnsServerConfig::Clear();
  clear_has_serverconfig();
}
inline const ::micromsg::SnsServerConfig& SnsClassifyTimeLineResponse::serverconfig() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsClassifyTimeLineResponse.ServerConfig)
  return serverconfig_ != NULL ? *serverconfig_
                         : *::micromsg::SnsServerConfig::internal_default_instance();
}
inline ::micromsg::SnsServerConfig* SnsClassifyTimeLineResponse::mutable_serverconfig() {
  set_has_serverconfig();
  if (serverconfig_ == NULL) {
    serverconfig_ = new ::micromsg::SnsServerConfig;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsClassifyTimeLineResponse.ServerConfig)
  return serverconfig_;
}
inline ::micromsg::SnsServerConfig* SnsClassifyTimeLineResponse::release_serverconfig() {
  // @@protoc_insertion_point(field_release:micromsg.SnsClassifyTimeLineResponse.ServerConfig)
  clear_has_serverconfig();
  ::micromsg::SnsServerConfig* temp = serverconfig_;
  serverconfig_ = NULL;
  return temp;
}
inline void SnsClassifyTimeLineResponse::set_allocated_serverconfig(::micromsg::SnsServerConfig* serverconfig) {
  delete serverconfig_;
  serverconfig_ = serverconfig;
  if (serverconfig) {
    set_has_serverconfig();
  } else {
    clear_has_serverconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsClassifyTimeLineResponse.ServerConfig)
}

// -------------------------------------------------------------------

// Whatsnew61

// optional uint32 like = 1;
inline bool Whatsnew61::has_like() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Whatsnew61::set_has_like() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Whatsnew61::clear_has_like() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Whatsnew61::clear_like() {
  like_ = 0u;
  clear_has_like();
}
inline ::google::protobuf::uint32 Whatsnew61::like() const {
  // @@protoc_insertion_point(field_get:micromsg.Whatsnew61.like)
  return like_;
}
inline void Whatsnew61::set_like(::google::protobuf::uint32 value) {
  set_has_like();
  like_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Whatsnew61.like)
}

// optional uint32 liked = 2;
inline bool Whatsnew61::has_liked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Whatsnew61::set_has_liked() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Whatsnew61::clear_has_liked() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Whatsnew61::clear_liked() {
  liked_ = 0u;
  clear_has_liked();
}
inline ::google::protobuf::uint32 Whatsnew61::liked() const {
  // @@protoc_insertion_point(field_get:micromsg.Whatsnew61.liked)
  return liked_;
}
inline void Whatsnew61::set_liked(::google::protobuf::uint32 value) {
  set_has_liked();
  liked_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Whatsnew61.liked)
}

// -------------------------------------------------------------------

// SnsWhatsnewRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SnsWhatsnewRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsWhatsnewRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsWhatsnewRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsWhatsnewRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SnsWhatsnewRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsWhatsnewRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SnsWhatsnewRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsWhatsnewRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SnsWhatsnewRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SnsWhatsnewRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SnsWhatsnewRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsWhatsnewRequest.BaseRequest)
}

// -------------------------------------------------------------------

// SnsWhatsnewResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SnsWhatsnewResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsWhatsnewResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsWhatsnewResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsWhatsnewResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SnsWhatsnewResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsWhatsnewResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SnsWhatsnewResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsWhatsnewResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SnsWhatsnewResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SnsWhatsnewResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SnsWhatsnewResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsWhatsnewResponse.BaseResponse)
}

// optional .micromsg.Whatsnew61 Whatsnew61 = 2;
inline bool SnsWhatsnewResponse::has_whatsnew61() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsWhatsnewResponse::set_has_whatsnew61() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsWhatsnewResponse::clear_has_whatsnew61() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsWhatsnewResponse::clear_whatsnew61() {
  if (whatsnew61_ != NULL) whatsnew61_->::micromsg::Whatsnew61::Clear();
  clear_has_whatsnew61();
}
inline const ::micromsg::Whatsnew61& SnsWhatsnewResponse::whatsnew61() const {
  // @@protoc_insertion_point(field_get:micromsg.SnsWhatsnewResponse.Whatsnew61)
  return whatsnew61_ != NULL ? *whatsnew61_
                         : *::micromsg::Whatsnew61::internal_default_instance();
}
inline ::micromsg::Whatsnew61* SnsWhatsnewResponse::mutable_whatsnew61() {
  set_has_whatsnew61();
  if (whatsnew61_ == NULL) {
    whatsnew61_ = new ::micromsg::Whatsnew61;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SnsWhatsnewResponse.Whatsnew61)
  return whatsnew61_;
}
inline ::micromsg::Whatsnew61* SnsWhatsnewResponse::release_whatsnew61() {
  // @@protoc_insertion_point(field_release:micromsg.SnsWhatsnewResponse.Whatsnew61)
  clear_has_whatsnew61();
  ::micromsg::Whatsnew61* temp = whatsnew61_;
  whatsnew61_ = NULL;
  return temp;
}
inline void SnsWhatsnewResponse::set_allocated_whatsnew61(::micromsg::Whatsnew61* whatsnew61) {
  delete whatsnew61_;
  whatsnew61_ = whatsnew61;
  if (whatsnew61) {
    set_has_whatsnew61();
  } else {
    clear_has_whatsnew61();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SnsWhatsnewResponse.Whatsnew61)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmsns_2eproto__INCLUDED
