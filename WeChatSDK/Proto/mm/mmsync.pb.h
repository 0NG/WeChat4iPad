// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmsync.proto

#ifndef PROTOBUF_mmsync_2eproto__INCLUDED
#define PROTOBUF_mmsync_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AddMsg;
class AddMsgDefaultTypeInternal;
extern AddMsgDefaultTypeInternal _AddMsg_default_instance_;
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CloseMicroBlog;
class CloseMicroBlogDefaultTypeInternal;
extern CloseMicroBlogDefaultTypeInternal _CloseMicroBlog_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelChatContact;
class DelChatContactDefaultTypeInternal;
extern DelChatContactDefaultTypeInternal _DelChatContact_default_instance_;
class DelContact;
class DelContactDefaultTypeInternal;
extern DelContactDefaultTypeInternal _DelContact_default_instance_;
class DelContactMsg;
class DelContactMsgDefaultTypeInternal;
extern DelContactMsgDefaultTypeInternal _DelContactMsg_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DelMsg;
class DelMsgDefaultTypeInternal;
extern DelMsgDefaultTypeInternal _DelMsg_default_instance_;
class DelUserDomainEmail;
class DelUserDomainEmailDefaultTypeInternal;
extern DelUserDomainEmailDefaultTypeInternal _DelUserDomainEmail_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class FacebookInfo;
class FacebookInfoDefaultTypeInternal;
extern FacebookInfoDefaultTypeInternal _FacebookInfo_default_instance_;
class FunctionSwitch;
class FunctionSwitchDefaultTypeInternal;
extern FunctionSwitchDefaultTypeInternal _FunctionSwitch_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class GmailSwitchOplog;
class GmailSwitchOplogDefaultTypeInternal;
extern GmailSwitchOplogDefaultTypeInternal _GmailSwitchOplog_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class InitBuffer;
class InitBufferDefaultTypeInternal;
extern InitBufferDefaultTypeInternal _InitBuffer_default_instance_;
class InitRequest;
class InitRequestDefaultTypeInternal;
extern InitRequestDefaultTypeInternal _InitRequest_default_instance_;
class InitResponse;
class InitResponseDefaultTypeInternal;
extern InitResponseDefaultTypeInternal _InitResponse_default_instance_;
class InviteFriendOpen;
class InviteFriendOpenDefaultTypeInternal;
extern InviteFriendOpenDefaultTypeInternal _InviteFriendOpen_default_instance_;
class KVCmd;
class KVCmdDefaultTypeInternal;
extern KVCmdDefaultTypeInternal _KVCmd_default_instance_;
class KVStatItem;
class KVStatItemDefaultTypeInternal;
extern KVStatItemDefaultTypeInternal _KVStatItem_default_instance_;
class KVStatOpLog;
class KVStatOpLogDefaultTypeInternal;
extern KVStatOpLogDefaultTypeInternal _KVStatOpLog_default_instance_;
class KeyBuffer;
class KeyBufferDefaultTypeInternal;
extern KeyBufferDefaultTypeInternal _KeyBuffer_default_instance_;
class KeyVal;
class KeyValDefaultTypeInternal;
extern KeyValDefaultTypeInternal _KeyVal_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MediaNoteOpLog;
class MediaNoteOpLogDefaultTypeInternal;
extern MediaNoteOpLogDefaultTypeInternal _MediaNoteOpLog_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModChatRoomMember;
class ModChatRoomMemberDefaultTypeInternal;
extern ModChatRoomMemberDefaultTypeInternal _ModChatRoomMember_default_instance_;
class ModChatRoomMemberDisplayName;
class ModChatRoomMemberDisplayNameDefaultTypeInternal;
extern ModChatRoomMemberDisplayNameDefaultTypeInternal _ModChatRoomMemberDisplayName_default_instance_;
class ModChatRoomMemberFlag;
class ModChatRoomMemberFlagDefaultTypeInternal;
extern ModChatRoomMemberFlagDefaultTypeInternal _ModChatRoomMemberFlag_default_instance_;
class ModChatRoomNotify;
class ModChatRoomNotifyDefaultTypeInternal;
extern ModChatRoomNotifyDefaultTypeInternal _ModChatRoomNotify_default_instance_;
class ModChatRoomTopic;
class ModChatRoomTopicDefaultTypeInternal;
extern ModChatRoomTopicDefaultTypeInternal _ModChatRoomTopic_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModDescription;
class ModDescriptionDefaultTypeInternal;
extern ModDescriptionDefaultTypeInternal _ModDescription_default_instance_;
class ModDisturbSetting;
class ModDisturbSettingDefaultTypeInternal;
extern ModDisturbSettingDefaultTypeInternal _ModDisturbSetting_default_instance_;
class ModMicroBlogInfo;
class ModMicroBlogInfoDefaultTypeInternal;
extern ModMicroBlogInfoDefaultTypeInternal _ModMicroBlogInfo_default_instance_;
class ModMsgStatus;
class ModMsgStatusDefaultTypeInternal;
extern ModMsgStatusDefaultTypeInternal _ModMsgStatus_default_instance_;
class ModNotifyStatus;
class ModNotifyStatusDefaultTypeInternal;
extern ModNotifyStatusDefaultTypeInternal _ModNotifyStatus_default_instance_;
class ModTXNewsCategory;
class ModTXNewsCategoryDefaultTypeInternal;
extern ModTXNewsCategoryDefaultTypeInternal _ModTXNewsCategory_default_instance_;
class ModUserDomainEmail;
class ModUserDomainEmailDefaultTypeInternal;
extern ModUserDomainEmailDefaultTypeInternal _ModUserDomainEmail_default_instance_;
class ModUserImg;
class ModUserImgDefaultTypeInternal;
extern ModUserImgDefaultTypeInternal _ModUserImg_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class NewDelMsg;
class NewDelMsgDefaultTypeInternal;
extern NewDelMsgDefaultTypeInternal _NewDelMsg_default_instance_;
class NewInitRequest;
class NewInitRequestDefaultTypeInternal;
extern NewInitRequestDefaultTypeInternal _NewInitRequest_default_instance_;
class NewInitResponse;
class NewInitResponseDefaultTypeInternal;
extern NewInitResponseDefaultTypeInternal _NewInitResponse_default_instance_;
class NewSyncRequest;
class NewSyncRequestDefaultTypeInternal;
extern NewSyncRequestDefaultTypeInternal _NewSyncRequest_default_instance_;
class NewSyncResponse;
class NewSyncResponseDefaultTypeInternal;
extern NewSyncResponseDefaultTypeInternal _NewSyncResponse_default_instance_;
class OpenQQMicroBlog;
class OpenQQMicroBlogDefaultTypeInternal;
extern OpenQQMicroBlogDefaultTypeInternal _OpenQQMicroBlog_default_instance_;
class OplogRequest;
class OplogRequestDefaultTypeInternal;
extern OplogRequestDefaultTypeInternal _OplogRequest_default_instance_;
class OplogResponse;
class OplogResponseDefaultTypeInternal;
extern OplogResponseDefaultTypeInternal _OplogResponse_default_instance_;
class OplogRet;
class OplogRetDefaultTypeInternal;
extern OplogRetDefaultTypeInternal _OplogRet_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginInstall;
class PluginInstallDefaultTypeInternal;
extern PluginInstallDefaultTypeInternal _PluginInstall_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class QuitChatRoom;
class QuitChatRoomDefaultTypeInternal;
extern QuitChatRoomDefaultTypeInternal _QuitChatRoom_default_instance_;
class Report;
class ReportDefaultTypeInternal;
extern ReportDefaultTypeInternal _Report_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class SyncFriendRequest;
class SyncFriendRequestDefaultTypeInternal;
extern SyncFriendRequestDefaultTypeInternal _SyncFriendRequest_default_instance_;
class SyncFriendResponse;
class SyncFriendResponseDefaultTypeInternal;
extern SyncFriendResponseDefaultTypeInternal _SyncFriendResponse_default_instance_;
class SyncKey;
class SyncKeyDefaultTypeInternal;
extern SyncKeyDefaultTypeInternal _SyncKey_default_instance_;
class SyncRequest;
class SyncRequestDefaultTypeInternal;
extern SyncRequestDefaultTypeInternal _SyncRequest_default_instance_;
class SyncResponse;
class SyncResponseDefaultTypeInternal;
extern SyncResponseDefaultTypeInternal _SyncResponse_default_instance_;
class ThemeOpLog;
class ThemeOpLogDefaultTypeInternal;
extern ThemeOpLogDefaultTypeInternal _ThemeOpLog_default_instance_;
class UpdateStatOpLog;
class UpdateStatOpLogDefaultTypeInternal;
extern UpdateStatOpLogDefaultTypeInternal _UpdateStatOpLog_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
class WebWxFunctionSwitch;
class WebWxFunctionSwitchDefaultTypeInternal;
extern WebWxFunctionSwitchDefaultTypeInternal _WebWxFunctionSwitch_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmsync_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmsync_2eproto

// ===================================================================

class InitBuffer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.InitBuffer) */ {
 public:
  InitBuffer();
  virtual ~InitBuffer();

  InitBuffer(const InitBuffer& from);

  inline InitBuffer& operator=(const InitBuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitBuffer& default_instance();

  static inline const InitBuffer* internal_default_instance() {
    return reinterpret_cast<const InitBuffer*>(
               &_InitBuffer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(InitBuffer* other);

  // implements Message ----------------------------------------------

  inline InitBuffer* New() const PROTOBUF_FINAL { return New(NULL); }

  InitBuffer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitBuffer& from);
  void MergeFrom(const InitBuffer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitBuffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 MaxSyncKey = 1;
  bool has_maxsynckey() const;
  void clear_maxsynckey();
  static const int kMaxSyncKeyFieldNumber = 1;
  ::google::protobuf::uint32 maxsynckey() const;
  void set_maxsynckey(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.InitBuffer)
 private:
  void set_has_maxsynckey();
  void clear_has_maxsynckey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 maxsynckey_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.InitRequest) */ {
 public:
  InitRequest();
  virtual ~InitRequest();

  InitRequest(const InitRequest& from);

  inline InitRequest& operator=(const InitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitRequest& default_instance();

  static inline const InitRequest* internal_default_instance() {
    return reinterpret_cast<const InitRequest*>(
               &_InitRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(InitRequest* other);

  // implements Message ----------------------------------------------

  inline InitRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  InitRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitRequest& from);
  void MergeFrom(const InitRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Language = 5;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 5;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinString_t UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // required .micromsg.SKBuiltinString_t Buffer = 4;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 4;
  const ::micromsg::SKBuiltinString_t& buffer() const;
  ::micromsg::SKBuiltinString_t* mutable_buffer();
  ::micromsg::SKBuiltinString_t* release_buffer();
  void set_allocated_buffer(::micromsg::SKBuiltinString_t* buffer);

  // required uint32 SyncKey = 3;
  bool has_synckey() const;
  void clear_synckey();
  static const int kSyncKeyFieldNumber = 3;
  ::google::protobuf::uint32 synckey() const;
  void set_synckey(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.InitRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_username();
  void clear_has_username();
  void set_has_synckey();
  void clear_has_synckey();
  void set_has_buffer();
  void clear_has_buffer();
  void set_has_language();
  void clear_has_language();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinString_t* username_;
  ::micromsg::SKBuiltinString_t* buffer_;
  ::google::protobuf::uint32 synckey_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.InitResponse) */ {
 public:
  InitResponse();
  virtual ~InitResponse();

  InitResponse(const InitResponse& from);

  inline InitResponse& operator=(const InitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitResponse& default_instance();

  static inline const InitResponse* internal_default_instance() {
    return reinterpret_cast<const InitResponse*>(
               &_InitResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(InitResponse* other);

  // implements Message ----------------------------------------------

  inline InitResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  InitResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitResponse& from);
  void MergeFrom(const InitResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.CmdItem CmdList = 5;
  int cmdlist_size() const;
  void clear_cmdlist();
  static const int kCmdListFieldNumber = 5;
  const ::micromsg::CmdItem& cmdlist(int index) const;
  ::micromsg::CmdItem* mutable_cmdlist(int index);
  ::micromsg::CmdItem* add_cmdlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >*
      mutable_cmdlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >&
      cmdlist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinString_t Buffer = 6;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 6;
  const ::micromsg::SKBuiltinString_t& buffer() const;
  ::micromsg::SKBuiltinString_t* mutable_buffer();
  ::micromsg::SKBuiltinString_t* release_buffer();
  void set_allocated_buffer(::micromsg::SKBuiltinString_t* buffer);

  // required uint32 NewSyncKey = 2;
  bool has_newsynckey() const;
  void clear_newsynckey();
  static const int kNewSyncKeyFieldNumber = 2;
  ::google::protobuf::uint32 newsynckey() const;
  void set_newsynckey(::google::protobuf::uint32 value);

  // required int32 ContinueFlag = 3;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 3;
  ::google::protobuf::int32 continueflag() const;
  void set_continueflag(::google::protobuf::int32 value);

  // required uint32 CmdCount = 4;
  bool has_cmdcount() const;
  void clear_cmdcount();
  static const int kCmdCountFieldNumber = 4;
  ::google::protobuf::uint32 cmdcount() const;
  void set_cmdcount(::google::protobuf::uint32 value);

  // required uint32 Ratio = 7;
  bool has_ratio() const;
  void clear_ratio();
  static const int kRatioFieldNumber = 7;
  ::google::protobuf::uint32 ratio() const;
  void set_ratio(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.InitResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_newsynckey();
  void clear_has_newsynckey();
  void set_has_continueflag();
  void clear_has_continueflag();
  void set_has_cmdcount();
  void clear_has_cmdcount();
  void set_has_buffer();
  void clear_has_buffer();
  void set_has_ratio();
  void clear_has_ratio();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem > cmdlist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinString_t* buffer_;
  ::google::protobuf::uint32 newsynckey_;
  ::google::protobuf::int32 continueflag_;
  ::google::protobuf::uint32 cmdcount_;
  ::google::protobuf::uint32 ratio_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyBuffer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.KeyBuffer) */ {
 public:
  KeyBuffer();
  virtual ~KeyBuffer();

  KeyBuffer(const KeyBuffer& from);

  inline KeyBuffer& operator=(const KeyBuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyBuffer& default_instance();

  static inline const KeyBuffer* internal_default_instance() {
    return reinterpret_cast<const KeyBuffer*>(
               &_KeyBuffer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(KeyBuffer* other);

  // implements Message ----------------------------------------------

  inline KeyBuffer* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyBuffer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyBuffer& from);
  void MergeFrom(const KeyBuffer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyBuffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t synckey = 1;
  bool has_synckey() const;
  void clear_synckey();
  static const int kSynckeyFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& synckey() const;
  ::micromsg::SKBuiltinString_t* mutable_synckey();
  ::micromsg::SKBuiltinString_t* release_synckey();
  void set_allocated_synckey(::micromsg::SKBuiltinString_t* synckey);

  // @@protoc_insertion_point(class_scope:micromsg.KeyBuffer)
 private:
  void set_has_synckey();
  void clear_has_synckey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* synckey_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewInitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.NewInitRequest) */ {
 public:
  NewInitRequest();
  virtual ~NewInitRequest();

  NewInitRequest(const NewInitRequest& from);

  inline NewInitRequest& operator=(const NewInitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewInitRequest& default_instance();

  static inline const NewInitRequest* internal_default_instance() {
    return reinterpret_cast<const NewInitRequest*>(
               &_NewInitRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(NewInitRequest* other);

  // implements Message ----------------------------------------------

  inline NewInitRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  NewInitRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewInitRequest& from);
  void MergeFrom(const NewInitRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewInitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string Language = 5;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 5;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t CurrentSynckey = 3;
  bool has_currentsynckey() const;
  void clear_currentsynckey();
  static const int kCurrentSynckeyFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& currentsynckey() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_currentsynckey();
  ::micromsg::SKBuiltinBuffer_t* release_currentsynckey();
  void set_allocated_currentsynckey(::micromsg::SKBuiltinBuffer_t* currentsynckey);

  // required .micromsg.SKBuiltinBuffer_t MaxSynckey = 4;
  bool has_maxsynckey() const;
  void clear_maxsynckey();
  static const int kMaxSynckeyFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& maxsynckey() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_maxsynckey();
  ::micromsg::SKBuiltinBuffer_t* release_maxsynckey();
  void set_allocated_maxsynckey(::micromsg::SKBuiltinBuffer_t* maxsynckey);

  // @@protoc_insertion_point(class_scope:micromsg.NewInitRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_username();
  void clear_has_username();
  void set_has_currentsynckey();
  void clear_has_currentsynckey();
  void set_has_maxsynckey();
  void clear_has_maxsynckey();
  void set_has_language();
  void clear_has_language();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* currentsynckey_;
  ::micromsg::SKBuiltinBuffer_t* maxsynckey_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewInitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.NewInitResponse) */ {
 public:
  NewInitResponse();
  virtual ~NewInitResponse();

  NewInitResponse(const NewInitResponse& from);

  inline NewInitResponse& operator=(const NewInitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewInitResponse& default_instance();

  static inline const NewInitResponse* internal_default_instance() {
    return reinterpret_cast<const NewInitResponse*>(
               &_NewInitResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(NewInitResponse* other);

  // implements Message ----------------------------------------------

  inline NewInitResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  NewInitResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewInitResponse& from);
  void MergeFrom(const NewInitResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewInitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.CmdItem CmdList = 7;
  int cmdlist_size() const;
  void clear_cmdlist();
  static const int kCmdListFieldNumber = 7;
  const ::micromsg::CmdItem& cmdlist(int index) const;
  ::micromsg::CmdItem* mutable_cmdlist(int index);
  ::micromsg::CmdItem* add_cmdlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >*
      mutable_cmdlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >&
      cmdlist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t CurrentSynckey = 2;
  bool has_currentsynckey() const;
  void clear_currentsynckey();
  static const int kCurrentSynckeyFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& currentsynckey() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_currentsynckey();
  ::micromsg::SKBuiltinBuffer_t* release_currentsynckey();
  void set_allocated_currentsynckey(::micromsg::SKBuiltinBuffer_t* currentsynckey);

  // required .micromsg.SKBuiltinBuffer_t MaxSynckey = 3;
  bool has_maxsynckey() const;
  void clear_maxsynckey();
  static const int kMaxSynckeyFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& maxsynckey() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_maxsynckey();
  ::micromsg::SKBuiltinBuffer_t* release_maxsynckey();
  void set_allocated_maxsynckey(::micromsg::SKBuiltinBuffer_t* maxsynckey);

  // required uint32 ContinueFlag = 4;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 4;
  ::google::protobuf::uint32 continueflag() const;
  void set_continueflag(::google::protobuf::uint32 value);

  // required uint32 SelectBitmap = 5;
  bool has_selectbitmap() const;
  void clear_selectbitmap();
  static const int kSelectBitmapFieldNumber = 5;
  ::google::protobuf::uint32 selectbitmap() const;
  void set_selectbitmap(::google::protobuf::uint32 value);

  // required uint32 CmdCount = 6;
  bool has_cmdcount() const;
  void clear_cmdcount();
  static const int kCmdCountFieldNumber = 6;
  ::google::protobuf::uint32 cmdcount() const;
  void set_cmdcount(::google::protobuf::uint32 value);

  // required uint32 Ratio = 8;
  bool has_ratio() const;
  void clear_ratio();
  static const int kRatioFieldNumber = 8;
  ::google::protobuf::uint32 ratio() const;
  void set_ratio(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.NewInitResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_currentsynckey();
  void clear_has_currentsynckey();
  void set_has_maxsynckey();
  void clear_has_maxsynckey();
  void set_has_continueflag();
  void clear_has_continueflag();
  void set_has_selectbitmap();
  void clear_has_selectbitmap();
  void set_has_cmdcount();
  void clear_has_cmdcount();
  void set_has_ratio();
  void clear_has_ratio();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem > cmdlist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* currentsynckey_;
  ::micromsg::SKBuiltinBuffer_t* maxsynckey_;
  ::google::protobuf::uint32 continueflag_;
  ::google::protobuf::uint32 selectbitmap_;
  ::google::protobuf::uint32 cmdcount_;
  ::google::protobuf::uint32 ratio_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SyncRequest) */ {
 public:
  SyncRequest();
  virtual ~SyncRequest();

  SyncRequest(const SyncRequest& from);

  inline SyncRequest& operator=(const SyncRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncRequest& default_instance();

  static inline const SyncRequest* internal_default_instance() {
    return reinterpret_cast<const SyncRequest*>(
               &_SyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SyncRequest* other);

  // implements Message ----------------------------------------------

  inline SyncRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncRequest& from);
  void MergeFrom(const SyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string KeyBuf = 7;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 7;
  const ::std::string& keybuf() const;
  void set_keybuf(const ::std::string& value);
  #if LANG_CXX11
  void set_keybuf(::std::string&& value);
  #endif
  void set_keybuf(const char* value);
  void set_keybuf(const char* value, size_t size);
  ::std::string* mutable_keybuf();
  ::std::string* release_keybuf();
  void set_allocated_keybuf(::std::string* keybuf);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinString_t UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // required .micromsg.CmdList Oplog = 6;
  bool has_oplog() const;
  void clear_oplog();
  static const int kOplogFieldNumber = 6;
  const ::micromsg::CmdList& oplog() const;
  ::micromsg::CmdList* mutable_oplog();
  ::micromsg::CmdList* release_oplog();
  void set_allocated_oplog(::micromsg::CmdList* oplog);

  // required uint32 SyncKey = 3;
  bool has_synckey() const;
  void clear_synckey();
  static const int kSyncKeyFieldNumber = 3;
  ::google::protobuf::uint32 synckey() const;
  void set_synckey(::google::protobuf::uint32 value);

  // required int32 Scene = 4;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 4;
  ::google::protobuf::int32 scene() const;
  void set_scene(::google::protobuf::int32 value);

  // required int32 Option = 5;
  bool has_option() const;
  void clear_option();
  static const int kOptionFieldNumber = 5;
  ::google::protobuf::int32 option() const;
  void set_option(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SyncRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_username();
  void clear_has_username();
  void set_has_synckey();
  void clear_has_synckey();
  void set_has_scene();
  void clear_has_scene();
  void set_has_option();
  void clear_has_option();
  void set_has_oplog();
  void clear_has_oplog();
  void set_has_keybuf();
  void clear_has_keybuf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr keybuf_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinString_t* username_;
  ::micromsg::CmdList* oplog_;
  ::google::protobuf::uint32 synckey_;
  ::google::protobuf::int32 scene_;
  ::google::protobuf::int32 option_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SyncResponse) */ {
 public:
  SyncResponse();
  virtual ~SyncResponse();

  SyncResponse(const SyncResponse& from);

  inline SyncResponse& operator=(const SyncResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncResponse& default_instance();

  static inline const SyncResponse* internal_default_instance() {
    return reinterpret_cast<const SyncResponse*>(
               &_SyncResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SyncResponse* other);

  // implements Message ----------------------------------------------

  inline SyncResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncResponse& from);
  void MergeFrom(const SyncResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.CmdItem CmdList = 5;
  int cmdlist_size() const;
  void clear_cmdlist();
  static const int kCmdListFieldNumber = 5;
  const ::micromsg::CmdItem& cmdlist(int index) const;
  ::micromsg::CmdItem* mutable_cmdlist(int index);
  ::micromsg::CmdItem* add_cmdlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >*
      mutable_cmdlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >&
      cmdlist() const;

  // repeated .micromsg.CmdItem OOBList = 7;
  int ooblist_size() const;
  void clear_ooblist();
  static const int kOOBListFieldNumber = 7;
  const ::micromsg::CmdItem& ooblist(int index) const;
  ::micromsg::CmdItem* mutable_ooblist(int index);
  ::micromsg::CmdItem* add_ooblist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >*
      mutable_ooblist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >&
      ooblist() const;

  // optional string KeyBuf = 8;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 8;
  const ::std::string& keybuf() const;
  void set_keybuf(const ::std::string& value);
  #if LANG_CXX11
  void set_keybuf(::std::string&& value);
  #endif
  void set_keybuf(const char* value);
  void set_keybuf(const char* value, size_t size);
  ::std::string* mutable_keybuf();
  ::std::string* release_keybuf();
  void set_allocated_keybuf(::std::string* keybuf);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 NewSyncKey = 2;
  bool has_newsynckey() const;
  void clear_newsynckey();
  static const int kNewSyncKeyFieldNumber = 2;
  ::google::protobuf::uint32 newsynckey() const;
  void set_newsynckey(::google::protobuf::uint32 value);

  // required int32 ContinueFlag = 3;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 3;
  ::google::protobuf::int32 continueflag() const;
  void set_continueflag(::google::protobuf::int32 value);

  // required uint32 CmdCount = 4;
  bool has_cmdcount() const;
  void clear_cmdcount();
  static const int kCmdCountFieldNumber = 4;
  ::google::protobuf::uint32 cmdcount() const;
  void set_cmdcount(::google::protobuf::uint32 value);

  // required uint32 OOBCount = 6;
  bool has_oobcount() const;
  void clear_oobcount();
  static const int kOOBCountFieldNumber = 6;
  ::google::protobuf::uint32 oobcount() const;
  void set_oobcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SyncResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_newsynckey();
  void clear_has_newsynckey();
  void set_has_continueflag();
  void clear_has_continueflag();
  void set_has_cmdcount();
  void clear_has_cmdcount();
  void set_has_oobcount();
  void clear_has_oobcount();
  void set_has_keybuf();
  void clear_has_keybuf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem > cmdlist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem > ooblist_;
  ::google::protobuf::internal::ArenaStringPtr keybuf_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 newsynckey_;
  ::google::protobuf::int32 continueflag_;
  ::google::protobuf::uint32 cmdcount_;
  ::google::protobuf::uint32 oobcount_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyVal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.KeyVal) */ {
 public:
  KeyVal();
  virtual ~KeyVal();

  KeyVal(const KeyVal& from);

  inline KeyVal& operator=(const KeyVal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyVal& default_instance();

  static inline const KeyVal* internal_default_instance() {
    return reinterpret_cast<const KeyVal*>(
               &_KeyVal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(KeyVal* other);

  // implements Message ----------------------------------------------

  inline KeyVal* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyVal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyVal& from);
  void MergeFrom(const KeyVal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyVal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // required uint32 Val = 2;
  bool has_val() const;
  void clear_val();
  static const int kValFieldNumber = 2;
  ::google::protobuf::uint32 val() const;
  void set_val(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.KeyVal)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_val();
  void clear_has_val();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 val_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SyncKey) */ {
 public:
  SyncKey();
  virtual ~SyncKey();

  SyncKey(const SyncKey& from);

  inline SyncKey& operator=(const SyncKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncKey& default_instance();

  static inline const SyncKey* internal_default_instance() {
    return reinterpret_cast<const SyncKey*>(
               &_SyncKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SyncKey* other);

  // implements Message ----------------------------------------------

  inline SyncKey* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncKey& from);
  void MergeFrom(const SyncKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.KeyVal Key = 2;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::micromsg::KeyVal& key(int index) const;
  ::micromsg::KeyVal* mutable_key(int index);
  ::micromsg::KeyVal* add_key();
  ::google::protobuf::RepeatedPtrField< ::micromsg::KeyVal >*
      mutable_key();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::KeyVal >&
      key() const;

  // required uint32 KeyCount = 1;
  bool has_keycount() const;
  void clear_keycount();
  static const int kKeyCountFieldNumber = 1;
  ::google::protobuf::uint32 keycount() const;
  void set_keycount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SyncKey)
 private:
  void set_has_keycount();
  void clear_has_keycount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::KeyVal > key_;
  ::google::protobuf::uint32 keycount_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.NewSyncRequest) */ {
 public:
  NewSyncRequest();
  virtual ~NewSyncRequest();

  NewSyncRequest(const NewSyncRequest& from);

  inline NewSyncRequest& operator=(const NewSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncRequest& default_instance();

  static inline const NewSyncRequest* internal_default_instance() {
    return reinterpret_cast<const NewSyncRequest*>(
               &_NewSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(NewSyncRequest* other);

  // implements Message ----------------------------------------------

  inline NewSyncRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncRequest& from);
  void MergeFrom(const NewSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DeviceType = 5;
  bool has_devicetype() const;
  void clear_devicetype();
  static const int kDeviceTypeFieldNumber = 5;
  const ::std::string& devicetype() const;
  void set_devicetype(const ::std::string& value);
  #if LANG_CXX11
  void set_devicetype(::std::string&& value);
  #endif
  void set_devicetype(const char* value);
  void set_devicetype(const char* value, size_t size);
  ::std::string* mutable_devicetype();
  ::std::string* release_devicetype();
  void set_allocated_devicetype(::std::string* devicetype);

  // required .micromsg.CmdList Oplog = 1;
  bool has_oplog() const;
  void clear_oplog();
  static const int kOplogFieldNumber = 1;
  const ::micromsg::CmdList& oplog() const;
  ::micromsg::CmdList* mutable_oplog();
  ::micromsg::CmdList* release_oplog();
  void set_allocated_oplog(::micromsg::CmdList* oplog);

  // required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& keybuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuf();
  ::micromsg::SKBuiltinBuffer_t* release_keybuf();
  void set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf);

  // required uint32 Selector = 2;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 2;
  ::google::protobuf::uint32 selector() const;
  void set_selector(::google::protobuf::uint32 value);

  // optional uint32 Scene = 4;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 4;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.NewSyncRequest)
 private:
  void set_has_oplog();
  void clear_has_oplog();
  void set_has_selector();
  void clear_has_selector();
  void set_has_keybuf();
  void clear_has_keybuf();
  void set_has_scene();
  void clear_has_scene();
  void set_has_devicetype();
  void clear_has_devicetype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr devicetype_;
  ::micromsg::CmdList* oplog_;
  ::micromsg::SKBuiltinBuffer_t* keybuf_;
  ::google::protobuf::uint32 selector_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewSyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.NewSyncResponse) */ {
 public:
  NewSyncResponse();
  virtual ~NewSyncResponse();

  NewSyncResponse(const NewSyncResponse& from);

  inline NewSyncResponse& operator=(const NewSyncResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncResponse& default_instance();

  static inline const NewSyncResponse* internal_default_instance() {
    return reinterpret_cast<const NewSyncResponse*>(
               &_NewSyncResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(NewSyncResponse* other);

  // implements Message ----------------------------------------------

  inline NewSyncResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncResponse& from);
  void MergeFrom(const NewSyncResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.CmdList CmdList = 2;
  bool has_cmdlist() const;
  void clear_cmdlist();
  static const int kCmdListFieldNumber = 2;
  const ::micromsg::CmdList& cmdlist() const;
  ::micromsg::CmdList* mutable_cmdlist();
  ::micromsg::CmdList* release_cmdlist();
  void set_allocated_cmdlist(::micromsg::CmdList* cmdlist);

  // required .micromsg.SKBuiltinBuffer_t KeyBuf = 4;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& keybuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuf();
  ::micromsg::SKBuiltinBuffer_t* release_keybuf();
  void set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf);

  // required int32 Ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // required uint32 ContinueFlag = 3;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 3;
  ::google::protobuf::uint32 continueflag() const;
  void set_continueflag(::google::protobuf::uint32 value);

  // optional uint32 Status = 5;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 OnlineVersion = 6;
  bool has_onlineversion() const;
  void clear_onlineversion();
  static const int kOnlineVersionFieldNumber = 6;
  ::google::protobuf::uint32 onlineversion() const;
  void set_onlineversion(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.NewSyncResponse)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_cmdlist();
  void clear_has_cmdlist();
  void set_has_continueflag();
  void clear_has_continueflag();
  void set_has_keybuf();
  void clear_has_keybuf();
  void set_has_status();
  void clear_has_status();
  void set_has_onlineversion();
  void clear_has_onlineversion();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::CmdList* cmdlist_;
  ::micromsg::SKBuiltinBuffer_t* keybuf_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::uint32 continueflag_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 onlineversion_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncFriendRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SyncFriendRequest) */ {
 public:
  SyncFriendRequest();
  virtual ~SyncFriendRequest();

  SyncFriendRequest(const SyncFriendRequest& from);

  inline SyncFriendRequest& operator=(const SyncFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncFriendRequest& default_instance();

  static inline const SyncFriendRequest* internal_default_instance() {
    return reinterpret_cast<const SyncFriendRequest*>(
               &_SyncFriendRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SyncFriendRequest* other);

  // implements Message ----------------------------------------------

  inline SyncFriendRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncFriendRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncFriendRequest& from);
  void MergeFrom(const SyncFriendRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncFriendRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinString_t UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // required uint32 SyncKey = 3;
  bool has_synckey() const;
  void clear_synckey();
  static const int kSyncKeyFieldNumber = 3;
  ::google::protobuf::uint32 synckey() const;
  void set_synckey(::google::protobuf::uint32 value);

  // required int32 Scene = 4;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 4;
  ::google::protobuf::int32 scene() const;
  void set_scene(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SyncFriendRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_username();
  void clear_has_username();
  void set_has_synckey();
  void clear_has_synckey();
  void set_has_scene();
  void clear_has_scene();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinString_t* username_;
  ::google::protobuf::uint32 synckey_;
  ::google::protobuf::int32 scene_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncFriendResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SyncFriendResponse) */ {
 public:
  SyncFriendResponse();
  virtual ~SyncFriendResponse();

  SyncFriendResponse(const SyncFriendResponse& from);

  inline SyncFriendResponse& operator=(const SyncFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncFriendResponse& default_instance();

  static inline const SyncFriendResponse* internal_default_instance() {
    return reinterpret_cast<const SyncFriendResponse*>(
               &_SyncFriendResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SyncFriendResponse* other);

  // implements Message ----------------------------------------------

  inline SyncFriendResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncFriendResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncFriendResponse& from);
  void MergeFrom(const SyncFriendResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncFriendResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.CmdItem CmdList = 5;
  int cmdlist_size() const;
  void clear_cmdlist();
  static const int kCmdListFieldNumber = 5;
  const ::micromsg::CmdItem& cmdlist(int index) const;
  ::micromsg::CmdItem* mutable_cmdlist(int index);
  ::micromsg::CmdItem* add_cmdlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >*
      mutable_cmdlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >&
      cmdlist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 NewSyncKey = 2;
  bool has_newsynckey() const;
  void clear_newsynckey();
  static const int kNewSyncKeyFieldNumber = 2;
  ::google::protobuf::uint32 newsynckey() const;
  void set_newsynckey(::google::protobuf::uint32 value);

  // required int32 ContinueFlag = 3;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 3;
  ::google::protobuf::int32 continueflag() const;
  void set_continueflag(::google::protobuf::int32 value);

  // required uint32 CmdCount = 4;
  bool has_cmdcount() const;
  void clear_cmdcount();
  static const int kCmdCountFieldNumber = 4;
  ::google::protobuf::uint32 cmdcount() const;
  void set_cmdcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SyncFriendResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_newsynckey();
  void clear_has_newsynckey();
  void set_has_continueflag();
  void clear_has_continueflag();
  void set_has_cmdcount();
  void clear_has_cmdcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem > cmdlist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 newsynckey_;
  ::google::protobuf::int32 continueflag_;
  ::google::protobuf::uint32 cmdcount_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpenQQMicroBlog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.OpenQQMicroBlog) */ {
 public:
  OpenQQMicroBlog();
  virtual ~OpenQQMicroBlog();

  OpenQQMicroBlog(const OpenQQMicroBlog& from);

  inline OpenQQMicroBlog& operator=(const OpenQQMicroBlog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenQQMicroBlog& default_instance();

  static inline const OpenQQMicroBlog* internal_default_instance() {
    return reinterpret_cast<const OpenQQMicroBlog*>(
               &_OpenQQMicroBlog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(OpenQQMicroBlog* other);

  // implements Message ----------------------------------------------

  inline OpenQQMicroBlog* New() const PROTOBUF_FINAL { return New(NULL); }

  OpenQQMicroBlog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpenQQMicroBlog& from);
  void MergeFrom(const OpenQQMicroBlog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpenQQMicroBlog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t MicroBlogUserName = 1;
  bool has_microblogusername() const;
  void clear_microblogusername();
  static const int kMicroBlogUserNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& microblogusername() const;
  ::micromsg::SKBuiltinString_t* mutable_microblogusername();
  ::micromsg::SKBuiltinString_t* release_microblogusername();
  void set_allocated_microblogusername(::micromsg::SKBuiltinString_t* microblogusername);

  // @@protoc_insertion_point(class_scope:micromsg.OpenQQMicroBlog)
 private:
  void set_has_microblogusername();
  void clear_has_microblogusername();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* microblogusername_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModChatRoomNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModChatRoomNotify) */ {
 public:
  ModChatRoomNotify();
  virtual ~ModChatRoomNotify();

  ModChatRoomNotify(const ModChatRoomNotify& from);

  inline ModChatRoomNotify& operator=(const ModChatRoomNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModChatRoomNotify& default_instance();

  static inline const ModChatRoomNotify* internal_default_instance() {
    return reinterpret_cast<const ModChatRoomNotify*>(
               &_ModChatRoomNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ModChatRoomNotify* other);

  // implements Message ----------------------------------------------

  inline ModChatRoomNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ModChatRoomNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModChatRoomNotify& from);
  void MergeFrom(const ModChatRoomNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModChatRoomNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t ChatRoomName = 1;
  bool has_chatroomname() const;
  void clear_chatroomname();
  static const int kChatRoomNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& chatroomname() const;
  ::micromsg::SKBuiltinString_t* mutable_chatroomname();
  ::micromsg::SKBuiltinString_t* release_chatroomname();
  void set_allocated_chatroomname(::micromsg::SKBuiltinString_t* chatroomname);

  // required uint32 Status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModChatRoomNotify)
 private:
  void set_has_chatroomname();
  void clear_has_chatroomname();
  void set_has_status();
  void clear_has_status();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* chatroomname_;
  ::google::protobuf::uint32 status_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CloseMicroBlog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CloseMicroBlog) */ {
 public:
  CloseMicroBlog();
  virtual ~CloseMicroBlog();

  CloseMicroBlog(const CloseMicroBlog& from);

  inline CloseMicroBlog& operator=(const CloseMicroBlog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseMicroBlog& default_instance();

  static inline const CloseMicroBlog* internal_default_instance() {
    return reinterpret_cast<const CloseMicroBlog*>(
               &_CloseMicroBlog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CloseMicroBlog* other);

  // implements Message ----------------------------------------------

  inline CloseMicroBlog* New() const PROTOBUF_FINAL { return New(NULL); }

  CloseMicroBlog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloseMicroBlog& from);
  void MergeFrom(const CloseMicroBlog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloseMicroBlog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t MicroBlogUserName = 1;
  bool has_microblogusername() const;
  void clear_microblogusername();
  static const int kMicroBlogUserNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& microblogusername() const;
  ::micromsg::SKBuiltinString_t* mutable_microblogusername();
  ::micromsg::SKBuiltinString_t* release_microblogusername();
  void set_allocated_microblogusername(::micromsg::SKBuiltinString_t* microblogusername);

  // @@protoc_insertion_point(class_scope:micromsg.CloseMicroBlog)
 private:
  void set_has_microblogusername();
  void clear_has_microblogusername();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* microblogusername_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModChatRoomMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModChatRoomMember) */ {
 public:
  ModChatRoomMember();
  virtual ~ModChatRoomMember();

  ModChatRoomMember(const ModChatRoomMember& from);

  inline ModChatRoomMember& operator=(const ModChatRoomMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModChatRoomMember& default_instance();

  static inline const ModChatRoomMember* internal_default_instance() {
    return reinterpret_cast<const ModChatRoomMember*>(
               &_ModChatRoomMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ModChatRoomMember* other);

  // implements Message ----------------------------------------------

  inline ModChatRoomMember* New() const PROTOBUF_FINAL { return New(NULL); }

  ModChatRoomMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModChatRoomMember& from);
  void MergeFrom(const ModChatRoomMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModChatRoomMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Province = 12;
  bool has_province() const;
  void clear_province();
  static const int kProvinceFieldNumber = 12;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  #if LANG_CXX11
  void set_province(::std::string&& value);
  #endif
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // optional string City = 13;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 13;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional string Signature = 14;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 14;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional string VerifyInfo = 17;
  bool has_verifyinfo() const;
  void clear_verifyinfo();
  static const int kVerifyInfoFieldNumber = 17;
  const ::std::string& verifyinfo() const;
  void set_verifyinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_verifyinfo(::std::string&& value);
  #endif
  void set_verifyinfo(const char* value);
  void set_verifyinfo(const char* value, size_t size);
  ::std::string* mutable_verifyinfo();
  ::std::string* release_verifyinfo();
  void set_allocated_verifyinfo(::std::string* verifyinfo);

  // optional string Weibo = 18;
  bool has_weibo() const;
  void clear_weibo();
  static const int kWeiboFieldNumber = 18;
  const ::std::string& weibo() const;
  void set_weibo(const ::std::string& value);
  #if LANG_CXX11
  void set_weibo(::std::string&& value);
  #endif
  void set_weibo(const char* value);
  void set_weibo(const char* value, size_t size);
  ::std::string* mutable_weibo();
  ::std::string* release_weibo();
  void set_allocated_weibo(::std::string* weibo);

  // optional string VerifyContent = 19;
  bool has_verifycontent() const;
  void clear_verifycontent();
  static const int kVerifyContentFieldNumber = 19;
  const ::std::string& verifycontent() const;
  void set_verifycontent(const ::std::string& value);
  #if LANG_CXX11
  void set_verifycontent(::std::string&& value);
  #endif
  void set_verifycontent(const char* value);
  void set_verifycontent(const char* value, size_t size);
  ::std::string* mutable_verifycontent();
  ::std::string* release_verifycontent();
  void set_allocated_verifycontent(::std::string* verifycontent);

  // optional string WeiboNickname = 20;
  bool has_weibonickname() const;
  void clear_weibonickname();
  static const int kWeiboNicknameFieldNumber = 20;
  const ::std::string& weibonickname() const;
  void set_weibonickname(const ::std::string& value);
  #if LANG_CXX11
  void set_weibonickname(::std::string&& value);
  #endif
  void set_weibonickname(const char* value);
  void set_weibonickname(const char* value, size_t size);
  ::std::string* mutable_weibonickname();
  ::std::string* release_weibonickname();
  void set_allocated_weibonickname(::std::string* weibonickname);

  // optional string AlbumBGImgID = 24;
  bool has_albumbgimgid() const;
  void clear_albumbgimgid();
  static const int kAlbumBGImgIDFieldNumber = 24;
  const ::std::string& albumbgimgid() const;
  void set_albumbgimgid(const ::std::string& value);
  #if LANG_CXX11
  void set_albumbgimgid(::std::string&& value);
  #endif
  void set_albumbgimgid(const char* value);
  void set_albumbgimgid(const char* value, size_t size);
  ::std::string* mutable_albumbgimgid();
  ::std::string* release_albumbgimgid();
  void set_allocated_albumbgimgid(::std::string* albumbgimgid);

  // optional string Alias = 25;
  bool has_alias() const;
  void clear_alias();
  static const int kAliasFieldNumber = 25;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  #if LANG_CXX11
  void set_alias(::std::string&& value);
  #endif
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);

  // optional string Country = 27;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 27;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  #if LANG_CXX11
  void set_country(::std::string&& value);
  #endif
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string BigHeadImgUrl = 28;
  bool has_bigheadimgurl() const;
  void clear_bigheadimgurl();
  static const int kBigHeadImgUrlFieldNumber = 28;
  const ::std::string& bigheadimgurl() const;
  void set_bigheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_bigheadimgurl(::std::string&& value);
  #endif
  void set_bigheadimgurl(const char* value);
  void set_bigheadimgurl(const char* value, size_t size);
  ::std::string* mutable_bigheadimgurl();
  ::std::string* release_bigheadimgurl();
  void set_allocated_bigheadimgurl(::std::string* bigheadimgurl);

  // optional string SmallHeadImgUrl = 29;
  bool has_smallheadimgurl() const;
  void clear_smallheadimgurl();
  static const int kSmallHeadImgUrlFieldNumber = 29;
  const ::std::string& smallheadimgurl() const;
  void set_smallheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_smallheadimgurl(::std::string&& value);
  #endif
  void set_smallheadimgurl(const char* value);
  void set_smallheadimgurl(const char* value, size_t size);
  ::std::string* mutable_smallheadimgurl();
  ::std::string* release_smallheadimgurl();
  void set_allocated_smallheadimgurl(::std::string* smallheadimgurl);

  // optional string MyBrandList = 30;
  bool has_mybrandlist() const;
  void clear_mybrandlist();
  static const int kMyBrandListFieldNumber = 30;
  const ::std::string& mybrandlist() const;
  void set_mybrandlist(const ::std::string& value);
  #if LANG_CXX11
  void set_mybrandlist(::std::string&& value);
  #endif
  void set_mybrandlist(const char* value);
  void set_mybrandlist(const char* value, size_t size);
  ::std::string* mutable_mybrandlist();
  ::std::string* release_mybrandlist();
  void set_allocated_mybrandlist(::std::string* mybrandlist);

  // required .micromsg.SKBuiltinString_t UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // required .micromsg.SKBuiltinString_t NickName = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNickNameFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& nickname() const;
  ::micromsg::SKBuiltinString_t* mutable_nickname();
  ::micromsg::SKBuiltinString_t* release_nickname();
  void set_allocated_nickname(::micromsg::SKBuiltinString_t* nickname);

  // required .micromsg.SKBuiltinString_t PYInitial = 3;
  bool has_pyinitial() const;
  void clear_pyinitial();
  static const int kPYInitialFieldNumber = 3;
  const ::micromsg::SKBuiltinString_t& pyinitial() const;
  ::micromsg::SKBuiltinString_t* mutable_pyinitial();
  ::micromsg::SKBuiltinString_t* release_pyinitial();
  void set_allocated_pyinitial(::micromsg::SKBuiltinString_t* pyinitial);

  // required .micromsg.SKBuiltinString_t QuanPin = 4;
  bool has_quanpin() const;
  void clear_quanpin();
  static const int kQuanPinFieldNumber = 4;
  const ::micromsg::SKBuiltinString_t& quanpin() const;
  ::micromsg::SKBuiltinString_t* mutable_quanpin();
  ::micromsg::SKBuiltinString_t* release_quanpin();
  void set_allocated_quanpin(::micromsg::SKBuiltinString_t* quanpin);

  // required .micromsg.SKBuiltinBuffer_t ImgBuf = 6;
  bool has_imgbuf() const;
  void clear_imgbuf();
  static const int kImgBufFieldNumber = 6;
  const ::micromsg::SKBuiltinBuffer_t& imgbuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_imgbuf();
  ::micromsg::SKBuiltinBuffer_t* release_imgbuf();
  void set_allocated_imgbuf(::micromsg::SKBuiltinBuffer_t* imgbuf);

  // required .micromsg.SKBuiltinString_t Remark = 8;
  bool has_remark() const;
  void clear_remark();
  static const int kRemarkFieldNumber = 8;
  const ::micromsg::SKBuiltinString_t& remark() const;
  ::micromsg::SKBuiltinString_t* mutable_remark();
  ::micromsg::SKBuiltinString_t* release_remark();
  void set_allocated_remark(::micromsg::SKBuiltinString_t* remark);

  // required .micromsg.SKBuiltinString_t RemarkPYInitial = 9;
  bool has_remarkpyinitial() const;
  void clear_remarkpyinitial();
  static const int kRemarkPYInitialFieldNumber = 9;
  const ::micromsg::SKBuiltinString_t& remarkpyinitial() const;
  ::micromsg::SKBuiltinString_t* mutable_remarkpyinitial();
  ::micromsg::SKBuiltinString_t* release_remarkpyinitial();
  void set_allocated_remarkpyinitial(::micromsg::SKBuiltinString_t* remarkpyinitial);

  // required .micromsg.SKBuiltinString_t RemarkQuanPin = 10;
  bool has_remarkquanpin() const;
  void clear_remarkquanpin();
  static const int kRemarkQuanPinFieldNumber = 10;
  const ::micromsg::SKBuiltinString_t& remarkquanpin() const;
  ::micromsg::SKBuiltinString_t* mutable_remarkquanpin();
  ::micromsg::SKBuiltinString_t* release_remarkquanpin();
  void set_allocated_remarkquanpin(::micromsg::SKBuiltinString_t* remarkquanpin);

  // optional .micromsg.SnsUserInfo SnsUserInfo = 26;
  bool has_snsuserinfo() const;
  void clear_snsuserinfo();
  static const int kSnsUserInfoFieldNumber = 26;
  const ::micromsg::SnsUserInfo& snsuserinfo() const;
  ::micromsg::SnsUserInfo* mutable_snsuserinfo();
  ::micromsg::SnsUserInfo* release_snsuserinfo();
  void set_allocated_snsuserinfo(::micromsg::SnsUserInfo* snsuserinfo);

  // optional .micromsg.CustomizedInfo CustomizedInfo = 31;
  bool has_customizedinfo() const;
  void clear_customizedinfo();
  static const int kCustomizedInfoFieldNumber = 31;
  const ::micromsg::CustomizedInfo& customizedinfo() const;
  ::micromsg::CustomizedInfo* mutable_customizedinfo();
  ::micromsg::CustomizedInfo* release_customizedinfo();
  void set_allocated_customizedinfo(::micromsg::CustomizedInfo* customizedinfo);

  // required int32 Sex = 5;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 5;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // required uint32 ImgFlag = 7;
  bool has_imgflag() const;
  void clear_imgflag();
  static const int kImgFlagFieldNumber = 7;
  ::google::protobuf::uint32 imgflag() const;
  void set_imgflag(::google::protobuf::uint32 value);

  // required uint32 ContactType = 11;
  bool has_contacttype() const;
  void clear_contacttype();
  static const int kContactTypeFieldNumber = 11;
  ::google::protobuf::uint32 contacttype() const;
  void set_contacttype(::google::protobuf::uint32 value);

  // optional uint32 PersonalCard = 15;
  bool has_personalcard() const;
  void clear_personalcard();
  static const int kPersonalCardFieldNumber = 15;
  ::google::protobuf::uint32 personalcard() const;
  void set_personalcard(::google::protobuf::uint32 value);

  // optional uint32 VerifyFlag = 16;
  bool has_verifyflag() const;
  void clear_verifyflag();
  static const int kVerifyFlagFieldNumber = 16;
  ::google::protobuf::uint32 verifyflag() const;
  void set_verifyflag(::google::protobuf::uint32 value);

  // optional uint32 WeiboFlag = 21;
  bool has_weiboflag() const;
  void clear_weiboflag();
  static const int kWeiboFlagFieldNumber = 21;
  ::google::protobuf::uint32 weiboflag() const;
  void set_weiboflag(::google::protobuf::uint32 value);

  // optional int32 AlbumStyle = 22;
  bool has_albumstyle() const;
  void clear_albumstyle();
  static const int kAlbumStyleFieldNumber = 22;
  ::google::protobuf::int32 albumstyle() const;
  void set_albumstyle(::google::protobuf::int32 value);

  // optional int32 AlbumFlag = 23;
  bool has_albumflag() const;
  void clear_albumflag();
  static const int kAlbumFlagFieldNumber = 23;
  ::google::protobuf::int32 albumflag() const;
  void set_albumflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModChatRoomMember)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_pyinitial();
  void clear_has_pyinitial();
  void set_has_quanpin();
  void clear_has_quanpin();
  void set_has_sex();
  void clear_has_sex();
  void set_has_imgbuf();
  void clear_has_imgbuf();
  void set_has_imgflag();
  void clear_has_imgflag();
  void set_has_remark();
  void clear_has_remark();
  void set_has_remarkpyinitial();
  void clear_has_remarkpyinitial();
  void set_has_remarkquanpin();
  void clear_has_remarkquanpin();
  void set_has_contacttype();
  void clear_has_contacttype();
  void set_has_province();
  void clear_has_province();
  void set_has_city();
  void clear_has_city();
  void set_has_signature();
  void clear_has_signature();
  void set_has_personalcard();
  void clear_has_personalcard();
  void set_has_verifyflag();
  void clear_has_verifyflag();
  void set_has_verifyinfo();
  void clear_has_verifyinfo();
  void set_has_weibo();
  void clear_has_weibo();
  void set_has_verifycontent();
  void clear_has_verifycontent();
  void set_has_weibonickname();
  void clear_has_weibonickname();
  void set_has_weiboflag();
  void clear_has_weiboflag();
  void set_has_albumstyle();
  void clear_has_albumstyle();
  void set_has_albumflag();
  void clear_has_albumflag();
  void set_has_albumbgimgid();
  void clear_has_albumbgimgid();
  void set_has_alias();
  void clear_has_alias();
  void set_has_snsuserinfo();
  void clear_has_snsuserinfo();
  void set_has_country();
  void clear_has_country();
  void set_has_bigheadimgurl();
  void clear_has_bigheadimgurl();
  void set_has_smallheadimgurl();
  void clear_has_smallheadimgurl();
  void set_has_mybrandlist();
  void clear_has_mybrandlist();
  void set_has_customizedinfo();
  void clear_has_customizedinfo();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr verifyinfo_;
  ::google::protobuf::internal::ArenaStringPtr weibo_;
  ::google::protobuf::internal::ArenaStringPtr verifycontent_;
  ::google::protobuf::internal::ArenaStringPtr weibonickname_;
  ::google::protobuf::internal::ArenaStringPtr albumbgimgid_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr bigheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr smallheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr mybrandlist_;
  ::micromsg::SKBuiltinString_t* username_;
  ::micromsg::SKBuiltinString_t* nickname_;
  ::micromsg::SKBuiltinString_t* pyinitial_;
  ::micromsg::SKBuiltinString_t* quanpin_;
  ::micromsg::SKBuiltinBuffer_t* imgbuf_;
  ::micromsg::SKBuiltinString_t* remark_;
  ::micromsg::SKBuiltinString_t* remarkpyinitial_;
  ::micromsg::SKBuiltinString_t* remarkquanpin_;
  ::micromsg::SnsUserInfo* snsuserinfo_;
  ::micromsg::CustomizedInfo* customizedinfo_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::uint32 imgflag_;
  ::google::protobuf::uint32 contacttype_;
  ::google::protobuf::uint32 personalcard_;
  ::google::protobuf::uint32 verifyflag_;
  ::google::protobuf::uint32 weiboflag_;
  ::google::protobuf::int32 albumstyle_;
  ::google::protobuf::int32 albumflag_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuitChatRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.QuitChatRoom) */ {
 public:
  QuitChatRoom();
  virtual ~QuitChatRoom();

  QuitChatRoom(const QuitChatRoom& from);

  inline QuitChatRoom& operator=(const QuitChatRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuitChatRoom& default_instance();

  static inline const QuitChatRoom* internal_default_instance() {
    return reinterpret_cast<const QuitChatRoom*>(
               &_QuitChatRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(QuitChatRoom* other);

  // implements Message ----------------------------------------------

  inline QuitChatRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  QuitChatRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuitChatRoom& from);
  void MergeFrom(const QuitChatRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuitChatRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t ChatRoomName = 1;
  bool has_chatroomname() const;
  void clear_chatroomname();
  static const int kChatRoomNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& chatroomname() const;
  ::micromsg::SKBuiltinString_t* mutable_chatroomname();
  ::micromsg::SKBuiltinString_t* release_chatroomname();
  void set_allocated_chatroomname(::micromsg::SKBuiltinString_t* chatroomname);

  // required .micromsg.SKBuiltinString_t UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // @@protoc_insertion_point(class_scope:micromsg.QuitChatRoom)
 private:
  void set_has_chatroomname();
  void clear_has_chatroomname();
  void set_has_username();
  void clear_has_username();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* chatroomname_;
  ::micromsg::SKBuiltinString_t* username_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModChatRoomTopic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModChatRoomTopic) */ {
 public:
  ModChatRoomTopic();
  virtual ~ModChatRoomTopic();

  ModChatRoomTopic(const ModChatRoomTopic& from);

  inline ModChatRoomTopic& operator=(const ModChatRoomTopic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModChatRoomTopic& default_instance();

  static inline const ModChatRoomTopic* internal_default_instance() {
    return reinterpret_cast<const ModChatRoomTopic*>(
               &_ModChatRoomTopic_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ModChatRoomTopic* other);

  // implements Message ----------------------------------------------

  inline ModChatRoomTopic* New() const PROTOBUF_FINAL { return New(NULL); }

  ModChatRoomTopic* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModChatRoomTopic& from);
  void MergeFrom(const ModChatRoomTopic& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModChatRoomTopic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t ChatRoomName = 1;
  bool has_chatroomname() const;
  void clear_chatroomname();
  static const int kChatRoomNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& chatroomname() const;
  ::micromsg::SKBuiltinString_t* mutable_chatroomname();
  ::micromsg::SKBuiltinString_t* release_chatroomname();
  void set_allocated_chatroomname(::micromsg::SKBuiltinString_t* chatroomname);

  // required .micromsg.SKBuiltinString_t ChatRoomTopic = 2;
  bool has_chatroomtopic() const;
  void clear_chatroomtopic();
  static const int kChatRoomTopicFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& chatroomtopic() const;
  ::micromsg::SKBuiltinString_t* mutable_chatroomtopic();
  ::micromsg::SKBuiltinString_t* release_chatroomtopic();
  void set_allocated_chatroomtopic(::micromsg::SKBuiltinString_t* chatroomtopic);

  // @@protoc_insertion_point(class_scope:micromsg.ModChatRoomTopic)
 private:
  void set_has_chatroomname();
  void clear_has_chatroomname();
  void set_has_chatroomtopic();
  void clear_has_chatroomtopic();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* chatroomname_;
  ::micromsg::SKBuiltinString_t* chatroomtopic_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModChatRoomMemberDisplayName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModChatRoomMemberDisplayName) */ {
 public:
  ModChatRoomMemberDisplayName();
  virtual ~ModChatRoomMemberDisplayName();

  ModChatRoomMemberDisplayName(const ModChatRoomMemberDisplayName& from);

  inline ModChatRoomMemberDisplayName& operator=(const ModChatRoomMemberDisplayName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModChatRoomMemberDisplayName& default_instance();

  static inline const ModChatRoomMemberDisplayName* internal_default_instance() {
    return reinterpret_cast<const ModChatRoomMemberDisplayName*>(
               &_ModChatRoomMemberDisplayName_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(ModChatRoomMemberDisplayName* other);

  // implements Message ----------------------------------------------

  inline ModChatRoomMemberDisplayName* New() const PROTOBUF_FINAL { return New(NULL); }

  ModChatRoomMemberDisplayName* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModChatRoomMemberDisplayName& from);
  void MergeFrom(const ModChatRoomMemberDisplayName& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModChatRoomMemberDisplayName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ChatRoomName = 1;
  bool has_chatroomname() const;
  void clear_chatroomname();
  static const int kChatRoomNameFieldNumber = 1;
  const ::std::string& chatroomname() const;
  void set_chatroomname(const ::std::string& value);
  #if LANG_CXX11
  void set_chatroomname(::std::string&& value);
  #endif
  void set_chatroomname(const char* value);
  void set_chatroomname(const char* value, size_t size);
  ::std::string* mutable_chatroomname();
  ::std::string* release_chatroomname();
  void set_allocated_chatroomname(::std::string* chatroomname);

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string DisplayName = 3;
  bool has_displayname() const;
  void clear_displayname();
  static const int kDisplayNameFieldNumber = 3;
  const ::std::string& displayname() const;
  void set_displayname(const ::std::string& value);
  #if LANG_CXX11
  void set_displayname(::std::string&& value);
  #endif
  void set_displayname(const char* value);
  void set_displayname(const char* value, size_t size);
  ::std::string* mutable_displayname();
  ::std::string* release_displayname();
  void set_allocated_displayname(::std::string* displayname);

  // @@protoc_insertion_point(class_scope:micromsg.ModChatRoomMemberDisplayName)
 private:
  void set_has_chatroomname();
  void clear_has_chatroomname();
  void set_has_username();
  void clear_has_username();
  void set_has_displayname();
  void clear_has_displayname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chatroomname_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr displayname_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModChatRoomMemberFlag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModChatRoomMemberFlag) */ {
 public:
  ModChatRoomMemberFlag();
  virtual ~ModChatRoomMemberFlag();

  ModChatRoomMemberFlag(const ModChatRoomMemberFlag& from);

  inline ModChatRoomMemberFlag& operator=(const ModChatRoomMemberFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModChatRoomMemberFlag& default_instance();

  static inline const ModChatRoomMemberFlag* internal_default_instance() {
    return reinterpret_cast<const ModChatRoomMemberFlag*>(
               &_ModChatRoomMemberFlag_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(ModChatRoomMemberFlag* other);

  // implements Message ----------------------------------------------

  inline ModChatRoomMemberFlag* New() const PROTOBUF_FINAL { return New(NULL); }

  ModChatRoomMemberFlag* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModChatRoomMemberFlag& from);
  void MergeFrom(const ModChatRoomMemberFlag& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModChatRoomMemberFlag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ChatRoomName = 1;
  bool has_chatroomname() const;
  void clear_chatroomname();
  static const int kChatRoomNameFieldNumber = 1;
  const ::std::string& chatroomname() const;
  void set_chatroomname(const ::std::string& value);
  #if LANG_CXX11
  void set_chatroomname(::std::string&& value);
  #endif
  void set_chatroomname(const char* value);
  void set_chatroomname(const char* value, size_t size);
  ::std::string* mutable_chatroomname();
  ::std::string* release_chatroomname();
  void set_allocated_chatroomname(::std::string* chatroomname);

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required uint32 FlagSwitch = 3;
  bool has_flagswitch() const;
  void clear_flagswitch();
  static const int kFlagSwitchFieldNumber = 3;
  ::google::protobuf::uint32 flagswitch() const;
  void set_flagswitch(::google::protobuf::uint32 value);

  // required uint32 Value = 4;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModChatRoomMemberFlag)
 private:
  void set_has_chatroomname();
  void clear_has_chatroomname();
  void set_has_username();
  void clear_has_username();
  void set_has_flagswitch();
  void clear_has_flagswitch();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chatroomname_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 flagswitch_;
  ::google::protobuf::uint32 value_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AddMsg) */ {
 public:
  AddMsg();
  virtual ~AddMsg();

  AddMsg(const AddMsg& from);

  inline AddMsg& operator=(const AddMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMsg& default_instance();

  static inline const AddMsg* internal_default_instance() {
    return reinterpret_cast<const AddMsg*>(
               &_AddMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(AddMsg* other);

  // implements Message ----------------------------------------------

  inline AddMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  AddMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddMsg& from);
  void MergeFrom(const AddMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MsgSource = 10;
  bool has_msgsource() const;
  void clear_msgsource();
  static const int kMsgSourceFieldNumber = 10;
  const ::std::string& msgsource() const;
  void set_msgsource(const ::std::string& value);
  #if LANG_CXX11
  void set_msgsource(::std::string&& value);
  #endif
  void set_msgsource(const char* value);
  void set_msgsource(const char* value, size_t size);
  ::std::string* mutable_msgsource();
  ::std::string* release_msgsource();
  void set_allocated_msgsource(::std::string* msgsource);

  // optional string PushContent = 11;
  bool has_pushcontent() const;
  void clear_pushcontent();
  static const int kPushContentFieldNumber = 11;
  const ::std::string& pushcontent() const;
  void set_pushcontent(const ::std::string& value);
  #if LANG_CXX11
  void set_pushcontent(::std::string&& value);
  #endif
  void set_pushcontent(const char* value);
  void set_pushcontent(const char* value, size_t size);
  ::std::string* mutable_pushcontent();
  ::std::string* release_pushcontent();
  void set_allocated_pushcontent(::std::string* pushcontent);

  // required .micromsg.SKBuiltinString_t FromUserName = 2;
  bool has_fromusername() const;
  void clear_fromusername();
  static const int kFromUserNameFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& fromusername() const;
  ::micromsg::SKBuiltinString_t* mutable_fromusername();
  ::micromsg::SKBuiltinString_t* release_fromusername();
  void set_allocated_fromusername(::micromsg::SKBuiltinString_t* fromusername);

  // required .micromsg.SKBuiltinString_t ToUserName = 3;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUserNameFieldNumber = 3;
  const ::micromsg::SKBuiltinString_t& tousername() const;
  ::micromsg::SKBuiltinString_t* mutable_tousername();
  ::micromsg::SKBuiltinString_t* release_tousername();
  void set_allocated_tousername(::micromsg::SKBuiltinString_t* tousername);

  // required .micromsg.SKBuiltinString_t Content = 5;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 5;
  const ::micromsg::SKBuiltinString_t& content() const;
  ::micromsg::SKBuiltinString_t* mutable_content();
  ::micromsg::SKBuiltinString_t* release_content();
  void set_allocated_content(::micromsg::SKBuiltinString_t* content);

  // required .micromsg.SKBuiltinBuffer_t ImgBuf = 8;
  bool has_imgbuf() const;
  void clear_imgbuf();
  static const int kImgBufFieldNumber = 8;
  const ::micromsg::SKBuiltinBuffer_t& imgbuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_imgbuf();
  ::micromsg::SKBuiltinBuffer_t* release_imgbuf();
  void set_allocated_imgbuf(::micromsg::SKBuiltinBuffer_t* imgbuf);

  // required int32 MsgId = 1;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // required int32 MsgType = 4;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 4;
  ::google::protobuf::int32 msgtype() const;
  void set_msgtype(::google::protobuf::int32 value);

  // required uint32 Status = 6;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // required uint32 ImgStatus = 7;
  bool has_imgstatus() const;
  void clear_imgstatus();
  static const int kImgStatusFieldNumber = 7;
  ::google::protobuf::uint32 imgstatus() const;
  void set_imgstatus(::google::protobuf::uint32 value);

  // optional int64 NewMsgId = 12;
  bool has_newmsgid() const;
  void clear_newmsgid();
  static const int kNewMsgIdFieldNumber = 12;
  ::google::protobuf::int64 newmsgid() const;
  void set_newmsgid(::google::protobuf::int64 value);

  // required uint32 CreateTime = 9;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 9;
  ::google::protobuf::uint32 createtime() const;
  void set_createtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AddMsg)
 private:
  void set_has_msgid();
  void clear_has_msgid();
  void set_has_fromusername();
  void clear_has_fromusername();
  void set_has_tousername();
  void clear_has_tousername();
  void set_has_msgtype();
  void clear_has_msgtype();
  void set_has_content();
  void clear_has_content();
  void set_has_status();
  void clear_has_status();
  void set_has_imgstatus();
  void clear_has_imgstatus();
  void set_has_imgbuf();
  void clear_has_imgbuf();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_msgsource();
  void clear_has_msgsource();
  void set_has_pushcontent();
  void clear_has_pushcontent();
  void set_has_newmsgid();
  void clear_has_newmsgid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msgsource_;
  ::google::protobuf::internal::ArenaStringPtr pushcontent_;
  ::micromsg::SKBuiltinString_t* fromusername_;
  ::micromsg::SKBuiltinString_t* tousername_;
  ::micromsg::SKBuiltinString_t* content_;
  ::micromsg::SKBuiltinBuffer_t* imgbuf_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 msgtype_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 imgstatus_;
  ::google::protobuf::int64 newmsgid_;
  ::google::protobuf::uint32 createtime_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModMsgStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModMsgStatus) */ {
 public:
  ModMsgStatus();
  virtual ~ModMsgStatus();

  ModMsgStatus(const ModMsgStatus& from);

  inline ModMsgStatus& operator=(const ModMsgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModMsgStatus& default_instance();

  static inline const ModMsgStatus* internal_default_instance() {
    return reinterpret_cast<const ModMsgStatus*>(
               &_ModMsgStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(ModMsgStatus* other);

  // implements Message ----------------------------------------------

  inline ModMsgStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  ModMsgStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModMsgStatus& from);
  void MergeFrom(const ModMsgStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModMsgStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t FromUserName = 2;
  bool has_fromusername() const;
  void clear_fromusername();
  static const int kFromUserNameFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& fromusername() const;
  ::micromsg::SKBuiltinString_t* mutable_fromusername();
  ::micromsg::SKBuiltinString_t* release_fromusername();
  void set_allocated_fromusername(::micromsg::SKBuiltinString_t* fromusername);

  // required .micromsg.SKBuiltinString_t ToUserName = 3;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUserNameFieldNumber = 3;
  const ::micromsg::SKBuiltinString_t& tousername() const;
  ::micromsg::SKBuiltinString_t* mutable_tousername();
  ::micromsg::SKBuiltinString_t* release_tousername();
  void set_allocated_tousername(::micromsg::SKBuiltinString_t* tousername);

  // required int32 MsgId = 1;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // required uint32 Status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional int64 NewMsgId = 5;
  bool has_newmsgid() const;
  void clear_newmsgid();
  static const int kNewMsgIdFieldNumber = 5;
  ::google::protobuf::int64 newmsgid() const;
  void set_newmsgid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModMsgStatus)
 private:
  void set_has_msgid();
  void clear_has_msgid();
  void set_has_fromusername();
  void clear_has_fromusername();
  void set_has_tousername();
  void clear_has_tousername();
  void set_has_status();
  void clear_has_status();
  void set_has_newmsgid();
  void clear_has_newmsgid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* fromusername_;
  ::micromsg::SKBuiltinString_t* tousername_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::int64 newmsgid_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelContact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DelContact) */ {
 public:
  DelContact();
  virtual ~DelContact();

  DelContact(const DelContact& from);

  inline DelContact& operator=(const DelContact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelContact& default_instance();

  static inline const DelContact* internal_default_instance() {
    return reinterpret_cast<const DelContact*>(
               &_DelContact_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(DelContact* other);

  // implements Message ----------------------------------------------

  inline DelContact* New() const PROTOBUF_FINAL { return New(NULL); }

  DelContact* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelContact& from);
  void MergeFrom(const DelContact& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelContact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // @@protoc_insertion_point(class_scope:micromsg.DelContact)
 private:
  void set_has_username();
  void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* username_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelChatContact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DelChatContact) */ {
 public:
  DelChatContact();
  virtual ~DelChatContact();

  DelChatContact(const DelChatContact& from);

  inline DelChatContact& operator=(const DelChatContact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelChatContact& default_instance();

  static inline const DelChatContact* internal_default_instance() {
    return reinterpret_cast<const DelChatContact*>(
               &_DelChatContact_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(DelChatContact* other);

  // implements Message ----------------------------------------------

  inline DelChatContact* New() const PROTOBUF_FINAL { return New(NULL); }

  DelChatContact* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelChatContact& from);
  void MergeFrom(const DelChatContact& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelChatContact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // @@protoc_insertion_point(class_scope:micromsg.DelChatContact)
 private:
  void set_has_username();
  void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* username_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelContactMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DelContactMsg) */ {
 public:
  DelContactMsg();
  virtual ~DelContactMsg();

  DelContactMsg(const DelContactMsg& from);

  inline DelContactMsg& operator=(const DelContactMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelContactMsg& default_instance();

  static inline const DelContactMsg* internal_default_instance() {
    return reinterpret_cast<const DelContactMsg*>(
               &_DelContactMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(DelContactMsg* other);

  // implements Message ----------------------------------------------

  inline DelContactMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  DelContactMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelContactMsg& from);
  void MergeFrom(const DelContactMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelContactMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // optional int64 NewMsgId = 3;
  bool has_newmsgid() const;
  void clear_newmsgid();
  static const int kNewMsgIdFieldNumber = 3;
  ::google::protobuf::int64 newmsgid() const;
  void set_newmsgid(::google::protobuf::int64 value);

  // required int32 MaxMsgId = 2;
  bool has_maxmsgid() const;
  void clear_maxmsgid();
  static const int kMaxMsgIdFieldNumber = 2;
  ::google::protobuf::int32 maxmsgid() const;
  void set_maxmsgid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.DelContactMsg)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_maxmsgid();
  void clear_has_maxmsgid();
  void set_has_newmsgid();
  void clear_has_newmsgid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* username_;
  ::google::protobuf::int64 newmsgid_;
  ::google::protobuf::int32 maxmsgid_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DelMsg) */ {
 public:
  DelMsg();
  virtual ~DelMsg();

  DelMsg(const DelMsg& from);

  inline DelMsg& operator=(const DelMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelMsg& default_instance();

  static inline const DelMsg* internal_default_instance() {
    return reinterpret_cast<const DelMsg*>(
               &_DelMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(DelMsg* other);

  // implements Message ----------------------------------------------

  inline DelMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  DelMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelMsg& from);
  void MergeFrom(const DelMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 MsgIdList = 3 [packed = true];
  int msgidlist_size() const;
  void clear_msgidlist();
  static const int kMsgIdListFieldNumber = 3;
  ::google::protobuf::int32 msgidlist(int index) const;
  void set_msgidlist(int index, ::google::protobuf::int32 value);
  void add_msgidlist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      msgidlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_msgidlist();

  // required .micromsg.SKBuiltinString_t UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.DelMsg)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > msgidlist_;
  mutable int _msgidlist_cached_byte_size_;
  ::micromsg::SKBuiltinString_t* username_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewDelMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.NewDelMsg) */ {
 public:
  NewDelMsg();
  virtual ~NewDelMsg();

  NewDelMsg(const NewDelMsg& from);

  inline NewDelMsg& operator=(const NewDelMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewDelMsg& default_instance();

  static inline const NewDelMsg* internal_default_instance() {
    return reinterpret_cast<const NewDelMsg*>(
               &_NewDelMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(NewDelMsg* other);

  // implements Message ----------------------------------------------

  inline NewDelMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  NewDelMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewDelMsg& from);
  void MergeFrom(const NewDelMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewDelMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FromUserName = 1;
  bool has_fromusername() const;
  void clear_fromusername();
  static const int kFromUserNameFieldNumber = 1;
  const ::std::string& fromusername() const;
  void set_fromusername(const ::std::string& value);
  #if LANG_CXX11
  void set_fromusername(::std::string&& value);
  #endif
  void set_fromusername(const char* value);
  void set_fromusername(const char* value, size_t size);
  ::std::string* mutable_fromusername();
  ::std::string* release_fromusername();
  void set_allocated_fromusername(::std::string* fromusername);

  // optional string ToUserName = 2;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUserNameFieldNumber = 2;
  const ::std::string& tousername() const;
  void set_tousername(const ::std::string& value);
  #if LANG_CXX11
  void set_tousername(::std::string&& value);
  #endif
  void set_tousername(const char* value);
  void set_tousername(const char* value, size_t size);
  ::std::string* mutable_tousername();
  ::std::string* release_tousername();
  void set_allocated_tousername(::std::string* tousername);

  // required int32 MsgId = 3;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // required uint32 MsgType = 4;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 4;
  ::google::protobuf::uint32 msgtype() const;
  void set_msgtype(::google::protobuf::uint32 value);

  // optional int64 NewMsgId = 5;
  bool has_newmsgid() const;
  void clear_newmsgid();
  static const int kNewMsgIdFieldNumber = 5;
  ::google::protobuf::int64 newmsgid() const;
  void set_newmsgid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:micromsg.NewDelMsg)
 private:
  void set_has_fromusername();
  void clear_has_fromusername();
  void set_has_tousername();
  void clear_has_tousername();
  void set_has_msgid();
  void clear_has_msgid();
  void set_has_msgtype();
  void clear_has_msgtype();
  void set_has_newmsgid();
  void clear_has_newmsgid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fromusername_;
  ::google::protobuf::internal::ArenaStringPtr tousername_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::uint32 msgtype_;
  ::google::protobuf::int64 newmsgid_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FacebookInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.FacebookInfo) */ {
 public:
  FacebookInfo();
  virtual ~FacebookInfo();

  FacebookInfo(const FacebookInfo& from);

  inline FacebookInfo& operator=(const FacebookInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacebookInfo& default_instance();

  static inline const FacebookInfo* internal_default_instance() {
    return reinterpret_cast<const FacebookInfo*>(
               &_FacebookInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(FacebookInfo* other);

  // implements Message ----------------------------------------------

  inline FacebookInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FacebookInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FacebookInfo& from);
  void MergeFrom(const FacebookInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FacebookInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string Token = 3;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 3;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required uint64 Uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.FacebookInfo)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_name();
  void clear_has_name();
  void set_has_token();
  void clear_has_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 uid_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModUserImg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModUserImg) */ {
 public:
  ModUserImg();
  virtual ~ModUserImg();

  ModUserImg(const ModUserImg& from);

  inline ModUserImg& operator=(const ModUserImg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModUserImg& default_instance();

  static inline const ModUserImg* internal_default_instance() {
    return reinterpret_cast<const ModUserImg*>(
               &_ModUserImg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(ModUserImg* other);

  // implements Message ----------------------------------------------

  inline ModUserImg* New() const PROTOBUF_FINAL { return New(NULL); }

  ModUserImg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModUserImg& from);
  void MergeFrom(const ModUserImg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModUserImg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes ImgBuf = 3;
  bool has_imgbuf() const;
  void clear_imgbuf();
  static const int kImgBufFieldNumber = 3;
  const ::std::string& imgbuf() const;
  void set_imgbuf(const ::std::string& value);
  #if LANG_CXX11
  void set_imgbuf(::std::string&& value);
  #endif
  void set_imgbuf(const char* value);
  void set_imgbuf(const void* value, size_t size);
  ::std::string* mutable_imgbuf();
  ::std::string* release_imgbuf();
  void set_allocated_imgbuf(::std::string* imgbuf);

  // optional string ImgMd5 = 4;
  bool has_imgmd5() const;
  void clear_imgmd5();
  static const int kImgMd5FieldNumber = 4;
  const ::std::string& imgmd5() const;
  void set_imgmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_imgmd5(::std::string&& value);
  #endif
  void set_imgmd5(const char* value);
  void set_imgmd5(const char* value, size_t size);
  ::std::string* mutable_imgmd5();
  ::std::string* release_imgmd5();
  void set_allocated_imgmd5(::std::string* imgmd5);

  // optional string BigHeadImgUrl = 5;
  bool has_bigheadimgurl() const;
  void clear_bigheadimgurl();
  static const int kBigHeadImgUrlFieldNumber = 5;
  const ::std::string& bigheadimgurl() const;
  void set_bigheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_bigheadimgurl(::std::string&& value);
  #endif
  void set_bigheadimgurl(const char* value);
  void set_bigheadimgurl(const char* value, size_t size);
  ::std::string* mutable_bigheadimgurl();
  ::std::string* release_bigheadimgurl();
  void set_allocated_bigheadimgurl(::std::string* bigheadimgurl);

  // optional string SmallHeadImgUrl = 6;
  bool has_smallheadimgurl() const;
  void clear_smallheadimgurl();
  static const int kSmallHeadImgUrlFieldNumber = 6;
  const ::std::string& smallheadimgurl() const;
  void set_smallheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_smallheadimgurl(::std::string&& value);
  #endif
  void set_smallheadimgurl(const char* value);
  void set_smallheadimgurl(const char* value, size_t size);
  ::std::string* mutable_smallheadimgurl();
  ::std::string* release_smallheadimgurl();
  void set_allocated_smallheadimgurl(::std::string* smallheadimgurl);

  // required uint32 ImgType = 1;
  bool has_imgtype() const;
  void clear_imgtype();
  static const int kImgTypeFieldNumber = 1;
  ::google::protobuf::uint32 imgtype() const;
  void set_imgtype(::google::protobuf::uint32 value);

  // required uint32 ImgLen = 2;
  bool has_imglen() const;
  void clear_imglen();
  static const int kImgLenFieldNumber = 2;
  ::google::protobuf::uint32 imglen() const;
  void set_imglen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModUserImg)
 private:
  void set_has_imgtype();
  void clear_has_imgtype();
  void set_has_imglen();
  void clear_has_imglen();
  void set_has_imgbuf();
  void clear_has_imgbuf();
  void set_has_imgmd5();
  void clear_has_imgmd5();
  void set_has_bigheadimgurl();
  void clear_has_bigheadimgurl();
  void set_has_smallheadimgurl();
  void clear_has_smallheadimgurl();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr imgbuf_;
  ::google::protobuf::internal::ArenaStringPtr imgmd5_;
  ::google::protobuf::internal::ArenaStringPtr bigheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr smallheadimgurl_;
  ::google::protobuf::uint32 imgtype_;
  ::google::protobuf::uint32 imglen_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModDisturbSetting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModDisturbSetting) */ {
 public:
  ModDisturbSetting();
  virtual ~ModDisturbSetting();

  ModDisturbSetting(const ModDisturbSetting& from);

  inline ModDisturbSetting& operator=(const ModDisturbSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModDisturbSetting& default_instance();

  static inline const ModDisturbSetting* internal_default_instance() {
    return reinterpret_cast<const ModDisturbSetting*>(
               &_ModDisturbSetting_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(ModDisturbSetting* other);

  // implements Message ----------------------------------------------

  inline ModDisturbSetting* New() const PROTOBUF_FINAL { return New(NULL); }

  ModDisturbSetting* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModDisturbSetting& from);
  void MergeFrom(const ModDisturbSetting& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModDisturbSetting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.DisturbSetting DisturbSetting = 1;
  bool has_disturbsetting() const;
  void clear_disturbsetting();
  static const int kDisturbSettingFieldNumber = 1;
  const ::micromsg::DisturbSetting& disturbsetting() const;
  ::micromsg::DisturbSetting* mutable_disturbsetting();
  ::micromsg::DisturbSetting* release_disturbsetting();
  void set_allocated_disturbsetting(::micromsg::DisturbSetting* disturbsetting);

  // @@protoc_insertion_point(class_scope:micromsg.ModDisturbSetting)
 private:
  void set_has_disturbsetting();
  void clear_has_disturbsetting();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::DisturbSetting* disturbsetting_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModNotifyStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModNotifyStatus) */ {
 public:
  ModNotifyStatus();
  virtual ~ModNotifyStatus();

  ModNotifyStatus(const ModNotifyStatus& from);

  inline ModNotifyStatus& operator=(const ModNotifyStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModNotifyStatus& default_instance();

  static inline const ModNotifyStatus* internal_default_instance() {
    return reinterpret_cast<const ModNotifyStatus*>(
               &_ModNotifyStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(ModNotifyStatus* other);

  // implements Message ----------------------------------------------

  inline ModNotifyStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  ModNotifyStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModNotifyStatus& from);
  void MergeFrom(const ModNotifyStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModNotifyStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // required uint32 Status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModNotifyStatus)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_status();
  void clear_has_status();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* username_;
  ::google::protobuf::uint32 status_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModMicroBlogInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModMicroBlogInfo) */ {
 public:
  ModMicroBlogInfo();
  virtual ~ModMicroBlogInfo();

  ModMicroBlogInfo(const ModMicroBlogInfo& from);

  inline ModMicroBlogInfo& operator=(const ModMicroBlogInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModMicroBlogInfo& default_instance();

  static inline const ModMicroBlogInfo* internal_default_instance() {
    return reinterpret_cast<const ModMicroBlogInfo*>(
               &_ModMicroBlogInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(ModMicroBlogInfo* other);

  // implements Message ----------------------------------------------

  inline ModMicroBlogInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ModMicroBlogInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModMicroBlogInfo& from);
  void MergeFrom(const ModMicroBlogInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModMicroBlogInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // required uint32 MicroBlogType = 2;
  bool has_microblogtype() const;
  void clear_microblogtype();
  static const int kMicroBlogTypeFieldNumber = 2;
  ::google::protobuf::uint32 microblogtype() const;
  void set_microblogtype(::google::protobuf::uint32 value);

  // required uint32 NotifyStatus = 3;
  bool has_notifystatus() const;
  void clear_notifystatus();
  static const int kNotifyStatusFieldNumber = 3;
  ::google::protobuf::uint32 notifystatus() const;
  void set_notifystatus(::google::protobuf::uint32 value);

  // required uint32 DeleteFlag = 4;
  bool has_deleteflag() const;
  void clear_deleteflag();
  static const int kDeleteFlagFieldNumber = 4;
  ::google::protobuf::uint32 deleteflag() const;
  void set_deleteflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModMicroBlogInfo)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_microblogtype();
  void clear_has_microblogtype();
  void set_has_notifystatus();
  void clear_has_notifystatus();
  void set_has_deleteflag();
  void clear_has_deleteflag();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* username_;
  ::google::protobuf::uint32 microblogtype_;
  ::google::protobuf::uint32 notifystatus_;
  ::google::protobuf::uint32 deleteflag_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.Report) */ {
 public:
  Report();
  virtual ~Report();

  Report(const Report& from);

  inline Report& operator=(const Report& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Report& default_instance();

  static inline const Report* internal_default_instance() {
    return reinterpret_cast<const Report*>(
               &_Report_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(Report* other);

  // implements Message ----------------------------------------------

  inline Report* New() const PROTOBUF_FINAL { return New(NULL); }

  Report* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Report& from);
  void MergeFrom(const Report& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Report* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Log = 1;
  bool has_log() const;
  void clear_log();
  static const int kLogFieldNumber = 1;
  const ::std::string& log() const;
  void set_log(const ::std::string& value);
  #if LANG_CXX11
  void set_log(::std::string&& value);
  #endif
  void set_log(const char* value);
  void set_log(const char* value, size_t size);
  ::std::string* mutable_log();
  ::std::string* release_log();
  void set_allocated_log(::std::string* log);

  // @@protoc_insertion_point(class_scope:micromsg.Report)
 private:
  void set_has_log();
  void clear_has_log();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr log_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InviteFriendOpen : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.InviteFriendOpen) */ {
 public:
  InviteFriendOpen();
  virtual ~InviteFriendOpen();

  InviteFriendOpen(const InviteFriendOpen& from);

  inline InviteFriendOpen& operator=(const InviteFriendOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteFriendOpen& default_instance();

  static inline const InviteFriendOpen* internal_default_instance() {
    return reinterpret_cast<const InviteFriendOpen*>(
               &_InviteFriendOpen_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(InviteFriendOpen* other);

  // implements Message ----------------------------------------------

  inline InviteFriendOpen* New() const PROTOBUF_FINAL { return New(NULL); }

  InviteFriendOpen* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InviteFriendOpen& from);
  void MergeFrom(const InviteFriendOpen& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InviteFriendOpen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required uint32 FriendType = 2;
  bool has_friendtype() const;
  void clear_friendtype();
  static const int kFriendTypeFieldNumber = 2;
  ::google::protobuf::uint32 friendtype() const;
  void set_friendtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.InviteFriendOpen)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_friendtype();
  void clear_has_friendtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 friendtype_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModUserDomainEmail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModUserDomainEmail) */ {
 public:
  ModUserDomainEmail();
  virtual ~ModUserDomainEmail();

  ModUserDomainEmail(const ModUserDomainEmail& from);

  inline ModUserDomainEmail& operator=(const ModUserDomainEmail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModUserDomainEmail& default_instance();

  static inline const ModUserDomainEmail* internal_default_instance() {
    return reinterpret_cast<const ModUserDomainEmail*>(
               &_ModUserDomainEmail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(ModUserDomainEmail* other);

  // implements Message ----------------------------------------------

  inline ModUserDomainEmail* New() const PROTOBUF_FINAL { return New(NULL); }

  ModUserDomainEmail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModUserDomainEmail& from);
  void MergeFrom(const ModUserDomainEmail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModUserDomainEmail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t Email = 2;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& email() const;
  ::micromsg::SKBuiltinString_t* mutable_email();
  ::micromsg::SKBuiltinString_t* release_email();
  void set_allocated_email(::micromsg::SKBuiltinString_t* email);

  // required uint32 Status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModUserDomainEmail)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_email();
  void clear_has_email();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* email_;
  ::google::protobuf::uint32 status_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelUserDomainEmail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DelUserDomainEmail) */ {
 public:
  DelUserDomainEmail();
  virtual ~DelUserDomainEmail();

  DelUserDomainEmail(const DelUserDomainEmail& from);

  inline DelUserDomainEmail& operator=(const DelUserDomainEmail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelUserDomainEmail& default_instance();

  static inline const DelUserDomainEmail* internal_default_instance() {
    return reinterpret_cast<const DelUserDomainEmail*>(
               &_DelUserDomainEmail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(DelUserDomainEmail* other);

  // implements Message ----------------------------------------------

  inline DelUserDomainEmail* New() const PROTOBUF_FINAL { return New(NULL); }

  DelUserDomainEmail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelUserDomainEmail& from);
  void MergeFrom(const DelUserDomainEmail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelUserDomainEmail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // required .micromsg.SKBuiltinString_t Email = 2;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& email() const;
  ::micromsg::SKBuiltinString_t* mutable_email();
  ::micromsg::SKBuiltinString_t* release_email();
  void set_allocated_email(::micromsg::SKBuiltinString_t* email);

  // @@protoc_insertion_point(class_scope:micromsg.DelUserDomainEmail)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_email();
  void clear_has_email();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* username_;
  ::micromsg::SKBuiltinString_t* email_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSwitch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.FunctionSwitch) */ {
 public:
  FunctionSwitch();
  virtual ~FunctionSwitch();

  FunctionSwitch(const FunctionSwitch& from);

  inline FunctionSwitch& operator=(const FunctionSwitch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSwitch& default_instance();

  static inline const FunctionSwitch* internal_default_instance() {
    return reinterpret_cast<const FunctionSwitch*>(
               &_FunctionSwitch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(FunctionSwitch* other);

  // implements Message ----------------------------------------------

  inline FunctionSwitch* New() const PROTOBUF_FINAL { return New(NULL); }

  FunctionSwitch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FunctionSwitch& from);
  void MergeFrom(const FunctionSwitch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FunctionSwitch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 FunctionId = 1;
  bool has_functionid() const;
  void clear_functionid();
  static const int kFunctionIdFieldNumber = 1;
  ::google::protobuf::uint32 functionid() const;
  void set_functionid(::google::protobuf::uint32 value);

  // required uint32 SwitchValue = 2;
  bool has_switchvalue() const;
  void clear_switchvalue();
  static const int kSwitchValueFieldNumber = 2;
  ::google::protobuf::uint32 switchvalue() const;
  void set_switchvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.FunctionSwitch)
 private:
  void set_has_functionid();
  void clear_has_functionid();
  void set_has_switchvalue();
  void clear_has_switchvalue();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 functionid_;
  ::google::protobuf::uint32 switchvalue_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WebWxFunctionSwitch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.WebWxFunctionSwitch) */ {
 public:
  WebWxFunctionSwitch();
  virtual ~WebWxFunctionSwitch();

  WebWxFunctionSwitch(const WebWxFunctionSwitch& from);

  inline WebWxFunctionSwitch& operator=(const WebWxFunctionSwitch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebWxFunctionSwitch& default_instance();

  static inline const WebWxFunctionSwitch* internal_default_instance() {
    return reinterpret_cast<const WebWxFunctionSwitch*>(
               &_WebWxFunctionSwitch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(WebWxFunctionSwitch* other);

  // implements Message ----------------------------------------------

  inline WebWxFunctionSwitch* New() const PROTOBUF_FINAL { return New(NULL); }

  WebWxFunctionSwitch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WebWxFunctionSwitch& from);
  void MergeFrom(const WebWxFunctionSwitch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WebWxFunctionSwitch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 FunctionId = 1;
  bool has_functionid() const;
  void clear_functionid();
  static const int kFunctionIdFieldNumber = 1;
  ::google::protobuf::uint32 functionid() const;
  void set_functionid(::google::protobuf::uint32 value);

  // required uint32 SwitchValue = 2;
  bool has_switchvalue() const;
  void clear_switchvalue();
  static const int kSwitchValueFieldNumber = 2;
  ::google::protobuf::uint32 switchvalue() const;
  void set_switchvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.WebWxFunctionSwitch)
 private:
  void set_has_functionid();
  void clear_has_functionid();
  void set_has_switchvalue();
  void clear_has_switchvalue();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 functionid_;
  ::google::protobuf::uint32 switchvalue_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PluginInstall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.PluginInstall) */ {
 public:
  PluginInstall();
  virtual ~PluginInstall();

  PluginInstall(const PluginInstall& from);

  inline PluginInstall& operator=(const PluginInstall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PluginInstall& default_instance();

  static inline const PluginInstall* internal_default_instance() {
    return reinterpret_cast<const PluginInstall*>(
               &_PluginInstall_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(PluginInstall* other);

  // implements Message ----------------------------------------------

  inline PluginInstall* New() const PROTOBUF_FINAL { return New(NULL); }

  PluginInstall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PluginInstall& from);
  void MergeFrom(const PluginInstall& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PluginInstall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 PluginFlag = 1;
  bool has_pluginflag() const;
  void clear_pluginflag();
  static const int kPluginFlagFieldNumber = 1;
  ::google::protobuf::uint32 pluginflag() const;
  void set_pluginflag(::google::protobuf::uint32 value);

  // required uint32 IsUnInstall = 2;
  bool has_isuninstall() const;
  void clear_isuninstall();
  static const int kIsUnInstallFieldNumber = 2;
  ::google::protobuf::uint32 isuninstall() const;
  void set_isuninstall(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.PluginInstall)
 private:
  void set_has_pluginflag();
  void clear_has_pluginflag();
  void set_has_isuninstall();
  void clear_has_isuninstall();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 pluginflag_;
  ::google::protobuf::uint32 isuninstall_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModTXNewsCategory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModTXNewsCategory) */ {
 public:
  ModTXNewsCategory();
  virtual ~ModTXNewsCategory();

  ModTXNewsCategory(const ModTXNewsCategory& from);

  inline ModTXNewsCategory& operator=(const ModTXNewsCategory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModTXNewsCategory& default_instance();

  static inline const ModTXNewsCategory* internal_default_instance() {
    return reinterpret_cast<const ModTXNewsCategory*>(
               &_ModTXNewsCategory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(ModTXNewsCategory* other);

  // implements Message ----------------------------------------------

  inline ModTXNewsCategory* New() const PROTOBUF_FINAL { return New(NULL); }

  ModTXNewsCategory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModTXNewsCategory& from);
  void MergeFrom(const ModTXNewsCategory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModTXNewsCategory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 TXNewsCategory = 1;
  bool has_txnewscategory() const;
  void clear_txnewscategory();
  static const int kTXNewsCategoryFieldNumber = 1;
  ::google::protobuf::uint32 txnewscategory() const;
  void set_txnewscategory(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModTXNewsCategory)
 private:
  void set_has_txnewscategory();
  void clear_has_txnewscategory();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 txnewscategory_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MediaNoteOpLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.MediaNoteOpLog) */ {
 public:
  MediaNoteOpLog();
  virtual ~MediaNoteOpLog();

  MediaNoteOpLog(const MediaNoteOpLog& from);

  inline MediaNoteOpLog& operator=(const MediaNoteOpLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MediaNoteOpLog& default_instance();

  static inline const MediaNoteOpLog* internal_default_instance() {
    return reinterpret_cast<const MediaNoteOpLog*>(
               &_MediaNoteOpLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(MediaNoteOpLog* other);

  // implements Message ----------------------------------------------

  inline MediaNoteOpLog* New() const PROTOBUF_FINAL { return New(NULL); }

  MediaNoteOpLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MediaNoteOpLog& from);
  void MergeFrom(const MediaNoteOpLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MediaNoteOpLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 WriteCount = 1;
  bool has_writecount() const;
  void clear_writecount();
  static const int kWriteCountFieldNumber = 1;
  ::google::protobuf::uint32 writecount() const;
  void set_writecount(::google::protobuf::uint32 value);

  // required int32 NoteType = 2;
  bool has_notetype() const;
  void clear_notetype();
  static const int kNoteTypeFieldNumber = 2;
  ::google::protobuf::int32 notetype() const;
  void set_notetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.MediaNoteOpLog)
 private:
  void set_has_writecount();
  void clear_has_writecount();
  void set_has_notetype();
  void clear_has_notetype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 writecount_;
  ::google::protobuf::int32 notetype_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GmailSwitchOplog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GmailSwitchOplog) */ {
 public:
  GmailSwitchOplog();
  virtual ~GmailSwitchOplog();

  GmailSwitchOplog(const GmailSwitchOplog& from);

  inline GmailSwitchOplog& operator=(const GmailSwitchOplog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GmailSwitchOplog& default_instance();

  static inline const GmailSwitchOplog* internal_default_instance() {
    return reinterpret_cast<const GmailSwitchOplog*>(
               &_GmailSwitchOplog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(GmailSwitchOplog* other);

  // implements Message ----------------------------------------------

  inline GmailSwitchOplog* New() const PROTOBUF_FINAL { return New(NULL); }

  GmailSwitchOplog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GmailSwitchOplog& from);
  void MergeFrom(const GmailSwitchOplog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GmailSwitchOplog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GmailAcct = 1;
  bool has_gmailacct() const;
  void clear_gmailacct();
  static const int kGmailAcctFieldNumber = 1;
  const ::std::string& gmailacct() const;
  void set_gmailacct(const ::std::string& value);
  #if LANG_CXX11
  void set_gmailacct(::std::string&& value);
  #endif
  void set_gmailacct(const char* value);
  void set_gmailacct(const char* value, size_t size);
  ::std::string* mutable_gmailacct();
  ::std::string* release_gmailacct();
  void set_allocated_gmailacct(::std::string* gmailacct);

  // required uint32 GmailSwitch = 2;
  bool has_gmailswitch() const;
  void clear_gmailswitch();
  static const int kGmailSwitchFieldNumber = 2;
  ::google::protobuf::uint32 gmailswitch() const;
  void set_gmailswitch(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GmailSwitchOplog)
 private:
  void set_has_gmailacct();
  void clear_has_gmailacct();
  void set_has_gmailswitch();
  void clear_has_gmailswitch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gmailacct_;
  ::google::protobuf::uint32 gmailswitch_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateStatOpLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.UpdateStatOpLog) */ {
 public:
  UpdateStatOpLog();
  virtual ~UpdateStatOpLog();

  UpdateStatOpLog(const UpdateStatOpLog& from);

  inline UpdateStatOpLog& operator=(const UpdateStatOpLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateStatOpLog& default_instance();

  static inline const UpdateStatOpLog* internal_default_instance() {
    return reinterpret_cast<const UpdateStatOpLog*>(
               &_UpdateStatOpLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(UpdateStatOpLog* other);

  // implements Message ----------------------------------------------

  inline UpdateStatOpLog* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateStatOpLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateStatOpLog& from);
  void MergeFrom(const UpdateStatOpLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateStatOpLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 OpCode = 1;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 1;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.UpdateStatOpLog)
 private:
  void set_has_opcode();
  void clear_has_opcode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 opcode_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KVStatItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.KVStatItem) */ {
 public:
  KVStatItem();
  virtual ~KVStatItem();

  KVStatItem(const KVStatItem& from);

  inline KVStatItem& operator=(const KVStatItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KVStatItem& default_instance();

  static inline const KVStatItem* internal_default_instance() {
    return reinterpret_cast<const KVStatItem*>(
               &_KVStatItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(KVStatItem* other);

  // implements Message ----------------------------------------------

  inline KVStatItem* New() const PROTOBUF_FINAL { return New(NULL); }

  KVStatItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KVStatItem& from);
  void MergeFrom(const KVStatItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KVStatItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required uint32 Key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.KVStatItem)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 key_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KVStatOpLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.KVStatOpLog) */ {
 public:
  KVStatOpLog();
  virtual ~KVStatOpLog();

  KVStatOpLog(const KVStatOpLog& from);

  inline KVStatOpLog& operator=(const KVStatOpLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KVStatOpLog& default_instance();

  static inline const KVStatOpLog* internal_default_instance() {
    return reinterpret_cast<const KVStatOpLog*>(
               &_KVStatOpLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(KVStatOpLog* other);

  // implements Message ----------------------------------------------

  inline KVStatOpLog* New() const PROTOBUF_FINAL { return New(NULL); }

  KVStatOpLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KVStatOpLog& from);
  void MergeFrom(const KVStatOpLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KVStatOpLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.KVStatItem List = 2;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 2;
  const ::micromsg::KVStatItem& list(int index) const;
  ::micromsg::KVStatItem* mutable_list(int index);
  ::micromsg::KVStatItem* add_list();
  ::google::protobuf::RepeatedPtrField< ::micromsg::KVStatItem >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::KVStatItem >&
      list() const;

  // required uint32 Count = 1;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.KVStatOpLog)
 private:
  void set_has_count();
  void clear_has_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::KVStatItem > list_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KVCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.KVCmd) */ {
 public:
  KVCmd();
  virtual ~KVCmd();

  KVCmd(const KVCmd& from);

  inline KVCmd& operator=(const KVCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KVCmd& default_instance();

  static inline const KVCmd* internal_default_instance() {
    return reinterpret_cast<const KVCmd*>(
               &_KVCmd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(KVCmd* other);

  // implements Message ----------------------------------------------

  inline KVCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  KVCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KVCmd& from);
  void MergeFrom(const KVCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KVCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinBuffer_t Value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& value() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_value();
  ::micromsg::SKBuiltinBuffer_t* release_value();
  void set_allocated_value(::micromsg::SKBuiltinBuffer_t* value);

  // required uint32 Key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.KVCmd)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinBuffer_t* value_;
  ::google::protobuf::uint32 key_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ThemeOpLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ThemeOpLog) */ {
 public:
  ThemeOpLog();
  virtual ~ThemeOpLog();

  ThemeOpLog(const ThemeOpLog& from);

  inline ThemeOpLog& operator=(const ThemeOpLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThemeOpLog& default_instance();

  static inline const ThemeOpLog* internal_default_instance() {
    return reinterpret_cast<const ThemeOpLog*>(
               &_ThemeOpLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(ThemeOpLog* other);

  // implements Message ----------------------------------------------

  inline ThemeOpLog* New() const PROTOBUF_FINAL { return New(NULL); }

  ThemeOpLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ThemeOpLog& from);
  void MergeFrom(const ThemeOpLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ThemeOpLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required uint32 Key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ThemeOpLog)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 key_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModDescription : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModDescription) */ {
 public:
  ModDescription();
  virtual ~ModDescription();

  ModDescription(const ModDescription& from);

  inline ModDescription& operator=(const ModDescription& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModDescription& default_instance();

  static inline const ModDescription* internal_default_instance() {
    return reinterpret_cast<const ModDescription*>(
               &_ModDescription_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(ModDescription* other);

  // implements Message ----------------------------------------------

  inline ModDescription* New() const PROTOBUF_FINAL { return New(NULL); }

  ModDescription* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModDescription& from);
  void MergeFrom(const ModDescription& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModDescription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ContactUsername = 1;
  bool has_contactusername() const;
  void clear_contactusername();
  static const int kContactUsernameFieldNumber = 1;
  const ::std::string& contactusername() const;
  void set_contactusername(const ::std::string& value);
  #if LANG_CXX11
  void set_contactusername(::std::string&& value);
  #endif
  void set_contactusername(const char* value);
  void set_contactusername(const char* value, size_t size);
  ::std::string* mutable_contactusername();
  ::std::string* release_contactusername();
  void set_allocated_contactusername(::std::string* contactusername);

  // optional string Desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // @@protoc_insertion_point(class_scope:micromsg.ModDescription)
 private:
  void set_has_contactusername();
  void clear_has_contactusername();
  void set_has_desc();
  void clear_has_desc();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr contactusername_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OplogRet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.OplogRet) */ {
 public:
  OplogRet();
  virtual ~OplogRet();

  OplogRet(const OplogRet& from);

  inline OplogRet& operator=(const OplogRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OplogRet& default_instance();

  static inline const OplogRet* internal_default_instance() {
    return reinterpret_cast<const OplogRet*>(
               &_OplogRet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(OplogRet* other);

  // implements Message ----------------------------------------------

  inline OplogRet* New() const PROTOBUF_FINAL { return New(NULL); }

  OplogRet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OplogRet& from);
  void MergeFrom(const OplogRet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OplogRet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Ret = 2 [packed = true];
  int ret_size() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::google::protobuf::int32 ret(int index) const;
  void set_ret(int index, ::google::protobuf::int32 value);
  void add_ret(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ret() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ret();

  // required uint32 Count = 1;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.OplogRet)
 private:
  void set_has_count();
  void clear_has_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ret_;
  mutable int _ret_cached_byte_size_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OplogRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.OplogRequest) */ {
 public:
  OplogRequest();
  virtual ~OplogRequest();

  OplogRequest(const OplogRequest& from);

  inline OplogRequest& operator=(const OplogRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OplogRequest& default_instance();

  static inline const OplogRequest* internal_default_instance() {
    return reinterpret_cast<const OplogRequest*>(
               &_OplogRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(OplogRequest* other);

  // implements Message ----------------------------------------------

  inline OplogRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  OplogRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OplogRequest& from);
  void MergeFrom(const OplogRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OplogRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.CmdList Oplog = 1;
  bool has_oplog() const;
  void clear_oplog();
  static const int kOplogFieldNumber = 1;
  const ::micromsg::CmdList& oplog() const;
  ::micromsg::CmdList* mutable_oplog();
  ::micromsg::CmdList* release_oplog();
  void set_allocated_oplog(::micromsg::CmdList* oplog);

  // @@protoc_insertion_point(class_scope:micromsg.OplogRequest)
 private:
  void set_has_oplog();
  void clear_has_oplog();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::CmdList* oplog_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OplogResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.OplogResponse) */ {
 public:
  OplogResponse();
  virtual ~OplogResponse();

  OplogResponse(const OplogResponse& from);

  inline OplogResponse& operator=(const OplogResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OplogResponse& default_instance();

  static inline const OplogResponse* internal_default_instance() {
    return reinterpret_cast<const OplogResponse*>(
               &_OplogResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(OplogResponse* other);

  // implements Message ----------------------------------------------

  inline OplogResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  OplogResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OplogResponse& from);
  void MergeFrom(const OplogResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OplogResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.OplogRet OplogRet = 2;
  bool has_oplogret() const;
  void clear_oplogret();
  static const int kOplogRetFieldNumber = 2;
  const ::micromsg::OplogRet& oplogret() const;
  ::micromsg::OplogRet* mutable_oplogret();
  ::micromsg::OplogRet* release_oplogret();
  void set_allocated_oplogret(::micromsg::OplogRet* oplogret);

  // required int32 Ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.OplogResponse)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_oplogret();
  void clear_has_oplogret();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::OplogRet* oplogret_;
  ::google::protobuf::int32 ret_;
  friend struct protobuf_mmsync_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// InitBuffer

// required uint32 MaxSyncKey = 1;
inline bool InitBuffer::has_maxsynckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitBuffer::set_has_maxsynckey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitBuffer::clear_has_maxsynckey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitBuffer::clear_maxsynckey() {
  maxsynckey_ = 0u;
  clear_has_maxsynckey();
}
inline ::google::protobuf::uint32 InitBuffer::maxsynckey() const {
  // @@protoc_insertion_point(field_get:micromsg.InitBuffer.MaxSyncKey)
  return maxsynckey_;
}
inline void InitBuffer::set_maxsynckey(::google::protobuf::uint32 value) {
  set_has_maxsynckey();
  maxsynckey_ = value;
  // @@protoc_insertion_point(field_set:micromsg.InitBuffer.MaxSyncKey)
}

// -------------------------------------------------------------------

// InitRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool InitRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& InitRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.InitRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* InitRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.InitRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* InitRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.InitRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void InitRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.InitRequest.BaseRequest)
}

// required .micromsg.SKBuiltinString_t UserName = 2;
inline bool InitRequest::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InitRequest::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InitRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InitRequest::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& InitRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.InitRequest.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* InitRequest::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.InitRequest.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* InitRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.InitRequest.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void InitRequest::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.InitRequest.UserName)
}

// required uint32 SyncKey = 3;
inline bool InitRequest::has_synckey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InitRequest::set_has_synckey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InitRequest::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InitRequest::clear_synckey() {
  synckey_ = 0u;
  clear_has_synckey();
}
inline ::google::protobuf::uint32 InitRequest::synckey() const {
  // @@protoc_insertion_point(field_get:micromsg.InitRequest.SyncKey)
  return synckey_;
}
inline void InitRequest::set_synckey(::google::protobuf::uint32 value) {
  set_has_synckey();
  synckey_ = value;
  // @@protoc_insertion_point(field_set:micromsg.InitRequest.SyncKey)
}

// required .micromsg.SKBuiltinString_t Buffer = 4;
inline bool InitRequest::has_buffer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InitRequest::set_has_buffer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InitRequest::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InitRequest::clear_buffer() {
  if (buffer_ != NULL) buffer_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_buffer();
}
inline const ::micromsg::SKBuiltinString_t& InitRequest::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.InitRequest.Buffer)
  return buffer_ != NULL ? *buffer_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* InitRequest::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == NULL) {
    buffer_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.InitRequest.Buffer)
  return buffer_;
}
inline ::micromsg::SKBuiltinString_t* InitRequest::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.InitRequest.Buffer)
  clear_has_buffer();
  ::micromsg::SKBuiltinString_t* temp = buffer_;
  buffer_ = NULL;
  return temp;
}
inline void InitRequest::set_allocated_buffer(::micromsg::SKBuiltinString_t* buffer) {
  delete buffer_;
  buffer_ = buffer;
  if (buffer) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.InitRequest.Buffer)
}

// optional string Language = 5;
inline bool InitRequest::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitRequest::set_has_language() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitRequest::clear_has_language() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitRequest::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
inline const ::std::string& InitRequest::language() const {
  // @@protoc_insertion_point(field_get:micromsg.InitRequest.Language)
  return language_.GetNoArena();
}
inline void InitRequest::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.InitRequest.Language)
}
#if LANG_CXX11
inline void InitRequest::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.InitRequest.Language)
}
#endif
inline void InitRequest::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.InitRequest.Language)
}
inline void InitRequest::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.InitRequest.Language)
}
inline ::std::string* InitRequest::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:micromsg.InitRequest.Language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitRequest::release_language() {
  // @@protoc_insertion_point(field_release:micromsg.InitRequest.Language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitRequest::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:micromsg.InitRequest.Language)
}

// -------------------------------------------------------------------

// InitResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool InitResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& InitResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.InitResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* InitResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.InitResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* InitResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.InitResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void InitResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.InitResponse.BaseResponse)
}

// required uint32 NewSyncKey = 2;
inline bool InitResponse::has_newsynckey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InitResponse::set_has_newsynckey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InitResponse::clear_has_newsynckey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InitResponse::clear_newsynckey() {
  newsynckey_ = 0u;
  clear_has_newsynckey();
}
inline ::google::protobuf::uint32 InitResponse::newsynckey() const {
  // @@protoc_insertion_point(field_get:micromsg.InitResponse.NewSyncKey)
  return newsynckey_;
}
inline void InitResponse::set_newsynckey(::google::protobuf::uint32 value) {
  set_has_newsynckey();
  newsynckey_ = value;
  // @@protoc_insertion_point(field_set:micromsg.InitResponse.NewSyncKey)
}

// required int32 ContinueFlag = 3;
inline bool InitResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InitResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InitResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InitResponse::clear_continueflag() {
  continueflag_ = 0;
  clear_has_continueflag();
}
inline ::google::protobuf::int32 InitResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.InitResponse.ContinueFlag)
  return continueflag_;
}
inline void InitResponse::set_continueflag(::google::protobuf::int32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.InitResponse.ContinueFlag)
}

// required uint32 CmdCount = 4;
inline bool InitResponse::has_cmdcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InitResponse::set_has_cmdcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InitResponse::clear_has_cmdcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InitResponse::clear_cmdcount() {
  cmdcount_ = 0u;
  clear_has_cmdcount();
}
inline ::google::protobuf::uint32 InitResponse::cmdcount() const {
  // @@protoc_insertion_point(field_get:micromsg.InitResponse.CmdCount)
  return cmdcount_;
}
inline void InitResponse::set_cmdcount(::google::protobuf::uint32 value) {
  set_has_cmdcount();
  cmdcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.InitResponse.CmdCount)
}

// repeated .micromsg.CmdItem CmdList = 5;
inline int InitResponse::cmdlist_size() const {
  return cmdlist_.size();
}
inline void InitResponse::clear_cmdlist() {
  cmdlist_.Clear();
}
inline const ::micromsg::CmdItem& InitResponse::cmdlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.InitResponse.CmdList)
  return cmdlist_.Get(index);
}
inline ::micromsg::CmdItem* InitResponse::mutable_cmdlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.InitResponse.CmdList)
  return cmdlist_.Mutable(index);
}
inline ::micromsg::CmdItem* InitResponse::add_cmdlist() {
  // @@protoc_insertion_point(field_add:micromsg.InitResponse.CmdList)
  return cmdlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >*
InitResponse::mutable_cmdlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.InitResponse.CmdList)
  return &cmdlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >&
InitResponse::cmdlist() const {
  // @@protoc_insertion_point(field_list:micromsg.InitResponse.CmdList)
  return cmdlist_;
}

// required .micromsg.SKBuiltinString_t Buffer = 6;
inline bool InitResponse::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitResponse::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitResponse::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitResponse::clear_buffer() {
  if (buffer_ != NULL) buffer_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_buffer();
}
inline const ::micromsg::SKBuiltinString_t& InitResponse::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.InitResponse.Buffer)
  return buffer_ != NULL ? *buffer_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* InitResponse::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == NULL) {
    buffer_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.InitResponse.Buffer)
  return buffer_;
}
inline ::micromsg::SKBuiltinString_t* InitResponse::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.InitResponse.Buffer)
  clear_has_buffer();
  ::micromsg::SKBuiltinString_t* temp = buffer_;
  buffer_ = NULL;
  return temp;
}
inline void InitResponse::set_allocated_buffer(::micromsg::SKBuiltinString_t* buffer) {
  delete buffer_;
  buffer_ = buffer;
  if (buffer) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.InitResponse.Buffer)
}

// required uint32 Ratio = 7;
inline bool InitResponse::has_ratio() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InitResponse::set_has_ratio() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InitResponse::clear_has_ratio() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InitResponse::clear_ratio() {
  ratio_ = 0u;
  clear_has_ratio();
}
inline ::google::protobuf::uint32 InitResponse::ratio() const {
  // @@protoc_insertion_point(field_get:micromsg.InitResponse.Ratio)
  return ratio_;
}
inline void InitResponse::set_ratio(::google::protobuf::uint32 value) {
  set_has_ratio();
  ratio_ = value;
  // @@protoc_insertion_point(field_set:micromsg.InitResponse.Ratio)
}

// -------------------------------------------------------------------

// KeyBuffer

// required .micromsg.SKBuiltinString_t synckey = 1;
inline bool KeyBuffer::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyBuffer::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyBuffer::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyBuffer::clear_synckey() {
  if (synckey_ != NULL) synckey_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_synckey();
}
inline const ::micromsg::SKBuiltinString_t& KeyBuffer::synckey() const {
  // @@protoc_insertion_point(field_get:micromsg.KeyBuffer.synckey)
  return synckey_ != NULL ? *synckey_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* KeyBuffer::mutable_synckey() {
  set_has_synckey();
  if (synckey_ == NULL) {
    synckey_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.KeyBuffer.synckey)
  return synckey_;
}
inline ::micromsg::SKBuiltinString_t* KeyBuffer::release_synckey() {
  // @@protoc_insertion_point(field_release:micromsg.KeyBuffer.synckey)
  clear_has_synckey();
  ::micromsg::SKBuiltinString_t* temp = synckey_;
  synckey_ = NULL;
  return temp;
}
inline void KeyBuffer::set_allocated_synckey(::micromsg::SKBuiltinString_t* synckey) {
  delete synckey_;
  synckey_ = synckey;
  if (synckey) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.KeyBuffer.synckey)
}

// -------------------------------------------------------------------

// NewInitRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool NewInitRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewInitRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewInitRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewInitRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& NewInitRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* NewInitRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.NewInitRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* NewInitRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.NewInitRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void NewInitRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewInitRequest.BaseRequest)
}

// optional string UserName = 2;
inline bool NewInitRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewInitRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewInitRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewInitRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& NewInitRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitRequest.UserName)
  return username_.GetNoArena();
}
inline void NewInitRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.NewInitRequest.UserName)
}
#if LANG_CXX11
inline void NewInitRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.NewInitRequest.UserName)
}
#endif
inline void NewInitRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.NewInitRequest.UserName)
}
inline void NewInitRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.NewInitRequest.UserName)
}
inline ::std::string* NewInitRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.NewInitRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewInitRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.NewInitRequest.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewInitRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewInitRequest.UserName)
}

// required .micromsg.SKBuiltinBuffer_t CurrentSynckey = 3;
inline bool NewInitRequest::has_currentsynckey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewInitRequest::set_has_currentsynckey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewInitRequest::clear_has_currentsynckey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewInitRequest::clear_currentsynckey() {
  if (currentsynckey_ != NULL) currentsynckey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_currentsynckey();
}
inline const ::micromsg::SKBuiltinBuffer_t& NewInitRequest::currentsynckey() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitRequest.CurrentSynckey)
  return currentsynckey_ != NULL ? *currentsynckey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* NewInitRequest::mutable_currentsynckey() {
  set_has_currentsynckey();
  if (currentsynckey_ == NULL) {
    currentsynckey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.NewInitRequest.CurrentSynckey)
  return currentsynckey_;
}
inline ::micromsg::SKBuiltinBuffer_t* NewInitRequest::release_currentsynckey() {
  // @@protoc_insertion_point(field_release:micromsg.NewInitRequest.CurrentSynckey)
  clear_has_currentsynckey();
  ::micromsg::SKBuiltinBuffer_t* temp = currentsynckey_;
  currentsynckey_ = NULL;
  return temp;
}
inline void NewInitRequest::set_allocated_currentsynckey(::micromsg::SKBuiltinBuffer_t* currentsynckey) {
  delete currentsynckey_;
  currentsynckey_ = currentsynckey;
  if (currentsynckey) {
    set_has_currentsynckey();
  } else {
    clear_has_currentsynckey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewInitRequest.CurrentSynckey)
}

// required .micromsg.SKBuiltinBuffer_t MaxSynckey = 4;
inline bool NewInitRequest::has_maxsynckey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewInitRequest::set_has_maxsynckey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewInitRequest::clear_has_maxsynckey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewInitRequest::clear_maxsynckey() {
  if (maxsynckey_ != NULL) maxsynckey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_maxsynckey();
}
inline const ::micromsg::SKBuiltinBuffer_t& NewInitRequest::maxsynckey() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitRequest.MaxSynckey)
  return maxsynckey_ != NULL ? *maxsynckey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* NewInitRequest::mutable_maxsynckey() {
  set_has_maxsynckey();
  if (maxsynckey_ == NULL) {
    maxsynckey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.NewInitRequest.MaxSynckey)
  return maxsynckey_;
}
inline ::micromsg::SKBuiltinBuffer_t* NewInitRequest::release_maxsynckey() {
  // @@protoc_insertion_point(field_release:micromsg.NewInitRequest.MaxSynckey)
  clear_has_maxsynckey();
  ::micromsg::SKBuiltinBuffer_t* temp = maxsynckey_;
  maxsynckey_ = NULL;
  return temp;
}
inline void NewInitRequest::set_allocated_maxsynckey(::micromsg::SKBuiltinBuffer_t* maxsynckey) {
  delete maxsynckey_;
  maxsynckey_ = maxsynckey;
  if (maxsynckey) {
    set_has_maxsynckey();
  } else {
    clear_has_maxsynckey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewInitRequest.MaxSynckey)
}

// optional string Language = 5;
inline bool NewInitRequest::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewInitRequest::set_has_language() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewInitRequest::clear_has_language() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewInitRequest::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
inline const ::std::string& NewInitRequest::language() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitRequest.Language)
  return language_.GetNoArena();
}
inline void NewInitRequest::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.NewInitRequest.Language)
}
#if LANG_CXX11
inline void NewInitRequest::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.NewInitRequest.Language)
}
#endif
inline void NewInitRequest::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.NewInitRequest.Language)
}
inline void NewInitRequest::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.NewInitRequest.Language)
}
inline ::std::string* NewInitRequest::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:micromsg.NewInitRequest.Language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewInitRequest::release_language() {
  // @@protoc_insertion_point(field_release:micromsg.NewInitRequest.Language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewInitRequest::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewInitRequest.Language)
}

// -------------------------------------------------------------------

// NewInitResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool NewInitResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewInitResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewInitResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewInitResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& NewInitResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* NewInitResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.NewInitResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* NewInitResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.NewInitResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void NewInitResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewInitResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t CurrentSynckey = 2;
inline bool NewInitResponse::has_currentsynckey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewInitResponse::set_has_currentsynckey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewInitResponse::clear_has_currentsynckey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewInitResponse::clear_currentsynckey() {
  if (currentsynckey_ != NULL) currentsynckey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_currentsynckey();
}
inline const ::micromsg::SKBuiltinBuffer_t& NewInitResponse::currentsynckey() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitResponse.CurrentSynckey)
  return currentsynckey_ != NULL ? *currentsynckey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* NewInitResponse::mutable_currentsynckey() {
  set_has_currentsynckey();
  if (currentsynckey_ == NULL) {
    currentsynckey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.NewInitResponse.CurrentSynckey)
  return currentsynckey_;
}
inline ::micromsg::SKBuiltinBuffer_t* NewInitResponse::release_currentsynckey() {
  // @@protoc_insertion_point(field_release:micromsg.NewInitResponse.CurrentSynckey)
  clear_has_currentsynckey();
  ::micromsg::SKBuiltinBuffer_t* temp = currentsynckey_;
  currentsynckey_ = NULL;
  return temp;
}
inline void NewInitResponse::set_allocated_currentsynckey(::micromsg::SKBuiltinBuffer_t* currentsynckey) {
  delete currentsynckey_;
  currentsynckey_ = currentsynckey;
  if (currentsynckey) {
    set_has_currentsynckey();
  } else {
    clear_has_currentsynckey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewInitResponse.CurrentSynckey)
}

// required .micromsg.SKBuiltinBuffer_t MaxSynckey = 3;
inline bool NewInitResponse::has_maxsynckey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewInitResponse::set_has_maxsynckey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewInitResponse::clear_has_maxsynckey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewInitResponse::clear_maxsynckey() {
  if (maxsynckey_ != NULL) maxsynckey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_maxsynckey();
}
inline const ::micromsg::SKBuiltinBuffer_t& NewInitResponse::maxsynckey() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitResponse.MaxSynckey)
  return maxsynckey_ != NULL ? *maxsynckey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* NewInitResponse::mutable_maxsynckey() {
  set_has_maxsynckey();
  if (maxsynckey_ == NULL) {
    maxsynckey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.NewInitResponse.MaxSynckey)
  return maxsynckey_;
}
inline ::micromsg::SKBuiltinBuffer_t* NewInitResponse::release_maxsynckey() {
  // @@protoc_insertion_point(field_release:micromsg.NewInitResponse.MaxSynckey)
  clear_has_maxsynckey();
  ::micromsg::SKBuiltinBuffer_t* temp = maxsynckey_;
  maxsynckey_ = NULL;
  return temp;
}
inline void NewInitResponse::set_allocated_maxsynckey(::micromsg::SKBuiltinBuffer_t* maxsynckey) {
  delete maxsynckey_;
  maxsynckey_ = maxsynckey;
  if (maxsynckey) {
    set_has_maxsynckey();
  } else {
    clear_has_maxsynckey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewInitResponse.MaxSynckey)
}

// required uint32 ContinueFlag = 4;
inline bool NewInitResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewInitResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewInitResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewInitResponse::clear_continueflag() {
  continueflag_ = 0u;
  clear_has_continueflag();
}
inline ::google::protobuf::uint32 NewInitResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitResponse.ContinueFlag)
  return continueflag_;
}
inline void NewInitResponse::set_continueflag(::google::protobuf::uint32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewInitResponse.ContinueFlag)
}

// required uint32 SelectBitmap = 5;
inline bool NewInitResponse::has_selectbitmap() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewInitResponse::set_has_selectbitmap() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewInitResponse::clear_has_selectbitmap() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewInitResponse::clear_selectbitmap() {
  selectbitmap_ = 0u;
  clear_has_selectbitmap();
}
inline ::google::protobuf::uint32 NewInitResponse::selectbitmap() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitResponse.SelectBitmap)
  return selectbitmap_;
}
inline void NewInitResponse::set_selectbitmap(::google::protobuf::uint32 value) {
  set_has_selectbitmap();
  selectbitmap_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewInitResponse.SelectBitmap)
}

// required uint32 CmdCount = 6;
inline bool NewInitResponse::has_cmdcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NewInitResponse::set_has_cmdcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NewInitResponse::clear_has_cmdcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NewInitResponse::clear_cmdcount() {
  cmdcount_ = 0u;
  clear_has_cmdcount();
}
inline ::google::protobuf::uint32 NewInitResponse::cmdcount() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitResponse.CmdCount)
  return cmdcount_;
}
inline void NewInitResponse::set_cmdcount(::google::protobuf::uint32 value) {
  set_has_cmdcount();
  cmdcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewInitResponse.CmdCount)
}

// repeated .micromsg.CmdItem CmdList = 7;
inline int NewInitResponse::cmdlist_size() const {
  return cmdlist_.size();
}
inline void NewInitResponse::clear_cmdlist() {
  cmdlist_.Clear();
}
inline const ::micromsg::CmdItem& NewInitResponse::cmdlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitResponse.CmdList)
  return cmdlist_.Get(index);
}
inline ::micromsg::CmdItem* NewInitResponse::mutable_cmdlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.NewInitResponse.CmdList)
  return cmdlist_.Mutable(index);
}
inline ::micromsg::CmdItem* NewInitResponse::add_cmdlist() {
  // @@protoc_insertion_point(field_add:micromsg.NewInitResponse.CmdList)
  return cmdlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >*
NewInitResponse::mutable_cmdlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.NewInitResponse.CmdList)
  return &cmdlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >&
NewInitResponse::cmdlist() const {
  // @@protoc_insertion_point(field_list:micromsg.NewInitResponse.CmdList)
  return cmdlist_;
}

// required uint32 Ratio = 8;
inline bool NewInitResponse::has_ratio() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NewInitResponse::set_has_ratio() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NewInitResponse::clear_has_ratio() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NewInitResponse::clear_ratio() {
  ratio_ = 0u;
  clear_has_ratio();
}
inline ::google::protobuf::uint32 NewInitResponse::ratio() const {
  // @@protoc_insertion_point(field_get:micromsg.NewInitResponse.Ratio)
  return ratio_;
}
inline void NewInitResponse::set_ratio(::google::protobuf::uint32 value) {
  set_has_ratio();
  ratio_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewInitResponse.Ratio)
}

// -------------------------------------------------------------------

// SyncRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SyncRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SyncRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SyncRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SyncRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SyncRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SyncRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SyncRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SyncRequest.BaseRequest)
}

// required .micromsg.SKBuiltinString_t UserName = 2;
inline bool SyncRequest::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncRequest::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncRequest::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& SyncRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncRequest.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* SyncRequest::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SyncRequest.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* SyncRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.SyncRequest.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void SyncRequest::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SyncRequest.UserName)
}

// required uint32 SyncKey = 3;
inline bool SyncRequest::has_synckey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SyncRequest::set_has_synckey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SyncRequest::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SyncRequest::clear_synckey() {
  synckey_ = 0u;
  clear_has_synckey();
}
inline ::google::protobuf::uint32 SyncRequest::synckey() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncRequest.SyncKey)
  return synckey_;
}
inline void SyncRequest::set_synckey(::google::protobuf::uint32 value) {
  set_has_synckey();
  synckey_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncRequest.SyncKey)
}

// required int32 Scene = 4;
inline bool SyncRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SyncRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SyncRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SyncRequest::clear_scene() {
  scene_ = 0;
  clear_has_scene();
}
inline ::google::protobuf::int32 SyncRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncRequest.Scene)
  return scene_;
}
inline void SyncRequest::set_scene(::google::protobuf::int32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncRequest.Scene)
}

// required int32 Option = 5;
inline bool SyncRequest::has_option() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SyncRequest::set_has_option() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SyncRequest::clear_has_option() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SyncRequest::clear_option() {
  option_ = 0;
  clear_has_option();
}
inline ::google::protobuf::int32 SyncRequest::option() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncRequest.Option)
  return option_;
}
inline void SyncRequest::set_option(::google::protobuf::int32 value) {
  set_has_option();
  option_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncRequest.Option)
}

// required .micromsg.CmdList Oplog = 6;
inline bool SyncRequest::has_oplog() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncRequest::set_has_oplog() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncRequest::clear_has_oplog() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncRequest::clear_oplog() {
  if (oplog_ != NULL) oplog_->::micromsg::CmdList::Clear();
  clear_has_oplog();
}
inline const ::micromsg::CmdList& SyncRequest::oplog() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncRequest.Oplog)
  return oplog_ != NULL ? *oplog_
                         : *::micromsg::CmdList::internal_default_instance();
}
inline ::micromsg::CmdList* SyncRequest::mutable_oplog() {
  set_has_oplog();
  if (oplog_ == NULL) {
    oplog_ = new ::micromsg::CmdList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SyncRequest.Oplog)
  return oplog_;
}
inline ::micromsg::CmdList* SyncRequest::release_oplog() {
  // @@protoc_insertion_point(field_release:micromsg.SyncRequest.Oplog)
  clear_has_oplog();
  ::micromsg::CmdList* temp = oplog_;
  oplog_ = NULL;
  return temp;
}
inline void SyncRequest::set_allocated_oplog(::micromsg::CmdList* oplog) {
  delete oplog_;
  oplog_ = oplog;
  if (oplog) {
    set_has_oplog();
  } else {
    clear_has_oplog();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SyncRequest.Oplog)
}

// optional string KeyBuf = 7;
inline bool SyncRequest::has_keybuf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncRequest::set_has_keybuf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncRequest::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncRequest::clear_keybuf() {
  keybuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keybuf();
}
inline const ::std::string& SyncRequest::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncRequest.KeyBuf)
  return keybuf_.GetNoArena();
}
inline void SyncRequest::set_keybuf(const ::std::string& value) {
  set_has_keybuf();
  keybuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SyncRequest.KeyBuf)
}
#if LANG_CXX11
inline void SyncRequest::set_keybuf(::std::string&& value) {
  set_has_keybuf();
  keybuf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SyncRequest.KeyBuf)
}
#endif
inline void SyncRequest::set_keybuf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keybuf();
  keybuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SyncRequest.KeyBuf)
}
inline void SyncRequest::set_keybuf(const char* value, size_t size) {
  set_has_keybuf();
  keybuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SyncRequest.KeyBuf)
}
inline ::std::string* SyncRequest::mutable_keybuf() {
  set_has_keybuf();
  // @@protoc_insertion_point(field_mutable:micromsg.SyncRequest.KeyBuf)
  return keybuf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncRequest::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.SyncRequest.KeyBuf)
  clear_has_keybuf();
  return keybuf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncRequest::set_allocated_keybuf(::std::string* keybuf) {
  if (keybuf != NULL) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  keybuf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keybuf);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SyncRequest.KeyBuf)
}

// -------------------------------------------------------------------

// SyncResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SyncResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SyncResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SyncResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SyncResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SyncResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SyncResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SyncResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SyncResponse.BaseResponse)
}

// required uint32 NewSyncKey = 2;
inline bool SyncResponse::has_newsynckey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncResponse::set_has_newsynckey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncResponse::clear_has_newsynckey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncResponse::clear_newsynckey() {
  newsynckey_ = 0u;
  clear_has_newsynckey();
}
inline ::google::protobuf::uint32 SyncResponse::newsynckey() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncResponse.NewSyncKey)
  return newsynckey_;
}
inline void SyncResponse::set_newsynckey(::google::protobuf::uint32 value) {
  set_has_newsynckey();
  newsynckey_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncResponse.NewSyncKey)
}

// required int32 ContinueFlag = 3;
inline bool SyncResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncResponse::clear_continueflag() {
  continueflag_ = 0;
  clear_has_continueflag();
}
inline ::google::protobuf::int32 SyncResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncResponse.ContinueFlag)
  return continueflag_;
}
inline void SyncResponse::set_continueflag(::google::protobuf::int32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncResponse.ContinueFlag)
}

// required uint32 CmdCount = 4;
inline bool SyncResponse::has_cmdcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SyncResponse::set_has_cmdcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SyncResponse::clear_has_cmdcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SyncResponse::clear_cmdcount() {
  cmdcount_ = 0u;
  clear_has_cmdcount();
}
inline ::google::protobuf::uint32 SyncResponse::cmdcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncResponse.CmdCount)
  return cmdcount_;
}
inline void SyncResponse::set_cmdcount(::google::protobuf::uint32 value) {
  set_has_cmdcount();
  cmdcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncResponse.CmdCount)
}

// repeated .micromsg.CmdItem CmdList = 5;
inline int SyncResponse::cmdlist_size() const {
  return cmdlist_.size();
}
inline void SyncResponse::clear_cmdlist() {
  cmdlist_.Clear();
}
inline const ::micromsg::CmdItem& SyncResponse::cmdlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SyncResponse.CmdList)
  return cmdlist_.Get(index);
}
inline ::micromsg::CmdItem* SyncResponse::mutable_cmdlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SyncResponse.CmdList)
  return cmdlist_.Mutable(index);
}
inline ::micromsg::CmdItem* SyncResponse::add_cmdlist() {
  // @@protoc_insertion_point(field_add:micromsg.SyncResponse.CmdList)
  return cmdlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >*
SyncResponse::mutable_cmdlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SyncResponse.CmdList)
  return &cmdlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >&
SyncResponse::cmdlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SyncResponse.CmdList)
  return cmdlist_;
}

// required uint32 OOBCount = 6;
inline bool SyncResponse::has_oobcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SyncResponse::set_has_oobcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SyncResponse::clear_has_oobcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SyncResponse::clear_oobcount() {
  oobcount_ = 0u;
  clear_has_oobcount();
}
inline ::google::protobuf::uint32 SyncResponse::oobcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncResponse.OOBCount)
  return oobcount_;
}
inline void SyncResponse::set_oobcount(::google::protobuf::uint32 value) {
  set_has_oobcount();
  oobcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncResponse.OOBCount)
}

// repeated .micromsg.CmdItem OOBList = 7;
inline int SyncResponse::ooblist_size() const {
  return ooblist_.size();
}
inline void SyncResponse::clear_ooblist() {
  ooblist_.Clear();
}
inline const ::micromsg::CmdItem& SyncResponse::ooblist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SyncResponse.OOBList)
  return ooblist_.Get(index);
}
inline ::micromsg::CmdItem* SyncResponse::mutable_ooblist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SyncResponse.OOBList)
  return ooblist_.Mutable(index);
}
inline ::micromsg::CmdItem* SyncResponse::add_ooblist() {
  // @@protoc_insertion_point(field_add:micromsg.SyncResponse.OOBList)
  return ooblist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >*
SyncResponse::mutable_ooblist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SyncResponse.OOBList)
  return &ooblist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >&
SyncResponse::ooblist() const {
  // @@protoc_insertion_point(field_list:micromsg.SyncResponse.OOBList)
  return ooblist_;
}

// optional string KeyBuf = 8;
inline bool SyncResponse::has_keybuf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncResponse::set_has_keybuf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncResponse::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncResponse::clear_keybuf() {
  keybuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keybuf();
}
inline const ::std::string& SyncResponse::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncResponse.KeyBuf)
  return keybuf_.GetNoArena();
}
inline void SyncResponse::set_keybuf(const ::std::string& value) {
  set_has_keybuf();
  keybuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SyncResponse.KeyBuf)
}
#if LANG_CXX11
inline void SyncResponse::set_keybuf(::std::string&& value) {
  set_has_keybuf();
  keybuf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SyncResponse.KeyBuf)
}
#endif
inline void SyncResponse::set_keybuf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keybuf();
  keybuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SyncResponse.KeyBuf)
}
inline void SyncResponse::set_keybuf(const char* value, size_t size) {
  set_has_keybuf();
  keybuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SyncResponse.KeyBuf)
}
inline ::std::string* SyncResponse::mutable_keybuf() {
  set_has_keybuf();
  // @@protoc_insertion_point(field_mutable:micromsg.SyncResponse.KeyBuf)
  return keybuf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncResponse::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.SyncResponse.KeyBuf)
  clear_has_keybuf();
  return keybuf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncResponse::set_allocated_keybuf(::std::string* keybuf) {
  if (keybuf != NULL) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  keybuf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keybuf);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SyncResponse.KeyBuf)
}

// -------------------------------------------------------------------

// KeyVal

// required uint32 Key = 1;
inline bool KeyVal::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyVal::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyVal::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyVal::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 KeyVal::key() const {
  // @@protoc_insertion_point(field_get:micromsg.KeyVal.Key)
  return key_;
}
inline void KeyVal::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:micromsg.KeyVal.Key)
}

// required uint32 Val = 2;
inline bool KeyVal::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyVal::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyVal::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyVal::clear_val() {
  val_ = 0u;
  clear_has_val();
}
inline ::google::protobuf::uint32 KeyVal::val() const {
  // @@protoc_insertion_point(field_get:micromsg.KeyVal.Val)
  return val_;
}
inline void KeyVal::set_val(::google::protobuf::uint32 value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:micromsg.KeyVal.Val)
}

// -------------------------------------------------------------------

// SyncKey

// required uint32 KeyCount = 1;
inline bool SyncKey::has_keycount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncKey::set_has_keycount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncKey::clear_has_keycount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncKey::clear_keycount() {
  keycount_ = 0u;
  clear_has_keycount();
}
inline ::google::protobuf::uint32 SyncKey::keycount() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncKey.KeyCount)
  return keycount_;
}
inline void SyncKey::set_keycount(::google::protobuf::uint32 value) {
  set_has_keycount();
  keycount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncKey.KeyCount)
}

// repeated .micromsg.KeyVal Key = 2;
inline int SyncKey::key_size() const {
  return key_.size();
}
inline void SyncKey::clear_key() {
  key_.Clear();
}
inline const ::micromsg::KeyVal& SyncKey::key(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SyncKey.Key)
  return key_.Get(index);
}
inline ::micromsg::KeyVal* SyncKey::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SyncKey.Key)
  return key_.Mutable(index);
}
inline ::micromsg::KeyVal* SyncKey::add_key() {
  // @@protoc_insertion_point(field_add:micromsg.SyncKey.Key)
  return key_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::KeyVal >*
SyncKey::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SyncKey.Key)
  return &key_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::KeyVal >&
SyncKey::key() const {
  // @@protoc_insertion_point(field_list:micromsg.SyncKey.Key)
  return key_;
}

// -------------------------------------------------------------------

// NewSyncRequest

// required .micromsg.CmdList Oplog = 1;
inline bool NewSyncRequest::has_oplog() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewSyncRequest::set_has_oplog() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewSyncRequest::clear_has_oplog() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewSyncRequest::clear_oplog() {
  if (oplog_ != NULL) oplog_->::micromsg::CmdList::Clear();
  clear_has_oplog();
}
inline const ::micromsg::CmdList& NewSyncRequest::oplog() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncRequest.Oplog)
  return oplog_ != NULL ? *oplog_
                         : *::micromsg::CmdList::internal_default_instance();
}
inline ::micromsg::CmdList* NewSyncRequest::mutable_oplog() {
  set_has_oplog();
  if (oplog_ == NULL) {
    oplog_ = new ::micromsg::CmdList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.NewSyncRequest.Oplog)
  return oplog_;
}
inline ::micromsg::CmdList* NewSyncRequest::release_oplog() {
  // @@protoc_insertion_point(field_release:micromsg.NewSyncRequest.Oplog)
  clear_has_oplog();
  ::micromsg::CmdList* temp = oplog_;
  oplog_ = NULL;
  return temp;
}
inline void NewSyncRequest::set_allocated_oplog(::micromsg::CmdList* oplog) {
  delete oplog_;
  oplog_ = oplog;
  if (oplog) {
    set_has_oplog();
  } else {
    clear_has_oplog();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewSyncRequest.Oplog)
}

// required uint32 Selector = 2;
inline bool NewSyncRequest::has_selector() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewSyncRequest::set_has_selector() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewSyncRequest::clear_has_selector() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewSyncRequest::clear_selector() {
  selector_ = 0u;
  clear_has_selector();
}
inline ::google::protobuf::uint32 NewSyncRequest::selector() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncRequest.Selector)
  return selector_;
}
inline void NewSyncRequest::set_selector(::google::protobuf::uint32 value) {
  set_has_selector();
  selector_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewSyncRequest.Selector)
}

// required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
inline bool NewSyncRequest::has_keybuf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewSyncRequest::set_has_keybuf() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewSyncRequest::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewSyncRequest::clear_keybuf() {
  if (keybuf_ != NULL) keybuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& NewSyncRequest::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncRequest.KeyBuf)
  return keybuf_ != NULL ? *keybuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* NewSyncRequest::mutable_keybuf() {
  set_has_keybuf();
  if (keybuf_ == NULL) {
    keybuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.NewSyncRequest.KeyBuf)
  return keybuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* NewSyncRequest::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.NewSyncRequest.KeyBuf)
  clear_has_keybuf();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuf_;
  keybuf_ = NULL;
  return temp;
}
inline void NewSyncRequest::set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf) {
  delete keybuf_;
  keybuf_ = keybuf;
  if (keybuf) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewSyncRequest.KeyBuf)
}

// optional uint32 Scene = 4;
inline bool NewSyncRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewSyncRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewSyncRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewSyncRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 NewSyncRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncRequest.Scene)
  return scene_;
}
inline void NewSyncRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewSyncRequest.Scene)
}

// optional string DeviceType = 5;
inline bool NewSyncRequest::has_devicetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncRequest::set_has_devicetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncRequest::clear_has_devicetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncRequest::clear_devicetype() {
  devicetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicetype();
}
inline const ::std::string& NewSyncRequest::devicetype() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncRequest.DeviceType)
  return devicetype_.GetNoArena();
}
inline void NewSyncRequest::set_devicetype(const ::std::string& value) {
  set_has_devicetype();
  devicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.NewSyncRequest.DeviceType)
}
#if LANG_CXX11
inline void NewSyncRequest::set_devicetype(::std::string&& value) {
  set_has_devicetype();
  devicetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.NewSyncRequest.DeviceType)
}
#endif
inline void NewSyncRequest::set_devicetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicetype();
  devicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.NewSyncRequest.DeviceType)
}
inline void NewSyncRequest::set_devicetype(const char* value, size_t size) {
  set_has_devicetype();
  devicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.NewSyncRequest.DeviceType)
}
inline ::std::string* NewSyncRequest::mutable_devicetype() {
  set_has_devicetype();
  // @@protoc_insertion_point(field_mutable:micromsg.NewSyncRequest.DeviceType)
  return devicetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewSyncRequest::release_devicetype() {
  // @@protoc_insertion_point(field_release:micromsg.NewSyncRequest.DeviceType)
  clear_has_devicetype();
  return devicetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewSyncRequest::set_allocated_devicetype(::std::string* devicetype) {
  if (devicetype != NULL) {
    set_has_devicetype();
  } else {
    clear_has_devicetype();
  }
  devicetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicetype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewSyncRequest.DeviceType)
}

// -------------------------------------------------------------------

// NewSyncResponse

// required int32 Ret = 1;
inline bool NewSyncResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewSyncResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewSyncResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewSyncResponse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 NewSyncResponse::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncResponse.Ret)
  return ret_;
}
inline void NewSyncResponse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewSyncResponse.Ret)
}

// required .micromsg.CmdList CmdList = 2;
inline bool NewSyncResponse::has_cmdlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncResponse::set_has_cmdlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncResponse::clear_has_cmdlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncResponse::clear_cmdlist() {
  if (cmdlist_ != NULL) cmdlist_->::micromsg::CmdList::Clear();
  clear_has_cmdlist();
}
inline const ::micromsg::CmdList& NewSyncResponse::cmdlist() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncResponse.CmdList)
  return cmdlist_ != NULL ? *cmdlist_
                         : *::micromsg::CmdList::internal_default_instance();
}
inline ::micromsg::CmdList* NewSyncResponse::mutable_cmdlist() {
  set_has_cmdlist();
  if (cmdlist_ == NULL) {
    cmdlist_ = new ::micromsg::CmdList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.NewSyncResponse.CmdList)
  return cmdlist_;
}
inline ::micromsg::CmdList* NewSyncResponse::release_cmdlist() {
  // @@protoc_insertion_point(field_release:micromsg.NewSyncResponse.CmdList)
  clear_has_cmdlist();
  ::micromsg::CmdList* temp = cmdlist_;
  cmdlist_ = NULL;
  return temp;
}
inline void NewSyncResponse::set_allocated_cmdlist(::micromsg::CmdList* cmdlist) {
  delete cmdlist_;
  cmdlist_ = cmdlist;
  if (cmdlist) {
    set_has_cmdlist();
  } else {
    clear_has_cmdlist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewSyncResponse.CmdList)
}

// required uint32 ContinueFlag = 3;
inline bool NewSyncResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewSyncResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewSyncResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewSyncResponse::clear_continueflag() {
  continueflag_ = 0u;
  clear_has_continueflag();
}
inline ::google::protobuf::uint32 NewSyncResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncResponse.ContinueFlag)
  return continueflag_;
}
inline void NewSyncResponse::set_continueflag(::google::protobuf::uint32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewSyncResponse.ContinueFlag)
}

// required .micromsg.SKBuiltinBuffer_t KeyBuf = 4;
inline bool NewSyncResponse::has_keybuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewSyncResponse::set_has_keybuf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewSyncResponse::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewSyncResponse::clear_keybuf() {
  if (keybuf_ != NULL) keybuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& NewSyncResponse::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncResponse.KeyBuf)
  return keybuf_ != NULL ? *keybuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* NewSyncResponse::mutable_keybuf() {
  set_has_keybuf();
  if (keybuf_ == NULL) {
    keybuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.NewSyncResponse.KeyBuf)
  return keybuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* NewSyncResponse::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.NewSyncResponse.KeyBuf)
  clear_has_keybuf();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuf_;
  keybuf_ = NULL;
  return temp;
}
inline void NewSyncResponse::set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf) {
  delete keybuf_;
  keybuf_ = keybuf;
  if (keybuf) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewSyncResponse.KeyBuf)
}

// optional uint32 Status = 5;
inline bool NewSyncResponse::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewSyncResponse::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewSyncResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewSyncResponse::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 NewSyncResponse::status() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncResponse.Status)
  return status_;
}
inline void NewSyncResponse::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewSyncResponse.Status)
}

// optional uint32 OnlineVersion = 6;
inline bool NewSyncResponse::has_onlineversion() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NewSyncResponse::set_has_onlineversion() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NewSyncResponse::clear_has_onlineversion() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NewSyncResponse::clear_onlineversion() {
  onlineversion_ = 0u;
  clear_has_onlineversion();
}
inline ::google::protobuf::uint32 NewSyncResponse::onlineversion() const {
  // @@protoc_insertion_point(field_get:micromsg.NewSyncResponse.OnlineVersion)
  return onlineversion_;
}
inline void NewSyncResponse::set_onlineversion(::google::protobuf::uint32 value) {
  set_has_onlineversion();
  onlineversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewSyncResponse.OnlineVersion)
}

// -------------------------------------------------------------------

// SyncFriendRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SyncFriendRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncFriendRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncFriendRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncFriendRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SyncFriendRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncFriendRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SyncFriendRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SyncFriendRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SyncFriendRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SyncFriendRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SyncFriendRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SyncFriendRequest.BaseRequest)
}

// required .micromsg.SKBuiltinString_t UserName = 2;
inline bool SyncFriendRequest::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncFriendRequest::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncFriendRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncFriendRequest::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& SyncFriendRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncFriendRequest.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* SyncFriendRequest::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SyncFriendRequest.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* SyncFriendRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.SyncFriendRequest.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void SyncFriendRequest::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SyncFriendRequest.UserName)
}

// required uint32 SyncKey = 3;
inline bool SyncFriendRequest::has_synckey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncFriendRequest::set_has_synckey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncFriendRequest::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncFriendRequest::clear_synckey() {
  synckey_ = 0u;
  clear_has_synckey();
}
inline ::google::protobuf::uint32 SyncFriendRequest::synckey() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncFriendRequest.SyncKey)
  return synckey_;
}
inline void SyncFriendRequest::set_synckey(::google::protobuf::uint32 value) {
  set_has_synckey();
  synckey_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncFriendRequest.SyncKey)
}

// required int32 Scene = 4;
inline bool SyncFriendRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncFriendRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncFriendRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncFriendRequest::clear_scene() {
  scene_ = 0;
  clear_has_scene();
}
inline ::google::protobuf::int32 SyncFriendRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncFriendRequest.Scene)
  return scene_;
}
inline void SyncFriendRequest::set_scene(::google::protobuf::int32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncFriendRequest.Scene)
}

// -------------------------------------------------------------------

// SyncFriendResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SyncFriendResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncFriendResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncFriendResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncFriendResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SyncFriendResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncFriendResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SyncFriendResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SyncFriendResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SyncFriendResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SyncFriendResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SyncFriendResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SyncFriendResponse.BaseResponse)
}

// required uint32 NewSyncKey = 2;
inline bool SyncFriendResponse::has_newsynckey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncFriendResponse::set_has_newsynckey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncFriendResponse::clear_has_newsynckey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncFriendResponse::clear_newsynckey() {
  newsynckey_ = 0u;
  clear_has_newsynckey();
}
inline ::google::protobuf::uint32 SyncFriendResponse::newsynckey() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncFriendResponse.NewSyncKey)
  return newsynckey_;
}
inline void SyncFriendResponse::set_newsynckey(::google::protobuf::uint32 value) {
  set_has_newsynckey();
  newsynckey_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncFriendResponse.NewSyncKey)
}

// required int32 ContinueFlag = 3;
inline bool SyncFriendResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncFriendResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncFriendResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncFriendResponse::clear_continueflag() {
  continueflag_ = 0;
  clear_has_continueflag();
}
inline ::google::protobuf::int32 SyncFriendResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncFriendResponse.ContinueFlag)
  return continueflag_;
}
inline void SyncFriendResponse::set_continueflag(::google::protobuf::int32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncFriendResponse.ContinueFlag)
}

// required uint32 CmdCount = 4;
inline bool SyncFriendResponse::has_cmdcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncFriendResponse::set_has_cmdcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncFriendResponse::clear_has_cmdcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncFriendResponse::clear_cmdcount() {
  cmdcount_ = 0u;
  clear_has_cmdcount();
}
inline ::google::protobuf::uint32 SyncFriendResponse::cmdcount() const {
  // @@protoc_insertion_point(field_get:micromsg.SyncFriendResponse.CmdCount)
  return cmdcount_;
}
inline void SyncFriendResponse::set_cmdcount(::google::protobuf::uint32 value) {
  set_has_cmdcount();
  cmdcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SyncFriendResponse.CmdCount)
}

// repeated .micromsg.CmdItem CmdList = 5;
inline int SyncFriendResponse::cmdlist_size() const {
  return cmdlist_.size();
}
inline void SyncFriendResponse::clear_cmdlist() {
  cmdlist_.Clear();
}
inline const ::micromsg::CmdItem& SyncFriendResponse::cmdlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SyncFriendResponse.CmdList)
  return cmdlist_.Get(index);
}
inline ::micromsg::CmdItem* SyncFriendResponse::mutable_cmdlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SyncFriendResponse.CmdList)
  return cmdlist_.Mutable(index);
}
inline ::micromsg::CmdItem* SyncFriendResponse::add_cmdlist() {
  // @@protoc_insertion_point(field_add:micromsg.SyncFriendResponse.CmdList)
  return cmdlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >*
SyncFriendResponse::mutable_cmdlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SyncFriendResponse.CmdList)
  return &cmdlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::CmdItem >&
SyncFriendResponse::cmdlist() const {
  // @@protoc_insertion_point(field_list:micromsg.SyncFriendResponse.CmdList)
  return cmdlist_;
}

// -------------------------------------------------------------------

// OpenQQMicroBlog

// required .micromsg.SKBuiltinString_t MicroBlogUserName = 1;
inline bool OpenQQMicroBlog::has_microblogusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenQQMicroBlog::set_has_microblogusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenQQMicroBlog::clear_has_microblogusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenQQMicroBlog::clear_microblogusername() {
  if (microblogusername_ != NULL) microblogusername_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_microblogusername();
}
inline const ::micromsg::SKBuiltinString_t& OpenQQMicroBlog::microblogusername() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenQQMicroBlog.MicroBlogUserName)
  return microblogusername_ != NULL ? *microblogusername_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* OpenQQMicroBlog::mutable_microblogusername() {
  set_has_microblogusername();
  if (microblogusername_ == NULL) {
    microblogusername_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.OpenQQMicroBlog.MicroBlogUserName)
  return microblogusername_;
}
inline ::micromsg::SKBuiltinString_t* OpenQQMicroBlog::release_microblogusername() {
  // @@protoc_insertion_point(field_release:micromsg.OpenQQMicroBlog.MicroBlogUserName)
  clear_has_microblogusername();
  ::micromsg::SKBuiltinString_t* temp = microblogusername_;
  microblogusername_ = NULL;
  return temp;
}
inline void OpenQQMicroBlog::set_allocated_microblogusername(::micromsg::SKBuiltinString_t* microblogusername) {
  delete microblogusername_;
  microblogusername_ = microblogusername;
  if (microblogusername) {
    set_has_microblogusername();
  } else {
    clear_has_microblogusername();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenQQMicroBlog.MicroBlogUserName)
}

// -------------------------------------------------------------------

// ModChatRoomNotify

// required .micromsg.SKBuiltinString_t ChatRoomName = 1;
inline bool ModChatRoomNotify::has_chatroomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModChatRoomNotify::set_has_chatroomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModChatRoomNotify::clear_has_chatroomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModChatRoomNotify::clear_chatroomname() {
  if (chatroomname_ != NULL) chatroomname_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_chatroomname();
}
inline const ::micromsg::SKBuiltinString_t& ModChatRoomNotify::chatroomname() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomNotify.ChatRoomName)
  return chatroomname_ != NULL ? *chatroomname_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomNotify::mutable_chatroomname() {
  set_has_chatroomname();
  if (chatroomname_ == NULL) {
    chatroomname_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomNotify.ChatRoomName)
  return chatroomname_;
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomNotify::release_chatroomname() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomNotify.ChatRoomName)
  clear_has_chatroomname();
  ::micromsg::SKBuiltinString_t* temp = chatroomname_;
  chatroomname_ = NULL;
  return temp;
}
inline void ModChatRoomNotify::set_allocated_chatroomname(::micromsg::SKBuiltinString_t* chatroomname) {
  delete chatroomname_;
  chatroomname_ = chatroomname;
  if (chatroomname) {
    set_has_chatroomname();
  } else {
    clear_has_chatroomname();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomNotify.ChatRoomName)
}

// required uint32 Status = 2;
inline bool ModChatRoomNotify::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModChatRoomNotify::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModChatRoomNotify::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModChatRoomNotify::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ModChatRoomNotify::status() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomNotify.Status)
  return status_;
}
inline void ModChatRoomNotify::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomNotify.Status)
}

// -------------------------------------------------------------------

// CloseMicroBlog

// required .micromsg.SKBuiltinString_t MicroBlogUserName = 1;
inline bool CloseMicroBlog::has_microblogusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloseMicroBlog::set_has_microblogusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CloseMicroBlog::clear_has_microblogusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CloseMicroBlog::clear_microblogusername() {
  if (microblogusername_ != NULL) microblogusername_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_microblogusername();
}
inline const ::micromsg::SKBuiltinString_t& CloseMicroBlog::microblogusername() const {
  // @@protoc_insertion_point(field_get:micromsg.CloseMicroBlog.MicroBlogUserName)
  return microblogusername_ != NULL ? *microblogusername_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* CloseMicroBlog::mutable_microblogusername() {
  set_has_microblogusername();
  if (microblogusername_ == NULL) {
    microblogusername_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CloseMicroBlog.MicroBlogUserName)
  return microblogusername_;
}
inline ::micromsg::SKBuiltinString_t* CloseMicroBlog::release_microblogusername() {
  // @@protoc_insertion_point(field_release:micromsg.CloseMicroBlog.MicroBlogUserName)
  clear_has_microblogusername();
  ::micromsg::SKBuiltinString_t* temp = microblogusername_;
  microblogusername_ = NULL;
  return temp;
}
inline void CloseMicroBlog::set_allocated_microblogusername(::micromsg::SKBuiltinString_t* microblogusername) {
  delete microblogusername_;
  microblogusername_ = microblogusername;
  if (microblogusername) {
    set_has_microblogusername();
  } else {
    clear_has_microblogusername();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CloseMicroBlog.MicroBlogUserName)
}

// -------------------------------------------------------------------

// ModChatRoomMember

// required .micromsg.SKBuiltinString_t UserName = 1;
inline bool ModChatRoomMember::has_username() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ModChatRoomMember::set_has_username() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ModChatRoomMember::clear_has_username() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ModChatRoomMember::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& ModChatRoomMember::username() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void ModChatRoomMember::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.UserName)
}

// required .micromsg.SKBuiltinString_t NickName = 2;
inline bool ModChatRoomMember::has_nickname() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ModChatRoomMember::set_has_nickname() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ModChatRoomMember::clear_has_nickname() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ModChatRoomMember::clear_nickname() {
  if (nickname_ != NULL) nickname_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_nickname();
}
inline const ::micromsg::SKBuiltinString_t& ModChatRoomMember::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.NickName)
  return nickname_ != NULL ? *nickname_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == NULL) {
    nickname_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.NickName)
  return nickname_;
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.NickName)
  clear_has_nickname();
  ::micromsg::SKBuiltinString_t* temp = nickname_;
  nickname_ = NULL;
  return temp;
}
inline void ModChatRoomMember::set_allocated_nickname(::micromsg::SKBuiltinString_t* nickname) {
  delete nickname_;
  nickname_ = nickname;
  if (nickname) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.NickName)
}

// required .micromsg.SKBuiltinString_t PYInitial = 3;
inline bool ModChatRoomMember::has_pyinitial() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ModChatRoomMember::set_has_pyinitial() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ModChatRoomMember::clear_has_pyinitial() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ModChatRoomMember::clear_pyinitial() {
  if (pyinitial_ != NULL) pyinitial_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_pyinitial();
}
inline const ::micromsg::SKBuiltinString_t& ModChatRoomMember::pyinitial() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.PYInitial)
  return pyinitial_ != NULL ? *pyinitial_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::mutable_pyinitial() {
  set_has_pyinitial();
  if (pyinitial_ == NULL) {
    pyinitial_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.PYInitial)
  return pyinitial_;
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::release_pyinitial() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.PYInitial)
  clear_has_pyinitial();
  ::micromsg::SKBuiltinString_t* temp = pyinitial_;
  pyinitial_ = NULL;
  return temp;
}
inline void ModChatRoomMember::set_allocated_pyinitial(::micromsg::SKBuiltinString_t* pyinitial) {
  delete pyinitial_;
  pyinitial_ = pyinitial;
  if (pyinitial) {
    set_has_pyinitial();
  } else {
    clear_has_pyinitial();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.PYInitial)
}

// required .micromsg.SKBuiltinString_t QuanPin = 4;
inline bool ModChatRoomMember::has_quanpin() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ModChatRoomMember::set_has_quanpin() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ModChatRoomMember::clear_has_quanpin() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ModChatRoomMember::clear_quanpin() {
  if (quanpin_ != NULL) quanpin_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_quanpin();
}
inline const ::micromsg::SKBuiltinString_t& ModChatRoomMember::quanpin() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.QuanPin)
  return quanpin_ != NULL ? *quanpin_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::mutable_quanpin() {
  set_has_quanpin();
  if (quanpin_ == NULL) {
    quanpin_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.QuanPin)
  return quanpin_;
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::release_quanpin() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.QuanPin)
  clear_has_quanpin();
  ::micromsg::SKBuiltinString_t* temp = quanpin_;
  quanpin_ = NULL;
  return temp;
}
inline void ModChatRoomMember::set_allocated_quanpin(::micromsg::SKBuiltinString_t* quanpin) {
  delete quanpin_;
  quanpin_ = quanpin;
  if (quanpin) {
    set_has_quanpin();
  } else {
    clear_has_quanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.QuanPin)
}

// required int32 Sex = 5;
inline bool ModChatRoomMember::has_sex() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ModChatRoomMember::set_has_sex() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ModChatRoomMember::clear_has_sex() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ModChatRoomMember::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 ModChatRoomMember::sex() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.Sex)
  return sex_;
}
inline void ModChatRoomMember::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.Sex)
}

// required .micromsg.SKBuiltinBuffer_t ImgBuf = 6;
inline bool ModChatRoomMember::has_imgbuf() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ModChatRoomMember::set_has_imgbuf() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ModChatRoomMember::clear_has_imgbuf() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ModChatRoomMember::clear_imgbuf() {
  if (imgbuf_ != NULL) imgbuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_imgbuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& ModChatRoomMember::imgbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.ImgBuf)
  return imgbuf_ != NULL ? *imgbuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ModChatRoomMember::mutable_imgbuf() {
  set_has_imgbuf();
  if (imgbuf_ == NULL) {
    imgbuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.ImgBuf)
  return imgbuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* ModChatRoomMember::release_imgbuf() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.ImgBuf)
  clear_has_imgbuf();
  ::micromsg::SKBuiltinBuffer_t* temp = imgbuf_;
  imgbuf_ = NULL;
  return temp;
}
inline void ModChatRoomMember::set_allocated_imgbuf(::micromsg::SKBuiltinBuffer_t* imgbuf) {
  delete imgbuf_;
  imgbuf_ = imgbuf;
  if (imgbuf) {
    set_has_imgbuf();
  } else {
    clear_has_imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.ImgBuf)
}

// required uint32 ImgFlag = 7;
inline bool ModChatRoomMember::has_imgflag() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ModChatRoomMember::set_has_imgflag() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ModChatRoomMember::clear_has_imgflag() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ModChatRoomMember::clear_imgflag() {
  imgflag_ = 0u;
  clear_has_imgflag();
}
inline ::google::protobuf::uint32 ModChatRoomMember::imgflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.ImgFlag)
  return imgflag_;
}
inline void ModChatRoomMember::set_imgflag(::google::protobuf::uint32 value) {
  set_has_imgflag();
  imgflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.ImgFlag)
}

// required .micromsg.SKBuiltinString_t Remark = 8;
inline bool ModChatRoomMember::has_remark() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ModChatRoomMember::set_has_remark() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ModChatRoomMember::clear_has_remark() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ModChatRoomMember::clear_remark() {
  if (remark_ != NULL) remark_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_remark();
}
inline const ::micromsg::SKBuiltinString_t& ModChatRoomMember::remark() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.Remark)
  return remark_ != NULL ? *remark_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::mutable_remark() {
  set_has_remark();
  if (remark_ == NULL) {
    remark_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.Remark)
  return remark_;
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::release_remark() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.Remark)
  clear_has_remark();
  ::micromsg::SKBuiltinString_t* temp = remark_;
  remark_ = NULL;
  return temp;
}
inline void ModChatRoomMember::set_allocated_remark(::micromsg::SKBuiltinString_t* remark) {
  delete remark_;
  remark_ = remark;
  if (remark) {
    set_has_remark();
  } else {
    clear_has_remark();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.Remark)
}

// required .micromsg.SKBuiltinString_t RemarkPYInitial = 9;
inline bool ModChatRoomMember::has_remarkpyinitial() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ModChatRoomMember::set_has_remarkpyinitial() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ModChatRoomMember::clear_has_remarkpyinitial() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ModChatRoomMember::clear_remarkpyinitial() {
  if (remarkpyinitial_ != NULL) remarkpyinitial_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_remarkpyinitial();
}
inline const ::micromsg::SKBuiltinString_t& ModChatRoomMember::remarkpyinitial() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.RemarkPYInitial)
  return remarkpyinitial_ != NULL ? *remarkpyinitial_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::mutable_remarkpyinitial() {
  set_has_remarkpyinitial();
  if (remarkpyinitial_ == NULL) {
    remarkpyinitial_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.RemarkPYInitial)
  return remarkpyinitial_;
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::release_remarkpyinitial() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.RemarkPYInitial)
  clear_has_remarkpyinitial();
  ::micromsg::SKBuiltinString_t* temp = remarkpyinitial_;
  remarkpyinitial_ = NULL;
  return temp;
}
inline void ModChatRoomMember::set_allocated_remarkpyinitial(::micromsg::SKBuiltinString_t* remarkpyinitial) {
  delete remarkpyinitial_;
  remarkpyinitial_ = remarkpyinitial;
  if (remarkpyinitial) {
    set_has_remarkpyinitial();
  } else {
    clear_has_remarkpyinitial();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.RemarkPYInitial)
}

// required .micromsg.SKBuiltinString_t RemarkQuanPin = 10;
inline bool ModChatRoomMember::has_remarkquanpin() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ModChatRoomMember::set_has_remarkquanpin() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ModChatRoomMember::clear_has_remarkquanpin() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ModChatRoomMember::clear_remarkquanpin() {
  if (remarkquanpin_ != NULL) remarkquanpin_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_remarkquanpin();
}
inline const ::micromsg::SKBuiltinString_t& ModChatRoomMember::remarkquanpin() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.RemarkQuanPin)
  return remarkquanpin_ != NULL ? *remarkquanpin_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::mutable_remarkquanpin() {
  set_has_remarkquanpin();
  if (remarkquanpin_ == NULL) {
    remarkquanpin_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.RemarkQuanPin)
  return remarkquanpin_;
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomMember::release_remarkquanpin() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.RemarkQuanPin)
  clear_has_remarkquanpin();
  ::micromsg::SKBuiltinString_t* temp = remarkquanpin_;
  remarkquanpin_ = NULL;
  return temp;
}
inline void ModChatRoomMember::set_allocated_remarkquanpin(::micromsg::SKBuiltinString_t* remarkquanpin) {
  delete remarkquanpin_;
  remarkquanpin_ = remarkquanpin;
  if (remarkquanpin) {
    set_has_remarkquanpin();
  } else {
    clear_has_remarkquanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.RemarkQuanPin)
}

// required uint32 ContactType = 11;
inline bool ModChatRoomMember::has_contacttype() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ModChatRoomMember::set_has_contacttype() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ModChatRoomMember::clear_has_contacttype() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ModChatRoomMember::clear_contacttype() {
  contacttype_ = 0u;
  clear_has_contacttype();
}
inline ::google::protobuf::uint32 ModChatRoomMember::contacttype() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.ContactType)
  return contacttype_;
}
inline void ModChatRoomMember::set_contacttype(::google::protobuf::uint32 value) {
  set_has_contacttype();
  contacttype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.ContactType)
}

// optional string Province = 12;
inline bool ModChatRoomMember::has_province() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModChatRoomMember::set_has_province() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModChatRoomMember::clear_has_province() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModChatRoomMember::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
inline const ::std::string& ModChatRoomMember::province() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.Province)
  return province_.GetNoArena();
}
inline void ModChatRoomMember::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.Province)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_province(::std::string&& value) {
  set_has_province();
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.Province)
}
#endif
inline void ModChatRoomMember::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.Province)
}
inline void ModChatRoomMember::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.Province)
}
inline ::std::string* ModChatRoomMember::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.Province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.Province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.Province)
}

// optional string City = 13;
inline bool ModChatRoomMember::has_city() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModChatRoomMember::set_has_city() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModChatRoomMember::clear_has_city() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModChatRoomMember::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
inline const ::std::string& ModChatRoomMember::city() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.City)
  return city_.GetNoArena();
}
inline void ModChatRoomMember::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.City)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.City)
}
#endif
inline void ModChatRoomMember::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.City)
}
inline void ModChatRoomMember::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.City)
}
inline ::std::string* ModChatRoomMember::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.City)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.City)
}

// optional string Signature = 14;
inline bool ModChatRoomMember::has_signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModChatRoomMember::set_has_signature() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModChatRoomMember::clear_has_signature() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModChatRoomMember::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
inline const ::std::string& ModChatRoomMember::signature() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.Signature)
  return signature_.GetNoArena();
}
inline void ModChatRoomMember::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.Signature)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.Signature)
}
#endif
inline void ModChatRoomMember::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.Signature)
}
inline void ModChatRoomMember::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.Signature)
}
inline ::std::string* ModChatRoomMember::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_signature() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.Signature)
}

// optional uint32 PersonalCard = 15;
inline bool ModChatRoomMember::has_personalcard() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ModChatRoomMember::set_has_personalcard() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ModChatRoomMember::clear_has_personalcard() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ModChatRoomMember::clear_personalcard() {
  personalcard_ = 0u;
  clear_has_personalcard();
}
inline ::google::protobuf::uint32 ModChatRoomMember::personalcard() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.PersonalCard)
  return personalcard_;
}
inline void ModChatRoomMember::set_personalcard(::google::protobuf::uint32 value) {
  set_has_personalcard();
  personalcard_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.PersonalCard)
}

// optional uint32 VerifyFlag = 16;
inline bool ModChatRoomMember::has_verifyflag() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ModChatRoomMember::set_has_verifyflag() {
  _has_bits_[0] |= 0x08000000u;
}
inline void ModChatRoomMember::clear_has_verifyflag() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void ModChatRoomMember::clear_verifyflag() {
  verifyflag_ = 0u;
  clear_has_verifyflag();
}
inline ::google::protobuf::uint32 ModChatRoomMember::verifyflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.VerifyFlag)
  return verifyflag_;
}
inline void ModChatRoomMember::set_verifyflag(::google::protobuf::uint32 value) {
  set_has_verifyflag();
  verifyflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.VerifyFlag)
}

// optional string VerifyInfo = 17;
inline bool ModChatRoomMember::has_verifyinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModChatRoomMember::set_has_verifyinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModChatRoomMember::clear_has_verifyinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModChatRoomMember::clear_verifyinfo() {
  verifyinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyinfo();
}
inline const ::std::string& ModChatRoomMember::verifyinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.VerifyInfo)
  return verifyinfo_.GetNoArena();
}
inline void ModChatRoomMember::set_verifyinfo(const ::std::string& value) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.VerifyInfo)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_verifyinfo(::std::string&& value) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.VerifyInfo)
}
#endif
inline void ModChatRoomMember::set_verifyinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.VerifyInfo)
}
inline void ModChatRoomMember::set_verifyinfo(const char* value, size_t size) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.VerifyInfo)
}
inline ::std::string* ModChatRoomMember::mutable_verifyinfo() {
  set_has_verifyinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.VerifyInfo)
  return verifyinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_verifyinfo() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.VerifyInfo)
  clear_has_verifyinfo();
  return verifyinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_verifyinfo(::std::string* verifyinfo) {
  if (verifyinfo != NULL) {
    set_has_verifyinfo();
  } else {
    clear_has_verifyinfo();
  }
  verifyinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.VerifyInfo)
}

// optional string Weibo = 18;
inline bool ModChatRoomMember::has_weibo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ModChatRoomMember::set_has_weibo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ModChatRoomMember::clear_has_weibo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ModChatRoomMember::clear_weibo() {
  weibo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weibo();
}
inline const ::std::string& ModChatRoomMember::weibo() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.Weibo)
  return weibo_.GetNoArena();
}
inline void ModChatRoomMember::set_weibo(const ::std::string& value) {
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.Weibo)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_weibo(::std::string&& value) {
  set_has_weibo();
  weibo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.Weibo)
}
#endif
inline void ModChatRoomMember::set_weibo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.Weibo)
}
inline void ModChatRoomMember::set_weibo(const char* value, size_t size) {
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.Weibo)
}
inline ::std::string* ModChatRoomMember::mutable_weibo() {
  set_has_weibo();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.Weibo)
  return weibo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_weibo() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.Weibo)
  clear_has_weibo();
  return weibo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_weibo(::std::string* weibo) {
  if (weibo != NULL) {
    set_has_weibo();
  } else {
    clear_has_weibo();
  }
  weibo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weibo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.Weibo)
}

// optional string VerifyContent = 19;
inline bool ModChatRoomMember::has_verifycontent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ModChatRoomMember::set_has_verifycontent() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ModChatRoomMember::clear_has_verifycontent() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ModChatRoomMember::clear_verifycontent() {
  verifycontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifycontent();
}
inline const ::std::string& ModChatRoomMember::verifycontent() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.VerifyContent)
  return verifycontent_.GetNoArena();
}
inline void ModChatRoomMember::set_verifycontent(const ::std::string& value) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.VerifyContent)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_verifycontent(::std::string&& value) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.VerifyContent)
}
#endif
inline void ModChatRoomMember::set_verifycontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.VerifyContent)
}
inline void ModChatRoomMember::set_verifycontent(const char* value, size_t size) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.VerifyContent)
}
inline ::std::string* ModChatRoomMember::mutable_verifycontent() {
  set_has_verifycontent();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.VerifyContent)
  return verifycontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_verifycontent() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.VerifyContent)
  clear_has_verifycontent();
  return verifycontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_verifycontent(::std::string* verifycontent) {
  if (verifycontent != NULL) {
    set_has_verifycontent();
  } else {
    clear_has_verifycontent();
  }
  verifycontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifycontent);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.VerifyContent)
}

// optional string WeiboNickname = 20;
inline bool ModChatRoomMember::has_weibonickname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ModChatRoomMember::set_has_weibonickname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ModChatRoomMember::clear_has_weibonickname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ModChatRoomMember::clear_weibonickname() {
  weibonickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weibonickname();
}
inline const ::std::string& ModChatRoomMember::weibonickname() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.WeiboNickname)
  return weibonickname_.GetNoArena();
}
inline void ModChatRoomMember::set_weibonickname(const ::std::string& value) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.WeiboNickname)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_weibonickname(::std::string&& value) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.WeiboNickname)
}
#endif
inline void ModChatRoomMember::set_weibonickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.WeiboNickname)
}
inline void ModChatRoomMember::set_weibonickname(const char* value, size_t size) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.WeiboNickname)
}
inline ::std::string* ModChatRoomMember::mutable_weibonickname() {
  set_has_weibonickname();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.WeiboNickname)
  return weibonickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_weibonickname() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.WeiboNickname)
  clear_has_weibonickname();
  return weibonickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_weibonickname(::std::string* weibonickname) {
  if (weibonickname != NULL) {
    set_has_weibonickname();
  } else {
    clear_has_weibonickname();
  }
  weibonickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weibonickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.WeiboNickname)
}

// optional uint32 WeiboFlag = 21;
inline bool ModChatRoomMember::has_weiboflag() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void ModChatRoomMember::set_has_weiboflag() {
  _has_bits_[0] |= 0x10000000u;
}
inline void ModChatRoomMember::clear_has_weiboflag() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void ModChatRoomMember::clear_weiboflag() {
  weiboflag_ = 0u;
  clear_has_weiboflag();
}
inline ::google::protobuf::uint32 ModChatRoomMember::weiboflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.WeiboFlag)
  return weiboflag_;
}
inline void ModChatRoomMember::set_weiboflag(::google::protobuf::uint32 value) {
  set_has_weiboflag();
  weiboflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.WeiboFlag)
}

// optional int32 AlbumStyle = 22;
inline bool ModChatRoomMember::has_albumstyle() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ModChatRoomMember::set_has_albumstyle() {
  _has_bits_[0] |= 0x20000000u;
}
inline void ModChatRoomMember::clear_has_albumstyle() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void ModChatRoomMember::clear_albumstyle() {
  albumstyle_ = 0;
  clear_has_albumstyle();
}
inline ::google::protobuf::int32 ModChatRoomMember::albumstyle() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.AlbumStyle)
  return albumstyle_;
}
inline void ModChatRoomMember::set_albumstyle(::google::protobuf::int32 value) {
  set_has_albumstyle();
  albumstyle_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.AlbumStyle)
}

// optional int32 AlbumFlag = 23;
inline bool ModChatRoomMember::has_albumflag() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ModChatRoomMember::set_has_albumflag() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ModChatRoomMember::clear_has_albumflag() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ModChatRoomMember::clear_albumflag() {
  albumflag_ = 0;
  clear_has_albumflag();
}
inline ::google::protobuf::int32 ModChatRoomMember::albumflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.AlbumFlag)
  return albumflag_;
}
inline void ModChatRoomMember::set_albumflag(::google::protobuf::int32 value) {
  set_has_albumflag();
  albumflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.AlbumFlag)
}

// optional string AlbumBGImgID = 24;
inline bool ModChatRoomMember::has_albumbgimgid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ModChatRoomMember::set_has_albumbgimgid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ModChatRoomMember::clear_has_albumbgimgid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ModChatRoomMember::clear_albumbgimgid() {
  albumbgimgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_albumbgimgid();
}
inline const ::std::string& ModChatRoomMember::albumbgimgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.AlbumBGImgID)
  return albumbgimgid_.GetNoArena();
}
inline void ModChatRoomMember::set_albumbgimgid(const ::std::string& value) {
  set_has_albumbgimgid();
  albumbgimgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.AlbumBGImgID)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_albumbgimgid(::std::string&& value) {
  set_has_albumbgimgid();
  albumbgimgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.AlbumBGImgID)
}
#endif
inline void ModChatRoomMember::set_albumbgimgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_albumbgimgid();
  albumbgimgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.AlbumBGImgID)
}
inline void ModChatRoomMember::set_albumbgimgid(const char* value, size_t size) {
  set_has_albumbgimgid();
  albumbgimgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.AlbumBGImgID)
}
inline ::std::string* ModChatRoomMember::mutable_albumbgimgid() {
  set_has_albumbgimgid();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.AlbumBGImgID)
  return albumbgimgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_albumbgimgid() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.AlbumBGImgID)
  clear_has_albumbgimgid();
  return albumbgimgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_albumbgimgid(::std::string* albumbgimgid) {
  if (albumbgimgid != NULL) {
    set_has_albumbgimgid();
  } else {
    clear_has_albumbgimgid();
  }
  albumbgimgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), albumbgimgid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.AlbumBGImgID)
}

// optional string Alias = 25;
inline bool ModChatRoomMember::has_alias() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ModChatRoomMember::set_has_alias() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ModChatRoomMember::clear_has_alias() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ModChatRoomMember::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alias();
}
inline const ::std::string& ModChatRoomMember::alias() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.Alias)
  return alias_.GetNoArena();
}
inline void ModChatRoomMember::set_alias(const ::std::string& value) {
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.Alias)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_alias(::std::string&& value) {
  set_has_alias();
  alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.Alias)
}
#endif
inline void ModChatRoomMember::set_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.Alias)
}
inline void ModChatRoomMember::set_alias(const char* value, size_t size) {
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.Alias)
}
inline ::std::string* ModChatRoomMember::mutable_alias() {
  set_has_alias();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.Alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_alias() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.Alias)
  clear_has_alias();
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    set_has_alias();
  } else {
    clear_has_alias();
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.Alias)
}

// optional .micromsg.SnsUserInfo SnsUserInfo = 26;
inline bool ModChatRoomMember::has_snsuserinfo() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ModChatRoomMember::set_has_snsuserinfo() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ModChatRoomMember::clear_has_snsuserinfo() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ModChatRoomMember::clear_snsuserinfo() {
  if (snsuserinfo_ != NULL) snsuserinfo_->::micromsg::SnsUserInfo::Clear();
  clear_has_snsuserinfo();
}
inline const ::micromsg::SnsUserInfo& ModChatRoomMember::snsuserinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.SnsUserInfo)
  return snsuserinfo_ != NULL ? *snsuserinfo_
                         : *::micromsg::SnsUserInfo::internal_default_instance();
}
inline ::micromsg::SnsUserInfo* ModChatRoomMember::mutable_snsuserinfo() {
  set_has_snsuserinfo();
  if (snsuserinfo_ == NULL) {
    snsuserinfo_ = new ::micromsg::SnsUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.SnsUserInfo)
  return snsuserinfo_;
}
inline ::micromsg::SnsUserInfo* ModChatRoomMember::release_snsuserinfo() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.SnsUserInfo)
  clear_has_snsuserinfo();
  ::micromsg::SnsUserInfo* temp = snsuserinfo_;
  snsuserinfo_ = NULL;
  return temp;
}
inline void ModChatRoomMember::set_allocated_snsuserinfo(::micromsg::SnsUserInfo* snsuserinfo) {
  delete snsuserinfo_;
  snsuserinfo_ = snsuserinfo;
  if (snsuserinfo) {
    set_has_snsuserinfo();
  } else {
    clear_has_snsuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.SnsUserInfo)
}

// optional string Country = 27;
inline bool ModChatRoomMember::has_country() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ModChatRoomMember::set_has_country() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ModChatRoomMember::clear_has_country() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ModChatRoomMember::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& ModChatRoomMember::country() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.Country)
  return country_.GetNoArena();
}
inline void ModChatRoomMember::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.Country)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.Country)
}
#endif
inline void ModChatRoomMember::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.Country)
}
inline void ModChatRoomMember::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.Country)
}
inline ::std::string* ModChatRoomMember::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_country() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.Country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.Country)
}

// optional string BigHeadImgUrl = 28;
inline bool ModChatRoomMember::has_bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ModChatRoomMember::set_has_bigheadimgurl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ModChatRoomMember::clear_has_bigheadimgurl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ModChatRoomMember::clear_bigheadimgurl() {
  bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bigheadimgurl();
}
inline const ::std::string& ModChatRoomMember::bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.BigHeadImgUrl)
  return bigheadimgurl_.GetNoArena();
}
inline void ModChatRoomMember::set_bigheadimgurl(const ::std::string& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.BigHeadImgUrl)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_bigheadimgurl(::std::string&& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.BigHeadImgUrl)
}
#endif
inline void ModChatRoomMember::set_bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.BigHeadImgUrl)
}
inline void ModChatRoomMember::set_bigheadimgurl(const char* value, size_t size) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.BigHeadImgUrl)
}
inline ::std::string* ModChatRoomMember::mutable_bigheadimgurl() {
  set_has_bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.BigHeadImgUrl)
  return bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_bigheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.BigHeadImgUrl)
  clear_has_bigheadimgurl();
  return bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_bigheadimgurl(::std::string* bigheadimgurl) {
  if (bigheadimgurl != NULL) {
    set_has_bigheadimgurl();
  } else {
    clear_has_bigheadimgurl();
  }
  bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.BigHeadImgUrl)
}

// optional string SmallHeadImgUrl = 29;
inline bool ModChatRoomMember::has_smallheadimgurl() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ModChatRoomMember::set_has_smallheadimgurl() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ModChatRoomMember::clear_has_smallheadimgurl() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ModChatRoomMember::clear_smallheadimgurl() {
  smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallheadimgurl();
}
inline const ::std::string& ModChatRoomMember::smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.SmallHeadImgUrl)
  return smallheadimgurl_.GetNoArena();
}
inline void ModChatRoomMember::set_smallheadimgurl(const ::std::string& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.SmallHeadImgUrl)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_smallheadimgurl(::std::string&& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.SmallHeadImgUrl)
}
#endif
inline void ModChatRoomMember::set_smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.SmallHeadImgUrl)
}
inline void ModChatRoomMember::set_smallheadimgurl(const char* value, size_t size) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.SmallHeadImgUrl)
}
inline ::std::string* ModChatRoomMember::mutable_smallheadimgurl() {
  set_has_smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.SmallHeadImgUrl)
  return smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_smallheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.SmallHeadImgUrl)
  clear_has_smallheadimgurl();
  return smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_smallheadimgurl(::std::string* smallheadimgurl) {
  if (smallheadimgurl != NULL) {
    set_has_smallheadimgurl();
  } else {
    clear_has_smallheadimgurl();
  }
  smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.SmallHeadImgUrl)
}

// optional string MyBrandList = 30;
inline bool ModChatRoomMember::has_mybrandlist() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ModChatRoomMember::set_has_mybrandlist() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ModChatRoomMember::clear_has_mybrandlist() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ModChatRoomMember::clear_mybrandlist() {
  mybrandlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mybrandlist();
}
inline const ::std::string& ModChatRoomMember::mybrandlist() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.MyBrandList)
  return mybrandlist_.GetNoArena();
}
inline void ModChatRoomMember::set_mybrandlist(const ::std::string& value) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMember.MyBrandList)
}
#if LANG_CXX11
inline void ModChatRoomMember::set_mybrandlist(::std::string&& value) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMember.MyBrandList)
}
#endif
inline void ModChatRoomMember::set_mybrandlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMember.MyBrandList)
}
inline void ModChatRoomMember::set_mybrandlist(const char* value, size_t size) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMember.MyBrandList)
}
inline ::std::string* ModChatRoomMember::mutable_mybrandlist() {
  set_has_mybrandlist();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.MyBrandList)
  return mybrandlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMember::release_mybrandlist() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.MyBrandList)
  clear_has_mybrandlist();
  return mybrandlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMember::set_allocated_mybrandlist(::std::string* mybrandlist) {
  if (mybrandlist != NULL) {
    set_has_mybrandlist();
  } else {
    clear_has_mybrandlist();
  }
  mybrandlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mybrandlist);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.MyBrandList)
}

// optional .micromsg.CustomizedInfo CustomizedInfo = 31;
inline bool ModChatRoomMember::has_customizedinfo() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ModChatRoomMember::set_has_customizedinfo() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ModChatRoomMember::clear_has_customizedinfo() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ModChatRoomMember::clear_customizedinfo() {
  if (customizedinfo_ != NULL) customizedinfo_->::micromsg::CustomizedInfo::Clear();
  clear_has_customizedinfo();
}
inline const ::micromsg::CustomizedInfo& ModChatRoomMember::customizedinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMember.CustomizedInfo)
  return customizedinfo_ != NULL ? *customizedinfo_
                         : *::micromsg::CustomizedInfo::internal_default_instance();
}
inline ::micromsg::CustomizedInfo* ModChatRoomMember::mutable_customizedinfo() {
  set_has_customizedinfo();
  if (customizedinfo_ == NULL) {
    customizedinfo_ = new ::micromsg::CustomizedInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMember.CustomizedInfo)
  return customizedinfo_;
}
inline ::micromsg::CustomizedInfo* ModChatRoomMember::release_customizedinfo() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMember.CustomizedInfo)
  clear_has_customizedinfo();
  ::micromsg::CustomizedInfo* temp = customizedinfo_;
  customizedinfo_ = NULL;
  return temp;
}
inline void ModChatRoomMember::set_allocated_customizedinfo(::micromsg::CustomizedInfo* customizedinfo) {
  delete customizedinfo_;
  customizedinfo_ = customizedinfo;
  if (customizedinfo) {
    set_has_customizedinfo();
  } else {
    clear_has_customizedinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMember.CustomizedInfo)
}

// -------------------------------------------------------------------

// QuitChatRoom

// required .micromsg.SKBuiltinString_t ChatRoomName = 1;
inline bool QuitChatRoom::has_chatroomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuitChatRoom::set_has_chatroomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuitChatRoom::clear_has_chatroomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuitChatRoom::clear_chatroomname() {
  if (chatroomname_ != NULL) chatroomname_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_chatroomname();
}
inline const ::micromsg::SKBuiltinString_t& QuitChatRoom::chatroomname() const {
  // @@protoc_insertion_point(field_get:micromsg.QuitChatRoom.ChatRoomName)
  return chatroomname_ != NULL ? *chatroomname_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* QuitChatRoom::mutable_chatroomname() {
  set_has_chatroomname();
  if (chatroomname_ == NULL) {
    chatroomname_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.QuitChatRoom.ChatRoomName)
  return chatroomname_;
}
inline ::micromsg::SKBuiltinString_t* QuitChatRoom::release_chatroomname() {
  // @@protoc_insertion_point(field_release:micromsg.QuitChatRoom.ChatRoomName)
  clear_has_chatroomname();
  ::micromsg::SKBuiltinString_t* temp = chatroomname_;
  chatroomname_ = NULL;
  return temp;
}
inline void QuitChatRoom::set_allocated_chatroomname(::micromsg::SKBuiltinString_t* chatroomname) {
  delete chatroomname_;
  chatroomname_ = chatroomname;
  if (chatroomname) {
    set_has_chatroomname();
  } else {
    clear_has_chatroomname();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.QuitChatRoom.ChatRoomName)
}

// required .micromsg.SKBuiltinString_t UserName = 2;
inline bool QuitChatRoom::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuitChatRoom::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuitChatRoom::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuitChatRoom::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& QuitChatRoom::username() const {
  // @@protoc_insertion_point(field_get:micromsg.QuitChatRoom.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* QuitChatRoom::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.QuitChatRoom.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* QuitChatRoom::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.QuitChatRoom.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void QuitChatRoom::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.QuitChatRoom.UserName)
}

// -------------------------------------------------------------------

// ModChatRoomTopic

// required .micromsg.SKBuiltinString_t ChatRoomName = 1;
inline bool ModChatRoomTopic::has_chatroomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModChatRoomTopic::set_has_chatroomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModChatRoomTopic::clear_has_chatroomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModChatRoomTopic::clear_chatroomname() {
  if (chatroomname_ != NULL) chatroomname_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_chatroomname();
}
inline const ::micromsg::SKBuiltinString_t& ModChatRoomTopic::chatroomname() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomTopic.ChatRoomName)
  return chatroomname_ != NULL ? *chatroomname_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomTopic::mutable_chatroomname() {
  set_has_chatroomname();
  if (chatroomname_ == NULL) {
    chatroomname_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomTopic.ChatRoomName)
  return chatroomname_;
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomTopic::release_chatroomname() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomTopic.ChatRoomName)
  clear_has_chatroomname();
  ::micromsg::SKBuiltinString_t* temp = chatroomname_;
  chatroomname_ = NULL;
  return temp;
}
inline void ModChatRoomTopic::set_allocated_chatroomname(::micromsg::SKBuiltinString_t* chatroomname) {
  delete chatroomname_;
  chatroomname_ = chatroomname;
  if (chatroomname) {
    set_has_chatroomname();
  } else {
    clear_has_chatroomname();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomTopic.ChatRoomName)
}

// required .micromsg.SKBuiltinString_t ChatRoomTopic = 2;
inline bool ModChatRoomTopic::has_chatroomtopic() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModChatRoomTopic::set_has_chatroomtopic() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModChatRoomTopic::clear_has_chatroomtopic() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModChatRoomTopic::clear_chatroomtopic() {
  if (chatroomtopic_ != NULL) chatroomtopic_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_chatroomtopic();
}
inline const ::micromsg::SKBuiltinString_t& ModChatRoomTopic::chatroomtopic() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomTopic.ChatRoomTopic)
  return chatroomtopic_ != NULL ? *chatroomtopic_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomTopic::mutable_chatroomtopic() {
  set_has_chatroomtopic();
  if (chatroomtopic_ == NULL) {
    chatroomtopic_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomTopic.ChatRoomTopic)
  return chatroomtopic_;
}
inline ::micromsg::SKBuiltinString_t* ModChatRoomTopic::release_chatroomtopic() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomTopic.ChatRoomTopic)
  clear_has_chatroomtopic();
  ::micromsg::SKBuiltinString_t* temp = chatroomtopic_;
  chatroomtopic_ = NULL;
  return temp;
}
inline void ModChatRoomTopic::set_allocated_chatroomtopic(::micromsg::SKBuiltinString_t* chatroomtopic) {
  delete chatroomtopic_;
  chatroomtopic_ = chatroomtopic;
  if (chatroomtopic) {
    set_has_chatroomtopic();
  } else {
    clear_has_chatroomtopic();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomTopic.ChatRoomTopic)
}

// -------------------------------------------------------------------

// ModChatRoomMemberDisplayName

// optional string ChatRoomName = 1;
inline bool ModChatRoomMemberDisplayName::has_chatroomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModChatRoomMemberDisplayName::set_has_chatroomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModChatRoomMemberDisplayName::clear_has_chatroomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModChatRoomMemberDisplayName::clear_chatroomname() {
  chatroomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatroomname();
}
inline const ::std::string& ModChatRoomMemberDisplayName::chatroomname() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMemberDisplayName.ChatRoomName)
  return chatroomname_.GetNoArena();
}
inline void ModChatRoomMemberDisplayName::set_chatroomname(const ::std::string& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMemberDisplayName.ChatRoomName)
}
#if LANG_CXX11
inline void ModChatRoomMemberDisplayName::set_chatroomname(::std::string&& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMemberDisplayName.ChatRoomName)
}
#endif
inline void ModChatRoomMemberDisplayName::set_chatroomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMemberDisplayName.ChatRoomName)
}
inline void ModChatRoomMemberDisplayName::set_chatroomname(const char* value, size_t size) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMemberDisplayName.ChatRoomName)
}
inline ::std::string* ModChatRoomMemberDisplayName::mutable_chatroomname() {
  set_has_chatroomname();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMemberDisplayName.ChatRoomName)
  return chatroomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMemberDisplayName::release_chatroomname() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMemberDisplayName.ChatRoomName)
  clear_has_chatroomname();
  return chatroomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMemberDisplayName::set_allocated_chatroomname(::std::string* chatroomname) {
  if (chatroomname != NULL) {
    set_has_chatroomname();
  } else {
    clear_has_chatroomname();
  }
  chatroomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatroomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMemberDisplayName.ChatRoomName)
}

// optional string UserName = 2;
inline bool ModChatRoomMemberDisplayName::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModChatRoomMemberDisplayName::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModChatRoomMemberDisplayName::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModChatRoomMemberDisplayName::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& ModChatRoomMemberDisplayName::username() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMemberDisplayName.UserName)
  return username_.GetNoArena();
}
inline void ModChatRoomMemberDisplayName::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMemberDisplayName.UserName)
}
#if LANG_CXX11
inline void ModChatRoomMemberDisplayName::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMemberDisplayName.UserName)
}
#endif
inline void ModChatRoomMemberDisplayName::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMemberDisplayName.UserName)
}
inline void ModChatRoomMemberDisplayName::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMemberDisplayName.UserName)
}
inline ::std::string* ModChatRoomMemberDisplayName::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMemberDisplayName.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMemberDisplayName::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMemberDisplayName.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMemberDisplayName::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMemberDisplayName.UserName)
}

// optional string DisplayName = 3;
inline bool ModChatRoomMemberDisplayName::has_displayname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModChatRoomMemberDisplayName::set_has_displayname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModChatRoomMemberDisplayName::clear_has_displayname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModChatRoomMemberDisplayName::clear_displayname() {
  displayname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_displayname();
}
inline const ::std::string& ModChatRoomMemberDisplayName::displayname() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMemberDisplayName.DisplayName)
  return displayname_.GetNoArena();
}
inline void ModChatRoomMemberDisplayName::set_displayname(const ::std::string& value) {
  set_has_displayname();
  displayname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMemberDisplayName.DisplayName)
}
#if LANG_CXX11
inline void ModChatRoomMemberDisplayName::set_displayname(::std::string&& value) {
  set_has_displayname();
  displayname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMemberDisplayName.DisplayName)
}
#endif
inline void ModChatRoomMemberDisplayName::set_displayname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_displayname();
  displayname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMemberDisplayName.DisplayName)
}
inline void ModChatRoomMemberDisplayName::set_displayname(const char* value, size_t size) {
  set_has_displayname();
  displayname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMemberDisplayName.DisplayName)
}
inline ::std::string* ModChatRoomMemberDisplayName::mutable_displayname() {
  set_has_displayname();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMemberDisplayName.DisplayName)
  return displayname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMemberDisplayName::release_displayname() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMemberDisplayName.DisplayName)
  clear_has_displayname();
  return displayname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMemberDisplayName::set_allocated_displayname(::std::string* displayname) {
  if (displayname != NULL) {
    set_has_displayname();
  } else {
    clear_has_displayname();
  }
  displayname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), displayname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMemberDisplayName.DisplayName)
}

// -------------------------------------------------------------------

// ModChatRoomMemberFlag

// optional string ChatRoomName = 1;
inline bool ModChatRoomMemberFlag::has_chatroomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModChatRoomMemberFlag::set_has_chatroomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModChatRoomMemberFlag::clear_has_chatroomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModChatRoomMemberFlag::clear_chatroomname() {
  chatroomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatroomname();
}
inline const ::std::string& ModChatRoomMemberFlag::chatroomname() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMemberFlag.ChatRoomName)
  return chatroomname_.GetNoArena();
}
inline void ModChatRoomMemberFlag::set_chatroomname(const ::std::string& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMemberFlag.ChatRoomName)
}
#if LANG_CXX11
inline void ModChatRoomMemberFlag::set_chatroomname(::std::string&& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMemberFlag.ChatRoomName)
}
#endif
inline void ModChatRoomMemberFlag::set_chatroomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMemberFlag.ChatRoomName)
}
inline void ModChatRoomMemberFlag::set_chatroomname(const char* value, size_t size) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMemberFlag.ChatRoomName)
}
inline ::std::string* ModChatRoomMemberFlag::mutable_chatroomname() {
  set_has_chatroomname();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMemberFlag.ChatRoomName)
  return chatroomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMemberFlag::release_chatroomname() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMemberFlag.ChatRoomName)
  clear_has_chatroomname();
  return chatroomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMemberFlag::set_allocated_chatroomname(::std::string* chatroomname) {
  if (chatroomname != NULL) {
    set_has_chatroomname();
  } else {
    clear_has_chatroomname();
  }
  chatroomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatroomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMemberFlag.ChatRoomName)
}

// optional string UserName = 2;
inline bool ModChatRoomMemberFlag::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModChatRoomMemberFlag::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModChatRoomMemberFlag::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModChatRoomMemberFlag::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& ModChatRoomMemberFlag::username() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMemberFlag.UserName)
  return username_.GetNoArena();
}
inline void ModChatRoomMemberFlag::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMemberFlag.UserName)
}
#if LANG_CXX11
inline void ModChatRoomMemberFlag::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModChatRoomMemberFlag.UserName)
}
#endif
inline void ModChatRoomMemberFlag::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModChatRoomMemberFlag.UserName)
}
inline void ModChatRoomMemberFlag::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModChatRoomMemberFlag.UserName)
}
inline ::std::string* ModChatRoomMemberFlag::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.ModChatRoomMemberFlag.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModChatRoomMemberFlag::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.ModChatRoomMemberFlag.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModChatRoomMemberFlag::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModChatRoomMemberFlag.UserName)
}

// required uint32 FlagSwitch = 3;
inline bool ModChatRoomMemberFlag::has_flagswitch() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModChatRoomMemberFlag::set_has_flagswitch() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModChatRoomMemberFlag::clear_has_flagswitch() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModChatRoomMemberFlag::clear_flagswitch() {
  flagswitch_ = 0u;
  clear_has_flagswitch();
}
inline ::google::protobuf::uint32 ModChatRoomMemberFlag::flagswitch() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMemberFlag.FlagSwitch)
  return flagswitch_;
}
inline void ModChatRoomMemberFlag::set_flagswitch(::google::protobuf::uint32 value) {
  set_has_flagswitch();
  flagswitch_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMemberFlag.FlagSwitch)
}

// required uint32 Value = 4;
inline bool ModChatRoomMemberFlag::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModChatRoomMemberFlag::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModChatRoomMemberFlag::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModChatRoomMemberFlag::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ModChatRoomMemberFlag::value() const {
  // @@protoc_insertion_point(field_get:micromsg.ModChatRoomMemberFlag.Value)
  return value_;
}
inline void ModChatRoomMemberFlag::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModChatRoomMemberFlag.Value)
}

// -------------------------------------------------------------------

// AddMsg

// required int32 MsgId = 1;
inline bool AddMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AddMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AddMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AddMsg::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
inline ::google::protobuf::int32 AddMsg::msgid() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.MsgId)
  return msgid_;
}
inline void AddMsg::set_msgid(::google::protobuf::int32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddMsg.MsgId)
}

// required .micromsg.SKBuiltinString_t FromUserName = 2;
inline bool AddMsg::has_fromusername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddMsg::set_has_fromusername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddMsg::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddMsg::clear_fromusername() {
  if (fromusername_ != NULL) fromusername_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_fromusername();
}
inline const ::micromsg::SKBuiltinString_t& AddMsg::fromusername() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.FromUserName)
  return fromusername_ != NULL ? *fromusername_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* AddMsg::mutable_fromusername() {
  set_has_fromusername();
  if (fromusername_ == NULL) {
    fromusername_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AddMsg.FromUserName)
  return fromusername_;
}
inline ::micromsg::SKBuiltinString_t* AddMsg::release_fromusername() {
  // @@protoc_insertion_point(field_release:micromsg.AddMsg.FromUserName)
  clear_has_fromusername();
  ::micromsg::SKBuiltinString_t* temp = fromusername_;
  fromusername_ = NULL;
  return temp;
}
inline void AddMsg::set_allocated_fromusername(::micromsg::SKBuiltinString_t* fromusername) {
  delete fromusername_;
  fromusername_ = fromusername;
  if (fromusername) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddMsg.FromUserName)
}

// required .micromsg.SKBuiltinString_t ToUserName = 3;
inline bool AddMsg::has_tousername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddMsg::set_has_tousername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddMsg::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddMsg::clear_tousername() {
  if (tousername_ != NULL) tousername_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_tousername();
}
inline const ::micromsg::SKBuiltinString_t& AddMsg::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.ToUserName)
  return tousername_ != NULL ? *tousername_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* AddMsg::mutable_tousername() {
  set_has_tousername();
  if (tousername_ == NULL) {
    tousername_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AddMsg.ToUserName)
  return tousername_;
}
inline ::micromsg::SKBuiltinString_t* AddMsg::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.AddMsg.ToUserName)
  clear_has_tousername();
  ::micromsg::SKBuiltinString_t* temp = tousername_;
  tousername_ = NULL;
  return temp;
}
inline void AddMsg::set_allocated_tousername(::micromsg::SKBuiltinString_t* tousername) {
  delete tousername_;
  tousername_ = tousername;
  if (tousername) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddMsg.ToUserName)
}

// required int32 MsgType = 4;
inline bool AddMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AddMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AddMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AddMsg::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::google::protobuf::int32 AddMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.MsgType)
  return msgtype_;
}
inline void AddMsg::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddMsg.MsgType)
}

// required .micromsg.SKBuiltinString_t Content = 5;
inline bool AddMsg::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddMsg::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddMsg::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddMsg::clear_content() {
  if (content_ != NULL) content_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_content();
}
inline const ::micromsg::SKBuiltinString_t& AddMsg::content() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.Content)
  return content_ != NULL ? *content_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* AddMsg::mutable_content() {
  set_has_content();
  if (content_ == NULL) {
    content_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AddMsg.Content)
  return content_;
}
inline ::micromsg::SKBuiltinString_t* AddMsg::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.AddMsg.Content)
  clear_has_content();
  ::micromsg::SKBuiltinString_t* temp = content_;
  content_ = NULL;
  return temp;
}
inline void AddMsg::set_allocated_content(::micromsg::SKBuiltinString_t* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddMsg.Content)
}

// required uint32 Status = 6;
inline bool AddMsg::has_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AddMsg::set_has_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AddMsg::clear_has_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AddMsg::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 AddMsg::status() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.Status)
  return status_;
}
inline void AddMsg::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddMsg.Status)
}

// required uint32 ImgStatus = 7;
inline bool AddMsg::has_imgstatus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AddMsg::set_has_imgstatus() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AddMsg::clear_has_imgstatus() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AddMsg::clear_imgstatus() {
  imgstatus_ = 0u;
  clear_has_imgstatus();
}
inline ::google::protobuf::uint32 AddMsg::imgstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.ImgStatus)
  return imgstatus_;
}
inline void AddMsg::set_imgstatus(::google::protobuf::uint32 value) {
  set_has_imgstatus();
  imgstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddMsg.ImgStatus)
}

// required .micromsg.SKBuiltinBuffer_t ImgBuf = 8;
inline bool AddMsg::has_imgbuf() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AddMsg::set_has_imgbuf() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AddMsg::clear_has_imgbuf() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AddMsg::clear_imgbuf() {
  if (imgbuf_ != NULL) imgbuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_imgbuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& AddMsg::imgbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.ImgBuf)
  return imgbuf_ != NULL ? *imgbuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* AddMsg::mutable_imgbuf() {
  set_has_imgbuf();
  if (imgbuf_ == NULL) {
    imgbuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AddMsg.ImgBuf)
  return imgbuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* AddMsg::release_imgbuf() {
  // @@protoc_insertion_point(field_release:micromsg.AddMsg.ImgBuf)
  clear_has_imgbuf();
  ::micromsg::SKBuiltinBuffer_t* temp = imgbuf_;
  imgbuf_ = NULL;
  return temp;
}
inline void AddMsg::set_allocated_imgbuf(::micromsg::SKBuiltinBuffer_t* imgbuf) {
  delete imgbuf_;
  imgbuf_ = imgbuf;
  if (imgbuf) {
    set_has_imgbuf();
  } else {
    clear_has_imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddMsg.ImgBuf)
}

// required uint32 CreateTime = 9;
inline bool AddMsg::has_createtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AddMsg::set_has_createtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AddMsg::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AddMsg::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 AddMsg::createtime() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.CreateTime)
  return createtime_;
}
inline void AddMsg::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddMsg.CreateTime)
}

// optional string MsgSource = 10;
inline bool AddMsg::has_msgsource() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddMsg::set_has_msgsource() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddMsg::clear_has_msgsource() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddMsg::clear_msgsource() {
  msgsource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgsource();
}
inline const ::std::string& AddMsg::msgsource() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.MsgSource)
  return msgsource_.GetNoArena();
}
inline void AddMsg::set_msgsource(const ::std::string& value) {
  set_has_msgsource();
  msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AddMsg.MsgSource)
}
#if LANG_CXX11
inline void AddMsg::set_msgsource(::std::string&& value) {
  set_has_msgsource();
  msgsource_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AddMsg.MsgSource)
}
#endif
inline void AddMsg::set_msgsource(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msgsource();
  msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AddMsg.MsgSource)
}
inline void AddMsg::set_msgsource(const char* value, size_t size) {
  set_has_msgsource();
  msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AddMsg.MsgSource)
}
inline ::std::string* AddMsg::mutable_msgsource() {
  set_has_msgsource();
  // @@protoc_insertion_point(field_mutable:micromsg.AddMsg.MsgSource)
  return msgsource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddMsg::release_msgsource() {
  // @@protoc_insertion_point(field_release:micromsg.AddMsg.MsgSource)
  clear_has_msgsource();
  return msgsource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddMsg::set_allocated_msgsource(::std::string* msgsource) {
  if (msgsource != NULL) {
    set_has_msgsource();
  } else {
    clear_has_msgsource();
  }
  msgsource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgsource);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddMsg.MsgSource)
}

// optional string PushContent = 11;
inline bool AddMsg::has_pushcontent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddMsg::set_has_pushcontent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddMsg::clear_has_pushcontent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddMsg::clear_pushcontent() {
  pushcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pushcontent();
}
inline const ::std::string& AddMsg::pushcontent() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.PushContent)
  return pushcontent_.GetNoArena();
}
inline void AddMsg::set_pushcontent(const ::std::string& value) {
  set_has_pushcontent();
  pushcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AddMsg.PushContent)
}
#if LANG_CXX11
inline void AddMsg::set_pushcontent(::std::string&& value) {
  set_has_pushcontent();
  pushcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AddMsg.PushContent)
}
#endif
inline void AddMsg::set_pushcontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pushcontent();
  pushcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AddMsg.PushContent)
}
inline void AddMsg::set_pushcontent(const char* value, size_t size) {
  set_has_pushcontent();
  pushcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AddMsg.PushContent)
}
inline ::std::string* AddMsg::mutable_pushcontent() {
  set_has_pushcontent();
  // @@protoc_insertion_point(field_mutable:micromsg.AddMsg.PushContent)
  return pushcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddMsg::release_pushcontent() {
  // @@protoc_insertion_point(field_release:micromsg.AddMsg.PushContent)
  clear_has_pushcontent();
  return pushcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddMsg::set_allocated_pushcontent(::std::string* pushcontent) {
  if (pushcontent != NULL) {
    set_has_pushcontent();
  } else {
    clear_has_pushcontent();
  }
  pushcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pushcontent);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddMsg.PushContent)
}

// optional int64 NewMsgId = 12;
inline bool AddMsg::has_newmsgid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AddMsg::set_has_newmsgid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AddMsg::clear_has_newmsgid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AddMsg::clear_newmsgid() {
  newmsgid_ = GOOGLE_LONGLONG(0);
  clear_has_newmsgid();
}
inline ::google::protobuf::int64 AddMsg::newmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.AddMsg.NewMsgId)
  return newmsgid_;
}
inline void AddMsg::set_newmsgid(::google::protobuf::int64 value) {
  set_has_newmsgid();
  newmsgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddMsg.NewMsgId)
}

// -------------------------------------------------------------------

// ModMsgStatus

// required int32 MsgId = 1;
inline bool ModMsgStatus::has_msgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModMsgStatus::set_has_msgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModMsgStatus::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModMsgStatus::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
inline ::google::protobuf::int32 ModMsgStatus::msgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ModMsgStatus.MsgId)
  return msgid_;
}
inline void ModMsgStatus::set_msgid(::google::protobuf::int32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModMsgStatus.MsgId)
}

// required .micromsg.SKBuiltinString_t FromUserName = 2;
inline bool ModMsgStatus::has_fromusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModMsgStatus::set_has_fromusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModMsgStatus::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModMsgStatus::clear_fromusername() {
  if (fromusername_ != NULL) fromusername_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_fromusername();
}
inline const ::micromsg::SKBuiltinString_t& ModMsgStatus::fromusername() const {
  // @@protoc_insertion_point(field_get:micromsg.ModMsgStatus.FromUserName)
  return fromusername_ != NULL ? *fromusername_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModMsgStatus::mutable_fromusername() {
  set_has_fromusername();
  if (fromusername_ == NULL) {
    fromusername_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModMsgStatus.FromUserName)
  return fromusername_;
}
inline ::micromsg::SKBuiltinString_t* ModMsgStatus::release_fromusername() {
  // @@protoc_insertion_point(field_release:micromsg.ModMsgStatus.FromUserName)
  clear_has_fromusername();
  ::micromsg::SKBuiltinString_t* temp = fromusername_;
  fromusername_ = NULL;
  return temp;
}
inline void ModMsgStatus::set_allocated_fromusername(::micromsg::SKBuiltinString_t* fromusername) {
  delete fromusername_;
  fromusername_ = fromusername;
  if (fromusername) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModMsgStatus.FromUserName)
}

// required .micromsg.SKBuiltinString_t ToUserName = 3;
inline bool ModMsgStatus::has_tousername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModMsgStatus::set_has_tousername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModMsgStatus::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModMsgStatus::clear_tousername() {
  if (tousername_ != NULL) tousername_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_tousername();
}
inline const ::micromsg::SKBuiltinString_t& ModMsgStatus::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.ModMsgStatus.ToUserName)
  return tousername_ != NULL ? *tousername_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModMsgStatus::mutable_tousername() {
  set_has_tousername();
  if (tousername_ == NULL) {
    tousername_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModMsgStatus.ToUserName)
  return tousername_;
}
inline ::micromsg::SKBuiltinString_t* ModMsgStatus::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.ModMsgStatus.ToUserName)
  clear_has_tousername();
  ::micromsg::SKBuiltinString_t* temp = tousername_;
  tousername_ = NULL;
  return temp;
}
inline void ModMsgStatus::set_allocated_tousername(::micromsg::SKBuiltinString_t* tousername) {
  delete tousername_;
  tousername_ = tousername;
  if (tousername) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModMsgStatus.ToUserName)
}

// required uint32 Status = 4;
inline bool ModMsgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModMsgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModMsgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModMsgStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ModMsgStatus::status() const {
  // @@protoc_insertion_point(field_get:micromsg.ModMsgStatus.Status)
  return status_;
}
inline void ModMsgStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModMsgStatus.Status)
}

// optional int64 NewMsgId = 5;
inline bool ModMsgStatus::has_newmsgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ModMsgStatus::set_has_newmsgid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ModMsgStatus::clear_has_newmsgid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ModMsgStatus::clear_newmsgid() {
  newmsgid_ = GOOGLE_LONGLONG(0);
  clear_has_newmsgid();
}
inline ::google::protobuf::int64 ModMsgStatus::newmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ModMsgStatus.NewMsgId)
  return newmsgid_;
}
inline void ModMsgStatus::set_newmsgid(::google::protobuf::int64 value) {
  set_has_newmsgid();
  newmsgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModMsgStatus.NewMsgId)
}

// -------------------------------------------------------------------

// DelContact

// required .micromsg.SKBuiltinString_t UserName = 1;
inline bool DelContact::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelContact::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelContact::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelContact::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& DelContact::username() const {
  // @@protoc_insertion_point(field_get:micromsg.DelContact.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* DelContact::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DelContact.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* DelContact::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.DelContact.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void DelContact::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DelContact.UserName)
}

// -------------------------------------------------------------------

// DelChatContact

// required .micromsg.SKBuiltinString_t UserName = 1;
inline bool DelChatContact::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelChatContact::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelChatContact::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelChatContact::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& DelChatContact::username() const {
  // @@protoc_insertion_point(field_get:micromsg.DelChatContact.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* DelChatContact::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DelChatContact.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* DelChatContact::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.DelChatContact.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void DelChatContact::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DelChatContact.UserName)
}

// -------------------------------------------------------------------

// DelContactMsg

// required .micromsg.SKBuiltinString_t UserName = 1;
inline bool DelContactMsg::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelContactMsg::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelContactMsg::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelContactMsg::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& DelContactMsg::username() const {
  // @@protoc_insertion_point(field_get:micromsg.DelContactMsg.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* DelContactMsg::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DelContactMsg.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* DelContactMsg::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.DelContactMsg.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void DelContactMsg::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DelContactMsg.UserName)
}

// required int32 MaxMsgId = 2;
inline bool DelContactMsg::has_maxmsgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DelContactMsg::set_has_maxmsgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DelContactMsg::clear_has_maxmsgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DelContactMsg::clear_maxmsgid() {
  maxmsgid_ = 0;
  clear_has_maxmsgid();
}
inline ::google::protobuf::int32 DelContactMsg::maxmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.DelContactMsg.MaxMsgId)
  return maxmsgid_;
}
inline void DelContactMsg::set_maxmsgid(::google::protobuf::int32 value) {
  set_has_maxmsgid();
  maxmsgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DelContactMsg.MaxMsgId)
}

// optional int64 NewMsgId = 3;
inline bool DelContactMsg::has_newmsgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelContactMsg::set_has_newmsgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelContactMsg::clear_has_newmsgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelContactMsg::clear_newmsgid() {
  newmsgid_ = GOOGLE_LONGLONG(0);
  clear_has_newmsgid();
}
inline ::google::protobuf::int64 DelContactMsg::newmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.DelContactMsg.NewMsgId)
  return newmsgid_;
}
inline void DelContactMsg::set_newmsgid(::google::protobuf::int64 value) {
  set_has_newmsgid();
  newmsgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DelContactMsg.NewMsgId)
}

// -------------------------------------------------------------------

// DelMsg

// required .micromsg.SKBuiltinString_t UserName = 1;
inline bool DelMsg::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelMsg::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelMsg::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelMsg::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& DelMsg::username() const {
  // @@protoc_insertion_point(field_get:micromsg.DelMsg.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* DelMsg::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DelMsg.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* DelMsg::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.DelMsg.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void DelMsg::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DelMsg.UserName)
}

// required uint32 Count = 2;
inline bool DelMsg::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelMsg::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelMsg::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelMsg::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 DelMsg::count() const {
  // @@protoc_insertion_point(field_get:micromsg.DelMsg.Count)
  return count_;
}
inline void DelMsg::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DelMsg.Count)
}

// repeated int32 MsgIdList = 3 [packed = true];
inline int DelMsg::msgidlist_size() const {
  return msgidlist_.size();
}
inline void DelMsg::clear_msgidlist() {
  msgidlist_.Clear();
}
inline ::google::protobuf::int32 DelMsg::msgidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.DelMsg.MsgIdList)
  return msgidlist_.Get(index);
}
inline void DelMsg::set_msgidlist(int index, ::google::protobuf::int32 value) {
  msgidlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:micromsg.DelMsg.MsgIdList)
}
inline void DelMsg::add_msgidlist(::google::protobuf::int32 value) {
  msgidlist_.Add(value);
  // @@protoc_insertion_point(field_add:micromsg.DelMsg.MsgIdList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DelMsg::msgidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.DelMsg.MsgIdList)
  return msgidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DelMsg::mutable_msgidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.DelMsg.MsgIdList)
  return &msgidlist_;
}

// -------------------------------------------------------------------

// NewDelMsg

// optional string FromUserName = 1;
inline bool NewDelMsg::has_fromusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewDelMsg::set_has_fromusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewDelMsg::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewDelMsg::clear_fromusername() {
  fromusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromusername();
}
inline const ::std::string& NewDelMsg::fromusername() const {
  // @@protoc_insertion_point(field_get:micromsg.NewDelMsg.FromUserName)
  return fromusername_.GetNoArena();
}
inline void NewDelMsg::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.NewDelMsg.FromUserName)
}
#if LANG_CXX11
inline void NewDelMsg::set_fromusername(::std::string&& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.NewDelMsg.FromUserName)
}
#endif
inline void NewDelMsg::set_fromusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.NewDelMsg.FromUserName)
}
inline void NewDelMsg::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.NewDelMsg.FromUserName)
}
inline ::std::string* NewDelMsg::mutable_fromusername() {
  set_has_fromusername();
  // @@protoc_insertion_point(field_mutable:micromsg.NewDelMsg.FromUserName)
  return fromusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewDelMsg::release_fromusername() {
  // @@protoc_insertion_point(field_release:micromsg.NewDelMsg.FromUserName)
  clear_has_fromusername();
  return fromusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewDelMsg::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername != NULL) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  fromusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewDelMsg.FromUserName)
}

// optional string ToUserName = 2;
inline bool NewDelMsg::has_tousername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewDelMsg::set_has_tousername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewDelMsg::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewDelMsg::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
inline const ::std::string& NewDelMsg::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.NewDelMsg.ToUserName)
  return tousername_.GetNoArena();
}
inline void NewDelMsg::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.NewDelMsg.ToUserName)
}
#if LANG_CXX11
inline void NewDelMsg::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.NewDelMsg.ToUserName)
}
#endif
inline void NewDelMsg::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.NewDelMsg.ToUserName)
}
inline void NewDelMsg::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.NewDelMsg.ToUserName)
}
inline ::std::string* NewDelMsg::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.NewDelMsg.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewDelMsg::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.NewDelMsg.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewDelMsg::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.NewDelMsg.ToUserName)
}

// required int32 MsgId = 3;
inline bool NewDelMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewDelMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewDelMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewDelMsg::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
inline ::google::protobuf::int32 NewDelMsg::msgid() const {
  // @@protoc_insertion_point(field_get:micromsg.NewDelMsg.MsgId)
  return msgid_;
}
inline void NewDelMsg::set_msgid(::google::protobuf::int32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewDelMsg.MsgId)
}

// required uint32 MsgType = 4;
inline bool NewDelMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewDelMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewDelMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewDelMsg::clear_msgtype() {
  msgtype_ = 0u;
  clear_has_msgtype();
}
inline ::google::protobuf::uint32 NewDelMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:micromsg.NewDelMsg.MsgType)
  return msgtype_;
}
inline void NewDelMsg::set_msgtype(::google::protobuf::uint32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewDelMsg.MsgType)
}

// optional int64 NewMsgId = 5;
inline bool NewDelMsg::has_newmsgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewDelMsg::set_has_newmsgid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewDelMsg::clear_has_newmsgid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewDelMsg::clear_newmsgid() {
  newmsgid_ = GOOGLE_LONGLONG(0);
  clear_has_newmsgid();
}
inline ::google::protobuf::int64 NewDelMsg::newmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.NewDelMsg.NewMsgId)
  return newmsgid_;
}
inline void NewDelMsg::set_newmsgid(::google::protobuf::int64 value) {
  set_has_newmsgid();
  newmsgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.NewDelMsg.NewMsgId)
}

// -------------------------------------------------------------------

// FacebookInfo

// required uint64 Uid = 1;
inline bool FacebookInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacebookInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacebookInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacebookInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 FacebookInfo::uid() const {
  // @@protoc_insertion_point(field_get:micromsg.FacebookInfo.Uid)
  return uid_;
}
inline void FacebookInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacebookInfo.Uid)
}

// optional string Name = 2;
inline bool FacebookInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacebookInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacebookInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacebookInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& FacebookInfo::name() const {
  // @@protoc_insertion_point(field_get:micromsg.FacebookInfo.Name)
  return name_.GetNoArena();
}
inline void FacebookInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacebookInfo.Name)
}
#if LANG_CXX11
inline void FacebookInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacebookInfo.Name)
}
#endif
inline void FacebookInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacebookInfo.Name)
}
inline void FacebookInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacebookInfo.Name)
}
inline ::std::string* FacebookInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.FacebookInfo.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacebookInfo::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.FacebookInfo.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacebookInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacebookInfo.Name)
}

// optional string Token = 3;
inline bool FacebookInfo::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacebookInfo::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacebookInfo::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacebookInfo::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& FacebookInfo::token() const {
  // @@protoc_insertion_point(field_get:micromsg.FacebookInfo.Token)
  return token_.GetNoArena();
}
inline void FacebookInfo::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacebookInfo.Token)
}
#if LANG_CXX11
inline void FacebookInfo::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacebookInfo.Token)
}
#endif
inline void FacebookInfo::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacebookInfo.Token)
}
inline void FacebookInfo::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacebookInfo.Token)
}
inline ::std::string* FacebookInfo::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:micromsg.FacebookInfo.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacebookInfo::release_token() {
  // @@protoc_insertion_point(field_release:micromsg.FacebookInfo.Token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacebookInfo::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacebookInfo.Token)
}

// -------------------------------------------------------------------

// ModUserImg

// required uint32 ImgType = 1;
inline bool ModUserImg::has_imgtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ModUserImg::set_has_imgtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ModUserImg::clear_has_imgtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ModUserImg::clear_imgtype() {
  imgtype_ = 0u;
  clear_has_imgtype();
}
inline ::google::protobuf::uint32 ModUserImg::imgtype() const {
  // @@protoc_insertion_point(field_get:micromsg.ModUserImg.ImgType)
  return imgtype_;
}
inline void ModUserImg::set_imgtype(::google::protobuf::uint32 value) {
  set_has_imgtype();
  imgtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModUserImg.ImgType)
}

// required uint32 ImgLen = 2;
inline bool ModUserImg::has_imglen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ModUserImg::set_has_imglen() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ModUserImg::clear_has_imglen() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ModUserImg::clear_imglen() {
  imglen_ = 0u;
  clear_has_imglen();
}
inline ::google::protobuf::uint32 ModUserImg::imglen() const {
  // @@protoc_insertion_point(field_get:micromsg.ModUserImg.ImgLen)
  return imglen_;
}
inline void ModUserImg::set_imglen(::google::protobuf::uint32 value) {
  set_has_imglen();
  imglen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModUserImg.ImgLen)
}

// optional bytes ImgBuf = 3;
inline bool ModUserImg::has_imgbuf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModUserImg::set_has_imgbuf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModUserImg::clear_has_imgbuf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModUserImg::clear_imgbuf() {
  imgbuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imgbuf();
}
inline const ::std::string& ModUserImg::imgbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.ModUserImg.ImgBuf)
  return imgbuf_.GetNoArena();
}
inline void ModUserImg::set_imgbuf(const ::std::string& value) {
  set_has_imgbuf();
  imgbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModUserImg.ImgBuf)
}
#if LANG_CXX11
inline void ModUserImg::set_imgbuf(::std::string&& value) {
  set_has_imgbuf();
  imgbuf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModUserImg.ImgBuf)
}
#endif
inline void ModUserImg::set_imgbuf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imgbuf();
  imgbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModUserImg.ImgBuf)
}
inline void ModUserImg::set_imgbuf(const void* value, size_t size) {
  set_has_imgbuf();
  imgbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModUserImg.ImgBuf)
}
inline ::std::string* ModUserImg::mutable_imgbuf() {
  set_has_imgbuf();
  // @@protoc_insertion_point(field_mutable:micromsg.ModUserImg.ImgBuf)
  return imgbuf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModUserImg::release_imgbuf() {
  // @@protoc_insertion_point(field_release:micromsg.ModUserImg.ImgBuf)
  clear_has_imgbuf();
  return imgbuf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModUserImg::set_allocated_imgbuf(::std::string* imgbuf) {
  if (imgbuf != NULL) {
    set_has_imgbuf();
  } else {
    clear_has_imgbuf();
  }
  imgbuf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imgbuf);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModUserImg.ImgBuf)
}

// optional string ImgMd5 = 4;
inline bool ModUserImg::has_imgmd5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModUserImg::set_has_imgmd5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModUserImg::clear_has_imgmd5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModUserImg::clear_imgmd5() {
  imgmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imgmd5();
}
inline const ::std::string& ModUserImg::imgmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.ModUserImg.ImgMd5)
  return imgmd5_.GetNoArena();
}
inline void ModUserImg::set_imgmd5(const ::std::string& value) {
  set_has_imgmd5();
  imgmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModUserImg.ImgMd5)
}
#if LANG_CXX11
inline void ModUserImg::set_imgmd5(::std::string&& value) {
  set_has_imgmd5();
  imgmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModUserImg.ImgMd5)
}
#endif
inline void ModUserImg::set_imgmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imgmd5();
  imgmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModUserImg.ImgMd5)
}
inline void ModUserImg::set_imgmd5(const char* value, size_t size) {
  set_has_imgmd5();
  imgmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModUserImg.ImgMd5)
}
inline ::std::string* ModUserImg::mutable_imgmd5() {
  set_has_imgmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.ModUserImg.ImgMd5)
  return imgmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModUserImg::release_imgmd5() {
  // @@protoc_insertion_point(field_release:micromsg.ModUserImg.ImgMd5)
  clear_has_imgmd5();
  return imgmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModUserImg::set_allocated_imgmd5(::std::string* imgmd5) {
  if (imgmd5 != NULL) {
    set_has_imgmd5();
  } else {
    clear_has_imgmd5();
  }
  imgmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imgmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModUserImg.ImgMd5)
}

// optional string BigHeadImgUrl = 5;
inline bool ModUserImg::has_bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModUserImg::set_has_bigheadimgurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModUserImg::clear_has_bigheadimgurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModUserImg::clear_bigheadimgurl() {
  bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bigheadimgurl();
}
inline const ::std::string& ModUserImg::bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ModUserImg.BigHeadImgUrl)
  return bigheadimgurl_.GetNoArena();
}
inline void ModUserImg::set_bigheadimgurl(const ::std::string& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModUserImg.BigHeadImgUrl)
}
#if LANG_CXX11
inline void ModUserImg::set_bigheadimgurl(::std::string&& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModUserImg.BigHeadImgUrl)
}
#endif
inline void ModUserImg::set_bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModUserImg.BigHeadImgUrl)
}
inline void ModUserImg::set_bigheadimgurl(const char* value, size_t size) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModUserImg.BigHeadImgUrl)
}
inline ::std::string* ModUserImg::mutable_bigheadimgurl() {
  set_has_bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.ModUserImg.BigHeadImgUrl)
  return bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModUserImg::release_bigheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.ModUserImg.BigHeadImgUrl)
  clear_has_bigheadimgurl();
  return bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModUserImg::set_allocated_bigheadimgurl(::std::string* bigheadimgurl) {
  if (bigheadimgurl != NULL) {
    set_has_bigheadimgurl();
  } else {
    clear_has_bigheadimgurl();
  }
  bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModUserImg.BigHeadImgUrl)
}

// optional string SmallHeadImgUrl = 6;
inline bool ModUserImg::has_smallheadimgurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModUserImg::set_has_smallheadimgurl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModUserImg::clear_has_smallheadimgurl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModUserImg::clear_smallheadimgurl() {
  smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallheadimgurl();
}
inline const ::std::string& ModUserImg::smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ModUserImg.SmallHeadImgUrl)
  return smallheadimgurl_.GetNoArena();
}
inline void ModUserImg::set_smallheadimgurl(const ::std::string& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModUserImg.SmallHeadImgUrl)
}
#if LANG_CXX11
inline void ModUserImg::set_smallheadimgurl(::std::string&& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModUserImg.SmallHeadImgUrl)
}
#endif
inline void ModUserImg::set_smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModUserImg.SmallHeadImgUrl)
}
inline void ModUserImg::set_smallheadimgurl(const char* value, size_t size) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModUserImg.SmallHeadImgUrl)
}
inline ::std::string* ModUserImg::mutable_smallheadimgurl() {
  set_has_smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.ModUserImg.SmallHeadImgUrl)
  return smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModUserImg::release_smallheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.ModUserImg.SmallHeadImgUrl)
  clear_has_smallheadimgurl();
  return smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModUserImg::set_allocated_smallheadimgurl(::std::string* smallheadimgurl) {
  if (smallheadimgurl != NULL) {
    set_has_smallheadimgurl();
  } else {
    clear_has_smallheadimgurl();
  }
  smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModUserImg.SmallHeadImgUrl)
}

// -------------------------------------------------------------------

// ModDisturbSetting

// required .micromsg.DisturbSetting DisturbSetting = 1;
inline bool ModDisturbSetting::has_disturbsetting() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModDisturbSetting::set_has_disturbsetting() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModDisturbSetting::clear_has_disturbsetting() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModDisturbSetting::clear_disturbsetting() {
  if (disturbsetting_ != NULL) disturbsetting_->::micromsg::DisturbSetting::Clear();
  clear_has_disturbsetting();
}
inline const ::micromsg::DisturbSetting& ModDisturbSetting::disturbsetting() const {
  // @@protoc_insertion_point(field_get:micromsg.ModDisturbSetting.DisturbSetting)
  return disturbsetting_ != NULL ? *disturbsetting_
                         : *::micromsg::DisturbSetting::internal_default_instance();
}
inline ::micromsg::DisturbSetting* ModDisturbSetting::mutable_disturbsetting() {
  set_has_disturbsetting();
  if (disturbsetting_ == NULL) {
    disturbsetting_ = new ::micromsg::DisturbSetting;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModDisturbSetting.DisturbSetting)
  return disturbsetting_;
}
inline ::micromsg::DisturbSetting* ModDisturbSetting::release_disturbsetting() {
  // @@protoc_insertion_point(field_release:micromsg.ModDisturbSetting.DisturbSetting)
  clear_has_disturbsetting();
  ::micromsg::DisturbSetting* temp = disturbsetting_;
  disturbsetting_ = NULL;
  return temp;
}
inline void ModDisturbSetting::set_allocated_disturbsetting(::micromsg::DisturbSetting* disturbsetting) {
  delete disturbsetting_;
  disturbsetting_ = disturbsetting;
  if (disturbsetting) {
    set_has_disturbsetting();
  } else {
    clear_has_disturbsetting();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModDisturbSetting.DisturbSetting)
}

// -------------------------------------------------------------------

// ModNotifyStatus

// required .micromsg.SKBuiltinString_t UserName = 1;
inline bool ModNotifyStatus::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModNotifyStatus::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModNotifyStatus::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModNotifyStatus::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& ModNotifyStatus::username() const {
  // @@protoc_insertion_point(field_get:micromsg.ModNotifyStatus.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModNotifyStatus::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModNotifyStatus.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* ModNotifyStatus::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.ModNotifyStatus.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void ModNotifyStatus::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModNotifyStatus.UserName)
}

// required uint32 Status = 2;
inline bool ModNotifyStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModNotifyStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModNotifyStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModNotifyStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ModNotifyStatus::status() const {
  // @@protoc_insertion_point(field_get:micromsg.ModNotifyStatus.Status)
  return status_;
}
inline void ModNotifyStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModNotifyStatus.Status)
}

// -------------------------------------------------------------------

// ModMicroBlogInfo

// required .micromsg.SKBuiltinString_t UserName = 1;
inline bool ModMicroBlogInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModMicroBlogInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModMicroBlogInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModMicroBlogInfo::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& ModMicroBlogInfo::username() const {
  // @@protoc_insertion_point(field_get:micromsg.ModMicroBlogInfo.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModMicroBlogInfo::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModMicroBlogInfo.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* ModMicroBlogInfo::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.ModMicroBlogInfo.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void ModMicroBlogInfo::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModMicroBlogInfo.UserName)
}

// required uint32 MicroBlogType = 2;
inline bool ModMicroBlogInfo::has_microblogtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModMicroBlogInfo::set_has_microblogtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModMicroBlogInfo::clear_has_microblogtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModMicroBlogInfo::clear_microblogtype() {
  microblogtype_ = 0u;
  clear_has_microblogtype();
}
inline ::google::protobuf::uint32 ModMicroBlogInfo::microblogtype() const {
  // @@protoc_insertion_point(field_get:micromsg.ModMicroBlogInfo.MicroBlogType)
  return microblogtype_;
}
inline void ModMicroBlogInfo::set_microblogtype(::google::protobuf::uint32 value) {
  set_has_microblogtype();
  microblogtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModMicroBlogInfo.MicroBlogType)
}

// required uint32 NotifyStatus = 3;
inline bool ModMicroBlogInfo::has_notifystatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModMicroBlogInfo::set_has_notifystatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModMicroBlogInfo::clear_has_notifystatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModMicroBlogInfo::clear_notifystatus() {
  notifystatus_ = 0u;
  clear_has_notifystatus();
}
inline ::google::protobuf::uint32 ModMicroBlogInfo::notifystatus() const {
  // @@protoc_insertion_point(field_get:micromsg.ModMicroBlogInfo.NotifyStatus)
  return notifystatus_;
}
inline void ModMicroBlogInfo::set_notifystatus(::google::protobuf::uint32 value) {
  set_has_notifystatus();
  notifystatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModMicroBlogInfo.NotifyStatus)
}

// required uint32 DeleteFlag = 4;
inline bool ModMicroBlogInfo::has_deleteflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModMicroBlogInfo::set_has_deleteflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModMicroBlogInfo::clear_has_deleteflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModMicroBlogInfo::clear_deleteflag() {
  deleteflag_ = 0u;
  clear_has_deleteflag();
}
inline ::google::protobuf::uint32 ModMicroBlogInfo::deleteflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ModMicroBlogInfo.DeleteFlag)
  return deleteflag_;
}
inline void ModMicroBlogInfo::set_deleteflag(::google::protobuf::uint32 value) {
  set_has_deleteflag();
  deleteflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModMicroBlogInfo.DeleteFlag)
}

// -------------------------------------------------------------------

// Report

// optional string Log = 1;
inline bool Report::has_log() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Report::set_has_log() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Report::clear_has_log() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Report::clear_log() {
  log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_log();
}
inline const ::std::string& Report::log() const {
  // @@protoc_insertion_point(field_get:micromsg.Report.Log)
  return log_.GetNoArena();
}
inline void Report::set_log(const ::std::string& value) {
  set_has_log();
  log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Report.Log)
}
#if LANG_CXX11
inline void Report::set_log(::std::string&& value) {
  set_has_log();
  log_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Report.Log)
}
#endif
inline void Report::set_log(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_log();
  log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Report.Log)
}
inline void Report::set_log(const char* value, size_t size) {
  set_has_log();
  log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Report.Log)
}
inline ::std::string* Report::mutable_log() {
  set_has_log();
  // @@protoc_insertion_point(field_mutable:micromsg.Report.Log)
  return log_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Report::release_log() {
  // @@protoc_insertion_point(field_release:micromsg.Report.Log)
  clear_has_log();
  return log_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Report::set_allocated_log(::std::string* log) {
  if (log != NULL) {
    set_has_log();
  } else {
    clear_has_log();
  }
  log_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Report.Log)
}

// -------------------------------------------------------------------

// InviteFriendOpen

// optional string UserName = 1;
inline bool InviteFriendOpen::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteFriendOpen::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteFriendOpen::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteFriendOpen::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& InviteFriendOpen::username() const {
  // @@protoc_insertion_point(field_get:micromsg.InviteFriendOpen.UserName)
  return username_.GetNoArena();
}
inline void InviteFriendOpen::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.InviteFriendOpen.UserName)
}
#if LANG_CXX11
inline void InviteFriendOpen::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.InviteFriendOpen.UserName)
}
#endif
inline void InviteFriendOpen::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.InviteFriendOpen.UserName)
}
inline void InviteFriendOpen::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.InviteFriendOpen.UserName)
}
inline ::std::string* InviteFriendOpen::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.InviteFriendOpen.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviteFriendOpen::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.InviteFriendOpen.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteFriendOpen::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.InviteFriendOpen.UserName)
}

// required uint32 FriendType = 2;
inline bool InviteFriendOpen::has_friendtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteFriendOpen::set_has_friendtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteFriendOpen::clear_has_friendtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteFriendOpen::clear_friendtype() {
  friendtype_ = 0u;
  clear_has_friendtype();
}
inline ::google::protobuf::uint32 InviteFriendOpen::friendtype() const {
  // @@protoc_insertion_point(field_get:micromsg.InviteFriendOpen.FriendType)
  return friendtype_;
}
inline void InviteFriendOpen::set_friendtype(::google::protobuf::uint32 value) {
  set_has_friendtype();
  friendtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.InviteFriendOpen.FriendType)
}

// -------------------------------------------------------------------

// ModUserDomainEmail

// required uint32 Status = 1;
inline bool ModUserDomainEmail::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModUserDomainEmail::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModUserDomainEmail::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModUserDomainEmail::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ModUserDomainEmail::status() const {
  // @@protoc_insertion_point(field_get:micromsg.ModUserDomainEmail.Status)
  return status_;
}
inline void ModUserDomainEmail::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModUserDomainEmail.Status)
}

// required .micromsg.SKBuiltinString_t Email = 2;
inline bool ModUserDomainEmail::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModUserDomainEmail::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModUserDomainEmail::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModUserDomainEmail::clear_email() {
  if (email_ != NULL) email_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_email();
}
inline const ::micromsg::SKBuiltinString_t& ModUserDomainEmail::email() const {
  // @@protoc_insertion_point(field_get:micromsg.ModUserDomainEmail.Email)
  return email_ != NULL ? *email_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* ModUserDomainEmail::mutable_email() {
  set_has_email();
  if (email_ == NULL) {
    email_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModUserDomainEmail.Email)
  return email_;
}
inline ::micromsg::SKBuiltinString_t* ModUserDomainEmail::release_email() {
  // @@protoc_insertion_point(field_release:micromsg.ModUserDomainEmail.Email)
  clear_has_email();
  ::micromsg::SKBuiltinString_t* temp = email_;
  email_ = NULL;
  return temp;
}
inline void ModUserDomainEmail::set_allocated_email(::micromsg::SKBuiltinString_t* email) {
  delete email_;
  email_ = email;
  if (email) {
    set_has_email();
  } else {
    clear_has_email();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModUserDomainEmail.Email)
}

// -------------------------------------------------------------------

// DelUserDomainEmail

// required .micromsg.SKBuiltinString_t UserName = 1;
inline bool DelUserDomainEmail::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelUserDomainEmail::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelUserDomainEmail::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelUserDomainEmail::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& DelUserDomainEmail::username() const {
  // @@protoc_insertion_point(field_get:micromsg.DelUserDomainEmail.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* DelUserDomainEmail::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DelUserDomainEmail.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* DelUserDomainEmail::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.DelUserDomainEmail.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void DelUserDomainEmail::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DelUserDomainEmail.UserName)
}

// required .micromsg.SKBuiltinString_t Email = 2;
inline bool DelUserDomainEmail::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelUserDomainEmail::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelUserDomainEmail::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelUserDomainEmail::clear_email() {
  if (email_ != NULL) email_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_email();
}
inline const ::micromsg::SKBuiltinString_t& DelUserDomainEmail::email() const {
  // @@protoc_insertion_point(field_get:micromsg.DelUserDomainEmail.Email)
  return email_ != NULL ? *email_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* DelUserDomainEmail::mutable_email() {
  set_has_email();
  if (email_ == NULL) {
    email_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DelUserDomainEmail.Email)
  return email_;
}
inline ::micromsg::SKBuiltinString_t* DelUserDomainEmail::release_email() {
  // @@protoc_insertion_point(field_release:micromsg.DelUserDomainEmail.Email)
  clear_has_email();
  ::micromsg::SKBuiltinString_t* temp = email_;
  email_ = NULL;
  return temp;
}
inline void DelUserDomainEmail::set_allocated_email(::micromsg::SKBuiltinString_t* email) {
  delete email_;
  email_ = email;
  if (email) {
    set_has_email();
  } else {
    clear_has_email();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DelUserDomainEmail.Email)
}

// -------------------------------------------------------------------

// FunctionSwitch

// required uint32 FunctionId = 1;
inline bool FunctionSwitch::has_functionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionSwitch::set_has_functionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionSwitch::clear_has_functionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionSwitch::clear_functionid() {
  functionid_ = 0u;
  clear_has_functionid();
}
inline ::google::protobuf::uint32 FunctionSwitch::functionid() const {
  // @@protoc_insertion_point(field_get:micromsg.FunctionSwitch.FunctionId)
  return functionid_;
}
inline void FunctionSwitch::set_functionid(::google::protobuf::uint32 value) {
  set_has_functionid();
  functionid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FunctionSwitch.FunctionId)
}

// required uint32 SwitchValue = 2;
inline bool FunctionSwitch::has_switchvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionSwitch::set_has_switchvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunctionSwitch::clear_has_switchvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunctionSwitch::clear_switchvalue() {
  switchvalue_ = 0u;
  clear_has_switchvalue();
}
inline ::google::protobuf::uint32 FunctionSwitch::switchvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.FunctionSwitch.SwitchValue)
  return switchvalue_;
}
inline void FunctionSwitch::set_switchvalue(::google::protobuf::uint32 value) {
  set_has_switchvalue();
  switchvalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FunctionSwitch.SwitchValue)
}

// -------------------------------------------------------------------

// WebWxFunctionSwitch

// required uint32 FunctionId = 1;
inline bool WebWxFunctionSwitch::has_functionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebWxFunctionSwitch::set_has_functionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebWxFunctionSwitch::clear_has_functionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebWxFunctionSwitch::clear_functionid() {
  functionid_ = 0u;
  clear_has_functionid();
}
inline ::google::protobuf::uint32 WebWxFunctionSwitch::functionid() const {
  // @@protoc_insertion_point(field_get:micromsg.WebWxFunctionSwitch.FunctionId)
  return functionid_;
}
inline void WebWxFunctionSwitch::set_functionid(::google::protobuf::uint32 value) {
  set_has_functionid();
  functionid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.WebWxFunctionSwitch.FunctionId)
}

// required uint32 SwitchValue = 2;
inline bool WebWxFunctionSwitch::has_switchvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebWxFunctionSwitch::set_has_switchvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebWxFunctionSwitch::clear_has_switchvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebWxFunctionSwitch::clear_switchvalue() {
  switchvalue_ = 0u;
  clear_has_switchvalue();
}
inline ::google::protobuf::uint32 WebWxFunctionSwitch::switchvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.WebWxFunctionSwitch.SwitchValue)
  return switchvalue_;
}
inline void WebWxFunctionSwitch::set_switchvalue(::google::protobuf::uint32 value) {
  set_has_switchvalue();
  switchvalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.WebWxFunctionSwitch.SwitchValue)
}

// -------------------------------------------------------------------

// PluginInstall

// required uint32 PluginFlag = 1;
inline bool PluginInstall::has_pluginflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PluginInstall::set_has_pluginflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PluginInstall::clear_has_pluginflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PluginInstall::clear_pluginflag() {
  pluginflag_ = 0u;
  clear_has_pluginflag();
}
inline ::google::protobuf::uint32 PluginInstall::pluginflag() const {
  // @@protoc_insertion_point(field_get:micromsg.PluginInstall.PluginFlag)
  return pluginflag_;
}
inline void PluginInstall::set_pluginflag(::google::protobuf::uint32 value) {
  set_has_pluginflag();
  pluginflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PluginInstall.PluginFlag)
}

// required uint32 IsUnInstall = 2;
inline bool PluginInstall::has_isuninstall() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PluginInstall::set_has_isuninstall() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PluginInstall::clear_has_isuninstall() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PluginInstall::clear_isuninstall() {
  isuninstall_ = 0u;
  clear_has_isuninstall();
}
inline ::google::protobuf::uint32 PluginInstall::isuninstall() const {
  // @@protoc_insertion_point(field_get:micromsg.PluginInstall.IsUnInstall)
  return isuninstall_;
}
inline void PluginInstall::set_isuninstall(::google::protobuf::uint32 value) {
  set_has_isuninstall();
  isuninstall_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PluginInstall.IsUnInstall)
}

// -------------------------------------------------------------------

// ModTXNewsCategory

// required uint32 TXNewsCategory = 1;
inline bool ModTXNewsCategory::has_txnewscategory() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModTXNewsCategory::set_has_txnewscategory() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModTXNewsCategory::clear_has_txnewscategory() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModTXNewsCategory::clear_txnewscategory() {
  txnewscategory_ = 0u;
  clear_has_txnewscategory();
}
inline ::google::protobuf::uint32 ModTXNewsCategory::txnewscategory() const {
  // @@protoc_insertion_point(field_get:micromsg.ModTXNewsCategory.TXNewsCategory)
  return txnewscategory_;
}
inline void ModTXNewsCategory::set_txnewscategory(::google::protobuf::uint32 value) {
  set_has_txnewscategory();
  txnewscategory_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModTXNewsCategory.TXNewsCategory)
}

// -------------------------------------------------------------------

// MediaNoteOpLog

// required uint32 WriteCount = 1;
inline bool MediaNoteOpLog::has_writecount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MediaNoteOpLog::set_has_writecount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MediaNoteOpLog::clear_has_writecount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MediaNoteOpLog::clear_writecount() {
  writecount_ = 0u;
  clear_has_writecount();
}
inline ::google::protobuf::uint32 MediaNoteOpLog::writecount() const {
  // @@protoc_insertion_point(field_get:micromsg.MediaNoteOpLog.WriteCount)
  return writecount_;
}
inline void MediaNoteOpLog::set_writecount(::google::protobuf::uint32 value) {
  set_has_writecount();
  writecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.MediaNoteOpLog.WriteCount)
}

// required int32 NoteType = 2;
inline bool MediaNoteOpLog::has_notetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MediaNoteOpLog::set_has_notetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MediaNoteOpLog::clear_has_notetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MediaNoteOpLog::clear_notetype() {
  notetype_ = 0;
  clear_has_notetype();
}
inline ::google::protobuf::int32 MediaNoteOpLog::notetype() const {
  // @@protoc_insertion_point(field_get:micromsg.MediaNoteOpLog.NoteType)
  return notetype_;
}
inline void MediaNoteOpLog::set_notetype(::google::protobuf::int32 value) {
  set_has_notetype();
  notetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.MediaNoteOpLog.NoteType)
}

// -------------------------------------------------------------------

// GmailSwitchOplog

// optional string GmailAcct = 1;
inline bool GmailSwitchOplog::has_gmailacct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GmailSwitchOplog::set_has_gmailacct() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GmailSwitchOplog::clear_has_gmailacct() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GmailSwitchOplog::clear_gmailacct() {
  gmailacct_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gmailacct();
}
inline const ::std::string& GmailSwitchOplog::gmailacct() const {
  // @@protoc_insertion_point(field_get:micromsg.GmailSwitchOplog.GmailAcct)
  return gmailacct_.GetNoArena();
}
inline void GmailSwitchOplog::set_gmailacct(const ::std::string& value) {
  set_has_gmailacct();
  gmailacct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GmailSwitchOplog.GmailAcct)
}
#if LANG_CXX11
inline void GmailSwitchOplog::set_gmailacct(::std::string&& value) {
  set_has_gmailacct();
  gmailacct_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GmailSwitchOplog.GmailAcct)
}
#endif
inline void GmailSwitchOplog::set_gmailacct(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gmailacct();
  gmailacct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GmailSwitchOplog.GmailAcct)
}
inline void GmailSwitchOplog::set_gmailacct(const char* value, size_t size) {
  set_has_gmailacct();
  gmailacct_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GmailSwitchOplog.GmailAcct)
}
inline ::std::string* GmailSwitchOplog::mutable_gmailacct() {
  set_has_gmailacct();
  // @@protoc_insertion_point(field_mutable:micromsg.GmailSwitchOplog.GmailAcct)
  return gmailacct_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GmailSwitchOplog::release_gmailacct() {
  // @@protoc_insertion_point(field_release:micromsg.GmailSwitchOplog.GmailAcct)
  clear_has_gmailacct();
  return gmailacct_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GmailSwitchOplog::set_allocated_gmailacct(::std::string* gmailacct) {
  if (gmailacct != NULL) {
    set_has_gmailacct();
  } else {
    clear_has_gmailacct();
  }
  gmailacct_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gmailacct);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GmailSwitchOplog.GmailAcct)
}

// required uint32 GmailSwitch = 2;
inline bool GmailSwitchOplog::has_gmailswitch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GmailSwitchOplog::set_has_gmailswitch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GmailSwitchOplog::clear_has_gmailswitch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GmailSwitchOplog::clear_gmailswitch() {
  gmailswitch_ = 0u;
  clear_has_gmailswitch();
}
inline ::google::protobuf::uint32 GmailSwitchOplog::gmailswitch() const {
  // @@protoc_insertion_point(field_get:micromsg.GmailSwitchOplog.GmailSwitch)
  return gmailswitch_;
}
inline void GmailSwitchOplog::set_gmailswitch(::google::protobuf::uint32 value) {
  set_has_gmailswitch();
  gmailswitch_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GmailSwitchOplog.GmailSwitch)
}

// -------------------------------------------------------------------

// UpdateStatOpLog

// required uint32 OpCode = 1;
inline bool UpdateStatOpLog::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateStatOpLog::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateStatOpLog::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateStatOpLog::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 UpdateStatOpLog::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.UpdateStatOpLog.OpCode)
  return opcode_;
}
inline void UpdateStatOpLog::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UpdateStatOpLog.OpCode)
}

// -------------------------------------------------------------------

// KVStatItem

// required uint32 Key = 1;
inline bool KVStatItem::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVStatItem::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVStatItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVStatItem::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 KVStatItem::key() const {
  // @@protoc_insertion_point(field_get:micromsg.KVStatItem.Key)
  return key_;
}
inline void KVStatItem::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:micromsg.KVStatItem.Key)
}

// optional string Value = 2;
inline bool KVStatItem::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVStatItem::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVStatItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVStatItem::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& KVStatItem::value() const {
  // @@protoc_insertion_point(field_get:micromsg.KVStatItem.Value)
  return value_.GetNoArena();
}
inline void KVStatItem::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.KVStatItem.Value)
}
#if LANG_CXX11
inline void KVStatItem::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.KVStatItem.Value)
}
#endif
inline void KVStatItem::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.KVStatItem.Value)
}
inline void KVStatItem::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.KVStatItem.Value)
}
inline ::std::string* KVStatItem::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:micromsg.KVStatItem.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVStatItem::release_value() {
  // @@protoc_insertion_point(field_release:micromsg.KVStatItem.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVStatItem::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:micromsg.KVStatItem.Value)
}

// -------------------------------------------------------------------

// KVStatOpLog

// required uint32 Count = 1;
inline bool KVStatOpLog::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVStatOpLog::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVStatOpLog::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVStatOpLog::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 KVStatOpLog::count() const {
  // @@protoc_insertion_point(field_get:micromsg.KVStatOpLog.Count)
  return count_;
}
inline void KVStatOpLog::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.KVStatOpLog.Count)
}

// repeated .micromsg.KVStatItem List = 2;
inline int KVStatOpLog::list_size() const {
  return list_.size();
}
inline void KVStatOpLog::clear_list() {
  list_.Clear();
}
inline const ::micromsg::KVStatItem& KVStatOpLog::list(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.KVStatOpLog.List)
  return list_.Get(index);
}
inline ::micromsg::KVStatItem* KVStatOpLog::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.KVStatOpLog.List)
  return list_.Mutable(index);
}
inline ::micromsg::KVStatItem* KVStatOpLog::add_list() {
  // @@protoc_insertion_point(field_add:micromsg.KVStatOpLog.List)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::KVStatItem >*
KVStatOpLog::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.KVStatOpLog.List)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::KVStatItem >&
KVStatOpLog::list() const {
  // @@protoc_insertion_point(field_list:micromsg.KVStatOpLog.List)
  return list_;
}

// -------------------------------------------------------------------

// KVCmd

// required uint32 Key = 1;
inline bool KVCmd::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVCmd::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVCmd::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVCmd::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 KVCmd::key() const {
  // @@protoc_insertion_point(field_get:micromsg.KVCmd.Key)
  return key_;
}
inline void KVCmd::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:micromsg.KVCmd.Key)
}

// required .micromsg.SKBuiltinBuffer_t Value = 2;
inline bool KVCmd::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVCmd::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVCmd::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVCmd::clear_value() {
  if (value_ != NULL) value_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_value();
}
inline const ::micromsg::SKBuiltinBuffer_t& KVCmd::value() const {
  // @@protoc_insertion_point(field_get:micromsg.KVCmd.Value)
  return value_ != NULL ? *value_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* KVCmd::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.KVCmd.Value)
  return value_;
}
inline ::micromsg::SKBuiltinBuffer_t* KVCmd::release_value() {
  // @@protoc_insertion_point(field_release:micromsg.KVCmd.Value)
  clear_has_value();
  ::micromsg::SKBuiltinBuffer_t* temp = value_;
  value_ = NULL;
  return temp;
}
inline void KVCmd::set_allocated_value(::micromsg::SKBuiltinBuffer_t* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.KVCmd.Value)
}

// -------------------------------------------------------------------

// ThemeOpLog

// required uint32 Key = 1;
inline bool ThemeOpLog::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ThemeOpLog::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ThemeOpLog::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ThemeOpLog::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ThemeOpLog::key() const {
  // @@protoc_insertion_point(field_get:micromsg.ThemeOpLog.Key)
  return key_;
}
inline void ThemeOpLog::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ThemeOpLog.Key)
}

// optional string Value = 2;
inline bool ThemeOpLog::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ThemeOpLog::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ThemeOpLog::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ThemeOpLog::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& ThemeOpLog::value() const {
  // @@protoc_insertion_point(field_get:micromsg.ThemeOpLog.Value)
  return value_.GetNoArena();
}
inline void ThemeOpLog::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ThemeOpLog.Value)
}
#if LANG_CXX11
inline void ThemeOpLog::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ThemeOpLog.Value)
}
#endif
inline void ThemeOpLog::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ThemeOpLog.Value)
}
inline void ThemeOpLog::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ThemeOpLog.Value)
}
inline ::std::string* ThemeOpLog::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:micromsg.ThemeOpLog.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ThemeOpLog::release_value() {
  // @@protoc_insertion_point(field_release:micromsg.ThemeOpLog.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThemeOpLog::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ThemeOpLog.Value)
}

// -------------------------------------------------------------------

// ModDescription

// optional string ContactUsername = 1;
inline bool ModDescription::has_contactusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModDescription::set_has_contactusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModDescription::clear_has_contactusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModDescription::clear_contactusername() {
  contactusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_contactusername();
}
inline const ::std::string& ModDescription::contactusername() const {
  // @@protoc_insertion_point(field_get:micromsg.ModDescription.ContactUsername)
  return contactusername_.GetNoArena();
}
inline void ModDescription::set_contactusername(const ::std::string& value) {
  set_has_contactusername();
  contactusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModDescription.ContactUsername)
}
#if LANG_CXX11
inline void ModDescription::set_contactusername(::std::string&& value) {
  set_has_contactusername();
  contactusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModDescription.ContactUsername)
}
#endif
inline void ModDescription::set_contactusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_contactusername();
  contactusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModDescription.ContactUsername)
}
inline void ModDescription::set_contactusername(const char* value, size_t size) {
  set_has_contactusername();
  contactusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModDescription.ContactUsername)
}
inline ::std::string* ModDescription::mutable_contactusername() {
  set_has_contactusername();
  // @@protoc_insertion_point(field_mutable:micromsg.ModDescription.ContactUsername)
  return contactusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModDescription::release_contactusername() {
  // @@protoc_insertion_point(field_release:micromsg.ModDescription.ContactUsername)
  clear_has_contactusername();
  return contactusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModDescription::set_allocated_contactusername(::std::string* contactusername) {
  if (contactusername != NULL) {
    set_has_contactusername();
  } else {
    clear_has_contactusername();
  }
  contactusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contactusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModDescription.ContactUsername)
}

// optional string Desc = 2;
inline bool ModDescription::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModDescription::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModDescription::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModDescription::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& ModDescription::desc() const {
  // @@protoc_insertion_point(field_get:micromsg.ModDescription.Desc)
  return desc_.GetNoArena();
}
inline void ModDescription::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModDescription.Desc)
}
#if LANG_CXX11
inline void ModDescription::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModDescription.Desc)
}
#endif
inline void ModDescription::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModDescription.Desc)
}
inline void ModDescription::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModDescription.Desc)
}
inline ::std::string* ModDescription::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:micromsg.ModDescription.Desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModDescription::release_desc() {
  // @@protoc_insertion_point(field_release:micromsg.ModDescription.Desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModDescription::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModDescription.Desc)
}

// -------------------------------------------------------------------

// OplogRet

// required uint32 Count = 1;
inline bool OplogRet::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OplogRet::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OplogRet::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OplogRet::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 OplogRet::count() const {
  // @@protoc_insertion_point(field_get:micromsg.OplogRet.Count)
  return count_;
}
inline void OplogRet::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OplogRet.Count)
}

// repeated int32 Ret = 2 [packed = true];
inline int OplogRet::ret_size() const {
  return ret_.size();
}
inline void OplogRet::clear_ret() {
  ret_.Clear();
}
inline ::google::protobuf::int32 OplogRet::ret(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.OplogRet.Ret)
  return ret_.Get(index);
}
inline void OplogRet::set_ret(int index, ::google::protobuf::int32 value) {
  ret_.Set(index, value);
  // @@protoc_insertion_point(field_set:micromsg.OplogRet.Ret)
}
inline void OplogRet::add_ret(::google::protobuf::int32 value) {
  ret_.Add(value);
  // @@protoc_insertion_point(field_add:micromsg.OplogRet.Ret)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
OplogRet::ret() const {
  // @@protoc_insertion_point(field_list:micromsg.OplogRet.Ret)
  return ret_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
OplogRet::mutable_ret() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.OplogRet.Ret)
  return &ret_;
}

// -------------------------------------------------------------------

// OplogRequest

// required .micromsg.CmdList Oplog = 1;
inline bool OplogRequest::has_oplog() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OplogRequest::set_has_oplog() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OplogRequest::clear_has_oplog() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OplogRequest::clear_oplog() {
  if (oplog_ != NULL) oplog_->::micromsg::CmdList::Clear();
  clear_has_oplog();
}
inline const ::micromsg::CmdList& OplogRequest::oplog() const {
  // @@protoc_insertion_point(field_get:micromsg.OplogRequest.Oplog)
  return oplog_ != NULL ? *oplog_
                         : *::micromsg::CmdList::internal_default_instance();
}
inline ::micromsg::CmdList* OplogRequest::mutable_oplog() {
  set_has_oplog();
  if (oplog_ == NULL) {
    oplog_ = new ::micromsg::CmdList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.OplogRequest.Oplog)
  return oplog_;
}
inline ::micromsg::CmdList* OplogRequest::release_oplog() {
  // @@protoc_insertion_point(field_release:micromsg.OplogRequest.Oplog)
  clear_has_oplog();
  ::micromsg::CmdList* temp = oplog_;
  oplog_ = NULL;
  return temp;
}
inline void OplogRequest::set_allocated_oplog(::micromsg::CmdList* oplog) {
  delete oplog_;
  oplog_ = oplog;
  if (oplog) {
    set_has_oplog();
  } else {
    clear_has_oplog();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.OplogRequest.Oplog)
}

// -------------------------------------------------------------------

// OplogResponse

// required int32 Ret = 1;
inline bool OplogResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OplogResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OplogResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OplogResponse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 OplogResponse::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.OplogResponse.Ret)
  return ret_;
}
inline void OplogResponse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OplogResponse.Ret)
}

// required .micromsg.OplogRet OplogRet = 2;
inline bool OplogResponse::has_oplogret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OplogResponse::set_has_oplogret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OplogResponse::clear_has_oplogret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OplogResponse::clear_oplogret() {
  if (oplogret_ != NULL) oplogret_->::micromsg::OplogRet::Clear();
  clear_has_oplogret();
}
inline const ::micromsg::OplogRet& OplogResponse::oplogret() const {
  // @@protoc_insertion_point(field_get:micromsg.OplogResponse.OplogRet)
  return oplogret_ != NULL ? *oplogret_
                         : *::micromsg::OplogRet::internal_default_instance();
}
inline ::micromsg::OplogRet* OplogResponse::mutable_oplogret() {
  set_has_oplogret();
  if (oplogret_ == NULL) {
    oplogret_ = new ::micromsg::OplogRet;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.OplogResponse.OplogRet)
  return oplogret_;
}
inline ::micromsg::OplogRet* OplogResponse::release_oplogret() {
  // @@protoc_insertion_point(field_release:micromsg.OplogResponse.OplogRet)
  clear_has_oplogret();
  ::micromsg::OplogRet* temp = oplogret_;
  oplogret_ = NULL;
  return temp;
}
inline void OplogResponse::set_allocated_oplogret(::micromsg::OplogRet* oplogret) {
  delete oplogret_;
  oplogret_ = oplogret;
  if (oplogret) {
    set_has_oplogret();
  } else {
    clear_has_oplogret();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.OplogResponse.OplogRet)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmsync_2eproto__INCLUDED
