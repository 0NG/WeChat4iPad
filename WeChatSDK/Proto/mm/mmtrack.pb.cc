// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmtrack.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mmtrack.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace micromsg {
class PositionItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PositionItem> {
} _PositionItem_default_instance_;
class TrackPOIItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TrackPOIItem> {
} _TrackPOIItem_default_instance_;
class UserPositionItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserPositionItem> {
} _UserPositionItem_default_instance_;
class RefreshTrackRoomRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RefreshTrackRoomRequest> {
} _RefreshTrackRoomRequest_default_instance_;
class RefreshTrackRoomResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RefreshTrackRoomResponse> {
} _RefreshTrackRoomResponse_default_instance_;
class JoinTrackRoomRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JoinTrackRoomRequest> {
} _JoinTrackRoomRequest_default_instance_;
class JoinTrackRoomResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JoinTrackRoomResponse> {
} _JoinTrackRoomResponse_default_instance_;
class ExitTrackRoomRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ExitTrackRoomRequest> {
} _ExitTrackRoomRequest_default_instance_;
class ExitTrackRoomResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ExitTrackRoomResponse> {
} _ExitTrackRoomResponse_default_instance_;

namespace protobuf_mmtrack_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionItem, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionItem, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionItem, heading_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackPOIItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackPOIItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackPOIItem, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackPOIItem, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackPOIItem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackPOIItem, addr_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPositionItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPositionItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPositionItem, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPositionItem, position_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomRequest, trackroomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomRequest, userposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomRequest, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomRequest, userpoi_),
  1,
  0,
  4,
  2,
  5,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomResponse, positions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomResponse, retmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomResponse, refreshtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshTrackRoomResponse, roompoi_),
  1,
  3,
  ~0u,
  0,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinTrackRoomRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinTrackRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinTrackRoomRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinTrackRoomRequest, chatname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinTrackRoomRequest, scene_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinTrackRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinTrackRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinTrackRoomResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinTrackRoomResponse, trackroomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinTrackRoomResponse, retmsg_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTrackRoomRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTrackRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTrackRoomRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTrackRoomRequest, trackroomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTrackRoomRequest, scene_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTrackRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTrackRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTrackRoomResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTrackRoomResponse, retmsg_),
  1,
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(PositionItem)},
  { 11, 20, sizeof(TrackPOIItem)},
  { 24, 31, sizeof(UserPositionItem)},
  { 33, 44, sizeof(RefreshTrackRoomRequest)},
  { 50, 61, sizeof(RefreshTrackRoomResponse)},
  { 67, 75, sizeof(JoinTrackRoomRequest)},
  { 78, 86, sizeof(JoinTrackRoomResponse)},
  { 89, 97, sizeof(ExitTrackRoomRequest)},
  { 100, 107, sizeof(ExitTrackRoomResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PositionItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrackPOIItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserPositionItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RefreshTrackRoomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RefreshTrackRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JoinTrackRoomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JoinTrackRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExitTrackRoomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExitTrackRoomResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mmtrack.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _PositionItem_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TrackPOIItem_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _UserPositionItem_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _RefreshTrackRoomRequest_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _RefreshTrackRoomResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _JoinTrackRoomRequest_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _JoinTrackRoomResponse_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ExitTrackRoomRequest_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ExitTrackRoomResponse_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::micromsg::protobuf_mmbuiltintype_2eproto::InitDefaults();
  ::micromsg::protobuf_mmbase_2eproto::InitDefaults();
  _PositionItem_default_instance_.DefaultConstruct();
  _TrackPOIItem_default_instance_.DefaultConstruct();
  _UserPositionItem_default_instance_.DefaultConstruct();
  _RefreshTrackRoomRequest_default_instance_.DefaultConstruct();
  _RefreshTrackRoomResponse_default_instance_.DefaultConstruct();
  _JoinTrackRoomRequest_default_instance_.DefaultConstruct();
  _JoinTrackRoomResponse_default_instance_.DefaultConstruct();
  _ExitTrackRoomRequest_default_instance_.DefaultConstruct();
  _ExitTrackRoomResponse_default_instance_.DefaultConstruct();
  _UserPositionItem_default_instance_.get_mutable()->position_ = const_cast< ::micromsg::PositionItem*>(
      ::micromsg::PositionItem::internal_default_instance());
  _RefreshTrackRoomRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RefreshTrackRoomRequest_default_instance_.get_mutable()->userposition_ = const_cast< ::micromsg::UserPositionItem*>(
      ::micromsg::UserPositionItem::internal_default_instance());
  _RefreshTrackRoomRequest_default_instance_.get_mutable()->userpoi_ = const_cast< ::micromsg::TrackPOIItem*>(
      ::micromsg::TrackPOIItem::internal_default_instance());
  _RefreshTrackRoomResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _RefreshTrackRoomResponse_default_instance_.get_mutable()->roompoi_ = const_cast< ::micromsg::TrackPOIItem*>(
      ::micromsg::TrackPOIItem::internal_default_instance());
  _JoinTrackRoomRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _JoinTrackRoomResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _ExitTrackRoomRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _ExitTrackRoomResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rmmtrack.proto\022\010micromsg\032\023mmbuiltintype"
      ".proto\032\014mmbase.proto\"D\n\014PositionItem\022\020\n\010"
      "Latitude\030\001 \002(\001\022\021\n\tLongitude\030\002 \002(\001\022\017\n\007Hea"
      "ding\030\003 \002(\001\"O\n\014TrackPOIItem\022\020\n\010Latitude\030\001"
      " \002(\001\022\021\n\tLongitude\030\002 \002(\001\022\014\n\004Name\030\003 \001(\t\022\014\n"
      "\004Addr\030\004 \001(\t\"N\n\020UserPositionItem\022\020\n\010Usern"
      "ame\030\001 \001(\t\022(\n\010Position\030\002 \002(\0132\026.micromsg.P"
      "ositionItem\"\326\001\n\027RefreshTrackRoomRequest\022"
      "*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseRequ"
      "est\022\023\n\013TrackRoomID\030\002 \001(\t\022\014\n\004Type\030\003 \002(\005\0220"
      "\n\014UserPosition\030\004 \002(\0132\032.micromsg.UserPosi"
      "tionItem\022\021\n\tTimeStamp\030\005 \001(\r\022\'\n\007UserPoi\030\006"
      " \001(\0132\026.micromsg.TrackPOIItem\"\324\001\n\030Refresh"
      "TrackRoomResponse\022,\n\014BaseResponse\030\001 \002(\0132"
      "\026.micromsg.BaseResponse\022\r\n\005Count\030\002 \002(\r\022-"
      "\n\tPositions\030\003 \003(\0132\032.micromsg.UserPositio"
      "nItem\022\016\n\006RetMsg\030\004 \001(\t\022\023\n\013RefreshTime\030\005 \001"
      "(\r\022\'\n\007RoomPoi\030\006 \001(\0132\026.micromsg.TrackPOII"
      "tem\"c\n\024JoinTrackRoomRequest\022*\n\013BaseReque"
      "st\030\001 \002(\0132\025.micromsg.BaseRequest\022\020\n\010Chatn"
      "ame\030\002 \001(\t\022\r\n\005Scene\030\003 \001(\r\"j\n\025JoinTrackRoo"
      "mResponse\022,\n\014BaseResponse\030\001 \002(\0132\026.microm"
      "sg.BaseResponse\022\023\n\013TrackRoomID\030\002 \001(\t\022\016\n\006"
      "RetMsg\030\003 \001(\t\"f\n\024ExitTrackRoomRequest\022*\n\013"
      "BaseRequest\030\001 \002(\0132\025.micromsg.BaseRequest"
      "\022\023\n\013TrackRoomID\030\002 \001(\t\022\r\n\005Scene\030\003 \001(\r\"U\n\025"
      "ExitTrackRoomResponse\022,\n\014BaseResponse\030\001 "
      "\002(\0132\026.micromsg.BaseResponse\022\016\n\006RetMsg\030\002 "
      "\001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1123);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mmtrack.proto", &protobuf_RegisterTypes);
  ::micromsg::protobuf_mmbuiltintype_2eproto::AddDescriptors();
  ::micromsg::protobuf_mmbase_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mmtrack_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionItem::kLatitudeFieldNumber;
const int PositionItem::kLongitudeFieldNumber;
const int PositionItem::kHeadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionItem::PositionItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmtrack_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.PositionItem)
}
PositionItem::PositionItem(const PositionItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&latitude_, &from.latitude_,
    reinterpret_cast<char*>(&heading_) -
    reinterpret_cast<char*>(&latitude_) + sizeof(heading_));
  // @@protoc_insertion_point(copy_constructor:micromsg.PositionItem)
}

void PositionItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&latitude_, 0, reinterpret_cast<char*>(&heading_) -
    reinterpret_cast<char*>(&latitude_) + sizeof(heading_));
}

PositionItem::~PositionItem() {
  // @@protoc_insertion_point(destructor:micromsg.PositionItem)
  SharedDtor();
}

void PositionItem::SharedDtor() {
}

void PositionItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PositionItem::descriptor() {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PositionItem& PositionItem::default_instance() {
  protobuf_mmtrack_2eproto::InitDefaults();
  return *internal_default_instance();
}

PositionItem* PositionItem::New(::google::protobuf::Arena* arena) const {
  PositionItem* n = new PositionItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PositionItem::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.PositionItem)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&latitude_, 0, reinterpret_cast<char*>(&heading_) -
      reinterpret_cast<char*>(&latitude_) + sizeof(heading_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PositionItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.PositionItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double Latitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Heading = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_heading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.PositionItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.PositionItem)
  return false;
#undef DO_
}

void PositionItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.PositionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double Latitude = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->latitude(), output);
  }

  // required double Longitude = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // required double Heading = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->heading(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.PositionItem)
}

::google::protobuf::uint8* PositionItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.PositionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double Latitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->latitude(), target);
  }

  // required double Longitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }

  // required double Heading = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->heading(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.PositionItem)
  return target;
}

size_t PositionItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.PositionItem)
  size_t total_size = 0;

  if (has_latitude()) {
    // required double Latitude = 1;
    total_size += 1 + 8;
  }

  if (has_longitude()) {
    // required double Longitude = 2;
    total_size += 1 + 8;
  }

  if (has_heading()) {
    // required double Heading = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t PositionItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.PositionItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required double Latitude = 1;
    total_size += 1 + 8;

    // required double Longitude = 2;
    total_size += 1 + 8;

    // required double Heading = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PositionItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.PositionItem)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PositionItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.PositionItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.PositionItem)
    MergeFrom(*source);
  }
}

void PositionItem::MergeFrom(const PositionItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.PositionItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000002u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      heading_ = from.heading_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PositionItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.PositionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionItem::CopyFrom(const PositionItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.PositionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PositionItem::Swap(PositionItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionItem::InternalSwap(PositionItem* other) {
  std::swap(latitude_, other->latitude_);
  std::swap(longitude_, other->longitude_);
  std::swap(heading_, other->heading_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PositionItem::GetMetadata() const {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PositionItem

// required double Latitude = 1;
bool PositionItem::has_latitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PositionItem::set_has_latitude() {
  _has_bits_[0] |= 0x00000001u;
}
void PositionItem::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000001u;
}
void PositionItem::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
double PositionItem::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.PositionItem.Latitude)
  return latitude_;
}
void PositionItem::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PositionItem.Latitude)
}

// required double Longitude = 2;
bool PositionItem::has_longitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PositionItem::set_has_longitude() {
  _has_bits_[0] |= 0x00000002u;
}
void PositionItem::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000002u;
}
void PositionItem::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
double PositionItem::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.PositionItem.Longitude)
  return longitude_;
}
void PositionItem::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PositionItem.Longitude)
}

// required double Heading = 3;
bool PositionItem::has_heading() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PositionItem::set_has_heading() {
  _has_bits_[0] |= 0x00000004u;
}
void PositionItem::clear_has_heading() {
  _has_bits_[0] &= ~0x00000004u;
}
void PositionItem::clear_heading() {
  heading_ = 0;
  clear_has_heading();
}
double PositionItem::heading() const {
  // @@protoc_insertion_point(field_get:micromsg.PositionItem.Heading)
  return heading_;
}
void PositionItem::set_heading(double value) {
  set_has_heading();
  heading_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PositionItem.Heading)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackPOIItem::kLatitudeFieldNumber;
const int TrackPOIItem::kLongitudeFieldNumber;
const int TrackPOIItem::kNameFieldNumber;
const int TrackPOIItem::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackPOIItem::TrackPOIItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmtrack_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.TrackPOIItem)
}
TrackPOIItem::TrackPOIItem(const TrackPOIItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_addr()) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  ::memcpy(&latitude_, &from.latitude_,
    reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:micromsg.TrackPOIItem)
}

void TrackPOIItem::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&latitude_, 0, reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_) + sizeof(longitude_));
}

TrackPOIItem::~TrackPOIItem() {
  // @@protoc_insertion_point(destructor:micromsg.TrackPOIItem)
  SharedDtor();
}

void TrackPOIItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrackPOIItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrackPOIItem::descriptor() {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrackPOIItem& TrackPOIItem::default_instance() {
  protobuf_mmtrack_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrackPOIItem* TrackPOIItem::New(::google::protobuf::Arena* arena) const {
  TrackPOIItem* n = new TrackPOIItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrackPOIItem::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.TrackPOIItem)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_addr()) {
      GOOGLE_DCHECK(!addr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*addr_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&latitude_, 0, reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&latitude_) + sizeof(longitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TrackPOIItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.TrackPOIItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double Latitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.TrackPOIItem.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Addr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.TrackPOIItem.Addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.TrackPOIItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.TrackPOIItem)
  return false;
#undef DO_
}

void TrackPOIItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.TrackPOIItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double Latitude = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->latitude(), output);
  }

  // required double Longitude = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // optional string Name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.TrackPOIItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string Addr = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.TrackPOIItem.Addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.TrackPOIItem)
}

::google::protobuf::uint8* TrackPOIItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.TrackPOIItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double Latitude = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->latitude(), target);
  }

  // required double Longitude = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }

  // optional string Name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.TrackPOIItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string Addr = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.TrackPOIItem.Addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.TrackPOIItem)
  return target;
}

size_t TrackPOIItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.TrackPOIItem)
  size_t total_size = 0;

  if (has_latitude()) {
    // required double Latitude = 1;
    total_size += 1 + 8;
  }

  if (has_longitude()) {
    // required double Longitude = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t TrackPOIItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.TrackPOIItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required double Latitude = 1;
    total_size += 1 + 8;

    // required double Longitude = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string Name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string Addr = 4;
    if (has_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->addr());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrackPOIItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.TrackPOIItem)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackPOIItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackPOIItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.TrackPOIItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.TrackPOIItem)
    MergeFrom(*source);
  }
}

void TrackPOIItem::MergeFrom(const TrackPOIItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.TrackPOIItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_addr();
      addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
    }
    if (cached_has_bits & 0x00000004u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000008u) {
      longitude_ = from.longitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TrackPOIItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.TrackPOIItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackPOIItem::CopyFrom(const TrackPOIItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.TrackPOIItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackPOIItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void TrackPOIItem::Swap(TrackPOIItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackPOIItem::InternalSwap(TrackPOIItem* other) {
  name_.Swap(&other->name_);
  addr_.Swap(&other->addr_);
  std::swap(latitude_, other->latitude_);
  std::swap(longitude_, other->longitude_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrackPOIItem::GetMetadata() const {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrackPOIItem

// required double Latitude = 1;
bool TrackPOIItem::has_latitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TrackPOIItem::set_has_latitude() {
  _has_bits_[0] |= 0x00000004u;
}
void TrackPOIItem::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000004u;
}
void TrackPOIItem::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
double TrackPOIItem::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.TrackPOIItem.Latitude)
  return latitude_;
}
void TrackPOIItem::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.TrackPOIItem.Latitude)
}

// required double Longitude = 2;
bool TrackPOIItem::has_longitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TrackPOIItem::set_has_longitude() {
  _has_bits_[0] |= 0x00000008u;
}
void TrackPOIItem::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000008u;
}
void TrackPOIItem::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
double TrackPOIItem::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.TrackPOIItem.Longitude)
  return longitude_;
}
void TrackPOIItem::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.TrackPOIItem.Longitude)
}

// optional string Name = 3;
bool TrackPOIItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TrackPOIItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void TrackPOIItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void TrackPOIItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& TrackPOIItem::name() const {
  // @@protoc_insertion_point(field_get:micromsg.TrackPOIItem.Name)
  return name_.GetNoArena();
}
void TrackPOIItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.TrackPOIItem.Name)
}
#if LANG_CXX11
void TrackPOIItem::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.TrackPOIItem.Name)
}
#endif
void TrackPOIItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.TrackPOIItem.Name)
}
void TrackPOIItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.TrackPOIItem.Name)
}
::std::string* TrackPOIItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.TrackPOIItem.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackPOIItem::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.TrackPOIItem.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackPOIItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.TrackPOIItem.Name)
}

// optional string Addr = 4;
bool TrackPOIItem::has_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TrackPOIItem::set_has_addr() {
  _has_bits_[0] |= 0x00000002u;
}
void TrackPOIItem::clear_has_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
void TrackPOIItem::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
const ::std::string& TrackPOIItem::addr() const {
  // @@protoc_insertion_point(field_get:micromsg.TrackPOIItem.Addr)
  return addr_.GetNoArena();
}
void TrackPOIItem::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.TrackPOIItem.Addr)
}
#if LANG_CXX11
void TrackPOIItem::set_addr(::std::string&& value) {
  set_has_addr();
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.TrackPOIItem.Addr)
}
#endif
void TrackPOIItem::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.TrackPOIItem.Addr)
}
void TrackPOIItem::set_addr(const char* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.TrackPOIItem.Addr)
}
::std::string* TrackPOIItem::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:micromsg.TrackPOIItem.Addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackPOIItem::release_addr() {
  // @@protoc_insertion_point(field_release:micromsg.TrackPOIItem.Addr)
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackPOIItem::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.TrackPOIItem.Addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserPositionItem::kUsernameFieldNumber;
const int UserPositionItem::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserPositionItem::UserPositionItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmtrack_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.UserPositionItem)
}
UserPositionItem::UserPositionItem(const UserPositionItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_position()) {
    position_ = new ::micromsg::PositionItem(*from.position_);
  } else {
    position_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.UserPositionItem)
}

void UserPositionItem::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_ = NULL;
}

UserPositionItem::~UserPositionItem() {
  // @@protoc_insertion_point(destructor:micromsg.UserPositionItem)
  SharedDtor();
}

void UserPositionItem::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete position_;
  }
}

void UserPositionItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserPositionItem::descriptor() {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserPositionItem& UserPositionItem::default_instance() {
  protobuf_mmtrack_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserPositionItem* UserPositionItem::New(::google::protobuf::Arena* arena) const {
  UserPositionItem* n = new UserPositionItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserPositionItem::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.UserPositionItem)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_position()) {
      GOOGLE_DCHECK(position_ != NULL);
      position_->::micromsg::PositionItem::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserPositionItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.UserPositionItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.UserPositionItem.Username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.PositionItem Position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.UserPositionItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.UserPositionItem)
  return false;
#undef DO_
}

void UserPositionItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.UserPositionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Username = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UserPositionItem.Username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required .micromsg.PositionItem Position = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->position_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.UserPositionItem)
}

::google::protobuf::uint8* UserPositionItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.UserPositionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Username = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UserPositionItem.Username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required .micromsg.PositionItem Position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->position_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.UserPositionItem)
  return target;
}

size_t UserPositionItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.UserPositionItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.PositionItem Position = 2;
  if (has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }
  // optional string Username = 1;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserPositionItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.UserPositionItem)
  GOOGLE_DCHECK_NE(&from, this);
  const UserPositionItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserPositionItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.UserPositionItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.UserPositionItem)
    MergeFrom(*source);
  }
}

void UserPositionItem::MergeFrom(const UserPositionItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.UserPositionItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_position()->::micromsg::PositionItem::MergeFrom(from.position());
    }
  }
}

void UserPositionItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.UserPositionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserPositionItem::CopyFrom(const UserPositionItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.UserPositionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserPositionItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_position()) {
    if (!this->position_->IsInitialized()) return false;
  }
  return true;
}

void UserPositionItem::Swap(UserPositionItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserPositionItem::InternalSwap(UserPositionItem* other) {
  username_.Swap(&other->username_);
  std::swap(position_, other->position_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserPositionItem::GetMetadata() const {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserPositionItem

// optional string Username = 1;
bool UserPositionItem::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserPositionItem::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void UserPositionItem::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserPositionItem::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& UserPositionItem::username() const {
  // @@protoc_insertion_point(field_get:micromsg.UserPositionItem.Username)
  return username_.GetNoArena();
}
void UserPositionItem::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UserPositionItem.Username)
}
#if LANG_CXX11
void UserPositionItem::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UserPositionItem.Username)
}
#endif
void UserPositionItem::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UserPositionItem.Username)
}
void UserPositionItem::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UserPositionItem.Username)
}
::std::string* UserPositionItem::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.UserPositionItem.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserPositionItem::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.UserPositionItem.Username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserPositionItem::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UserPositionItem.Username)
}

// required .micromsg.PositionItem Position = 2;
bool UserPositionItem::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserPositionItem::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
void UserPositionItem::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserPositionItem::clear_position() {
  if (position_ != NULL) position_->::micromsg::PositionItem::Clear();
  clear_has_position();
}
const ::micromsg::PositionItem& UserPositionItem::position() const {
  // @@protoc_insertion_point(field_get:micromsg.UserPositionItem.Position)
  return position_ != NULL ? *position_
                         : *::micromsg::PositionItem::internal_default_instance();
}
::micromsg::PositionItem* UserPositionItem::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::micromsg::PositionItem;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.UserPositionItem.Position)
  return position_;
}
::micromsg::PositionItem* UserPositionItem::release_position() {
  // @@protoc_insertion_point(field_release:micromsg.UserPositionItem.Position)
  clear_has_position();
  ::micromsg::PositionItem* temp = position_;
  position_ = NULL;
  return temp;
}
void UserPositionItem::set_allocated_position(::micromsg::PositionItem* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.UserPositionItem.Position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshTrackRoomRequest::kBaseRequestFieldNumber;
const int RefreshTrackRoomRequest::kTrackRoomIDFieldNumber;
const int RefreshTrackRoomRequest::kTypeFieldNumber;
const int RefreshTrackRoomRequest::kUserPositionFieldNumber;
const int RefreshTrackRoomRequest::kTimeStampFieldNumber;
const int RefreshTrackRoomRequest::kUserPoiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshTrackRoomRequest::RefreshTrackRoomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmtrack_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RefreshTrackRoomRequest)
}
RefreshTrackRoomRequest::RefreshTrackRoomRequest(const RefreshTrackRoomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trackroomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trackroomid()) {
    trackroomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackroomid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_userposition()) {
    userposition_ = new ::micromsg::UserPositionItem(*from.userposition_);
  } else {
    userposition_ = NULL;
  }
  if (from.has_userpoi()) {
    userpoi_ = new ::micromsg::TrackPOIItem(*from.userpoi_);
  } else {
    userpoi_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&type_) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RefreshTrackRoomRequest)
}

void RefreshTrackRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  trackroomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(timestamp_));
}

RefreshTrackRoomRequest::~RefreshTrackRoomRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RefreshTrackRoomRequest)
  SharedDtor();
}

void RefreshTrackRoomRequest::SharedDtor() {
  trackroomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete userposition_;
  }
  if (this != internal_default_instance()) {
    delete userpoi_;
  }
}

void RefreshTrackRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshTrackRoomRequest::descriptor() {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshTrackRoomRequest& RefreshTrackRoomRequest::default_instance() {
  protobuf_mmtrack_2eproto::InitDefaults();
  return *internal_default_instance();
}

RefreshTrackRoomRequest* RefreshTrackRoomRequest::New(::google::protobuf::Arena* arena) const {
  RefreshTrackRoomRequest* n = new RefreshTrackRoomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefreshTrackRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RefreshTrackRoomRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_trackroomid()) {
      GOOGLE_DCHECK(!trackroomid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*trackroomid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_userposition()) {
      GOOGLE_DCHECK(userposition_ != NULL);
      userposition_->::micromsg::UserPositionItem::Clear();
    }
    if (has_userpoi()) {
      GOOGLE_DCHECK(userpoi_ != NULL);
      userpoi_->::micromsg::TrackPOIItem::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 48u) {
    ::memset(&type_, 0, reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&type_) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RefreshTrackRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RefreshTrackRoomRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string TrackRoomID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackroomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trackroomid().data(), this->trackroomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RefreshTrackRoomRequest.TrackRoomID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.UserPositionItem UserPosition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 TimeStamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.TrackPOIItem UserPoi = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userpoi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RefreshTrackRoomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RefreshTrackRoomRequest)
  return false;
#undef DO_
}

void RefreshTrackRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RefreshTrackRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string TrackRoomID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackroomid().data(), this->trackroomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RefreshTrackRoomRequest.TrackRoomID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trackroomid(), output);
  }

  // required int32 Type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // required .micromsg.UserPositionItem UserPosition = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->userposition_, output);
  }

  // optional uint32 TimeStamp = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->timestamp(), output);
  }

  // optional .micromsg.TrackPOIItem UserPoi = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->userpoi_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RefreshTrackRoomRequest)
}

::google::protobuf::uint8* RefreshTrackRoomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RefreshTrackRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string TrackRoomID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackroomid().data(), this->trackroomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RefreshTrackRoomRequest.TrackRoomID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trackroomid(), target);
  }

  // required int32 Type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // required .micromsg.UserPositionItem UserPosition = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->userposition_, deterministic, target);
  }

  // optional uint32 TimeStamp = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->timestamp(), target);
  }

  // optional .micromsg.TrackPOIItem UserPoi = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->userpoi_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RefreshTrackRoomRequest)
  return target;
}

size_t RefreshTrackRoomRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RefreshTrackRoomRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_userposition()) {
    // required .micromsg.UserPositionItem UserPosition = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userposition_);
  }

  if (has_type()) {
    // required int32 Type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t RefreshTrackRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RefreshTrackRoomRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000016) ^ 0x00000016) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.UserPositionItem UserPosition = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userposition_);

    // required int32 Type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string TrackRoomID = 2;
  if (has_trackroomid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trackroomid());
  }

  // optional .micromsg.TrackPOIItem UserPoi = 6;
  if (has_userpoi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userpoi_);
  }

  // optional uint32 TimeStamp = 5;
  if (has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshTrackRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RefreshTrackRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshTrackRoomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshTrackRoomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RefreshTrackRoomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RefreshTrackRoomRequest)
    MergeFrom(*source);
  }
}

void RefreshTrackRoomRequest::MergeFrom(const RefreshTrackRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RefreshTrackRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_trackroomid();
      trackroomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackroomid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_userposition()->::micromsg::UserPositionItem::MergeFrom(from.userposition());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_userpoi()->::micromsg::TrackPOIItem::MergeFrom(from.userpoi());
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000020u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RefreshTrackRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RefreshTrackRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshTrackRoomRequest::CopyFrom(const RefreshTrackRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RefreshTrackRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshTrackRoomRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000016) != 0x00000016) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_userposition()) {
    if (!this->userposition_->IsInitialized()) return false;
  }
  if (has_userpoi()) {
    if (!this->userpoi_->IsInitialized()) return false;
  }
  return true;
}

void RefreshTrackRoomRequest::Swap(RefreshTrackRoomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshTrackRoomRequest::InternalSwap(RefreshTrackRoomRequest* other) {
  trackroomid_.Swap(&other->trackroomid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(userposition_, other->userposition_);
  std::swap(userpoi_, other->userpoi_);
  std::swap(type_, other->type_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefreshTrackRoomRequest::GetMetadata() const {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefreshTrackRoomRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RefreshTrackRoomRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RefreshTrackRoomRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void RefreshTrackRoomRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void RefreshTrackRoomRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RefreshTrackRoomRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RefreshTrackRoomRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RefreshTrackRoomRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RefreshTrackRoomRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RefreshTrackRoomRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RefreshTrackRoomRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RefreshTrackRoomRequest.BaseRequest)
}

// optional string TrackRoomID = 2;
bool RefreshTrackRoomRequest::has_trackroomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RefreshTrackRoomRequest::set_has_trackroomid() {
  _has_bits_[0] |= 0x00000001u;
}
void RefreshTrackRoomRequest::clear_has_trackroomid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RefreshTrackRoomRequest::clear_trackroomid() {
  trackroomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trackroomid();
}
const ::std::string& RefreshTrackRoomRequest::trackroomid() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomRequest.TrackRoomID)
  return trackroomid_.GetNoArena();
}
void RefreshTrackRoomRequest::set_trackroomid(const ::std::string& value) {
  set_has_trackroomid();
  trackroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RefreshTrackRoomRequest.TrackRoomID)
}
#if LANG_CXX11
void RefreshTrackRoomRequest::set_trackroomid(::std::string&& value) {
  set_has_trackroomid();
  trackroomid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RefreshTrackRoomRequest.TrackRoomID)
}
#endif
void RefreshTrackRoomRequest::set_trackroomid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_trackroomid();
  trackroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RefreshTrackRoomRequest.TrackRoomID)
}
void RefreshTrackRoomRequest::set_trackroomid(const char* value, size_t size) {
  set_has_trackroomid();
  trackroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RefreshTrackRoomRequest.TrackRoomID)
}
::std::string* RefreshTrackRoomRequest::mutable_trackroomid() {
  set_has_trackroomid();
  // @@protoc_insertion_point(field_mutable:micromsg.RefreshTrackRoomRequest.TrackRoomID)
  return trackroomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RefreshTrackRoomRequest::release_trackroomid() {
  // @@protoc_insertion_point(field_release:micromsg.RefreshTrackRoomRequest.TrackRoomID)
  clear_has_trackroomid();
  return trackroomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RefreshTrackRoomRequest::set_allocated_trackroomid(::std::string* trackroomid) {
  if (trackroomid != NULL) {
    set_has_trackroomid();
  } else {
    clear_has_trackroomid();
  }
  trackroomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trackroomid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RefreshTrackRoomRequest.TrackRoomID)
}

// required int32 Type = 3;
bool RefreshTrackRoomRequest::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RefreshTrackRoomRequest::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
void RefreshTrackRoomRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void RefreshTrackRoomRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
::google::protobuf::int32 RefreshTrackRoomRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomRequest.Type)
  return type_;
}
void RefreshTrackRoomRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RefreshTrackRoomRequest.Type)
}

// required .micromsg.UserPositionItem UserPosition = 4;
bool RefreshTrackRoomRequest::has_userposition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RefreshTrackRoomRequest::set_has_userposition() {
  _has_bits_[0] |= 0x00000004u;
}
void RefreshTrackRoomRequest::clear_has_userposition() {
  _has_bits_[0] &= ~0x00000004u;
}
void RefreshTrackRoomRequest::clear_userposition() {
  if (userposition_ != NULL) userposition_->::micromsg::UserPositionItem::Clear();
  clear_has_userposition();
}
const ::micromsg::UserPositionItem& RefreshTrackRoomRequest::userposition() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomRequest.UserPosition)
  return userposition_ != NULL ? *userposition_
                         : *::micromsg::UserPositionItem::internal_default_instance();
}
::micromsg::UserPositionItem* RefreshTrackRoomRequest::mutable_userposition() {
  set_has_userposition();
  if (userposition_ == NULL) {
    userposition_ = new ::micromsg::UserPositionItem;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RefreshTrackRoomRequest.UserPosition)
  return userposition_;
}
::micromsg::UserPositionItem* RefreshTrackRoomRequest::release_userposition() {
  // @@protoc_insertion_point(field_release:micromsg.RefreshTrackRoomRequest.UserPosition)
  clear_has_userposition();
  ::micromsg::UserPositionItem* temp = userposition_;
  userposition_ = NULL;
  return temp;
}
void RefreshTrackRoomRequest::set_allocated_userposition(::micromsg::UserPositionItem* userposition) {
  delete userposition_;
  userposition_ = userposition;
  if (userposition) {
    set_has_userposition();
  } else {
    clear_has_userposition();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RefreshTrackRoomRequest.UserPosition)
}

// optional uint32 TimeStamp = 5;
bool RefreshTrackRoomRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RefreshTrackRoomRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
void RefreshTrackRoomRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
void RefreshTrackRoomRequest::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
::google::protobuf::uint32 RefreshTrackRoomRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomRequest.TimeStamp)
  return timestamp_;
}
void RefreshTrackRoomRequest::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RefreshTrackRoomRequest.TimeStamp)
}

// optional .micromsg.TrackPOIItem UserPoi = 6;
bool RefreshTrackRoomRequest::has_userpoi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RefreshTrackRoomRequest::set_has_userpoi() {
  _has_bits_[0] |= 0x00000008u;
}
void RefreshTrackRoomRequest::clear_has_userpoi() {
  _has_bits_[0] &= ~0x00000008u;
}
void RefreshTrackRoomRequest::clear_userpoi() {
  if (userpoi_ != NULL) userpoi_->::micromsg::TrackPOIItem::Clear();
  clear_has_userpoi();
}
const ::micromsg::TrackPOIItem& RefreshTrackRoomRequest::userpoi() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomRequest.UserPoi)
  return userpoi_ != NULL ? *userpoi_
                         : *::micromsg::TrackPOIItem::internal_default_instance();
}
::micromsg::TrackPOIItem* RefreshTrackRoomRequest::mutable_userpoi() {
  set_has_userpoi();
  if (userpoi_ == NULL) {
    userpoi_ = new ::micromsg::TrackPOIItem;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RefreshTrackRoomRequest.UserPoi)
  return userpoi_;
}
::micromsg::TrackPOIItem* RefreshTrackRoomRequest::release_userpoi() {
  // @@protoc_insertion_point(field_release:micromsg.RefreshTrackRoomRequest.UserPoi)
  clear_has_userpoi();
  ::micromsg::TrackPOIItem* temp = userpoi_;
  userpoi_ = NULL;
  return temp;
}
void RefreshTrackRoomRequest::set_allocated_userpoi(::micromsg::TrackPOIItem* userpoi) {
  delete userpoi_;
  userpoi_ = userpoi;
  if (userpoi) {
    set_has_userpoi();
  } else {
    clear_has_userpoi();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RefreshTrackRoomRequest.UserPoi)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshTrackRoomResponse::kBaseResponseFieldNumber;
const int RefreshTrackRoomResponse::kCountFieldNumber;
const int RefreshTrackRoomResponse::kPositionsFieldNumber;
const int RefreshTrackRoomResponse::kRetMsgFieldNumber;
const int RefreshTrackRoomResponse::kRefreshTimeFieldNumber;
const int RefreshTrackRoomResponse::kRoomPoiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshTrackRoomResponse::RefreshTrackRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmtrack_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RefreshTrackRoomResponse)
}
RefreshTrackRoomResponse::RefreshTrackRoomResponse(const RefreshTrackRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      positions_(from.positions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_roompoi()) {
    roompoi_ = new ::micromsg::TrackPOIItem(*from.roompoi_);
  } else {
    roompoi_ = NULL;
  }
  ::memcpy(&count_, &from.count_,
    reinterpret_cast<char*>(&refreshtime_) -
    reinterpret_cast<char*>(&count_) + sizeof(refreshtime_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RefreshTrackRoomResponse)
}

void RefreshTrackRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&refreshtime_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(refreshtime_));
}

RefreshTrackRoomResponse::~RefreshTrackRoomResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RefreshTrackRoomResponse)
  SharedDtor();
}

void RefreshTrackRoomResponse::SharedDtor() {
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete roompoi_;
  }
}

void RefreshTrackRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshTrackRoomResponse::descriptor() {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshTrackRoomResponse& RefreshTrackRoomResponse::default_instance() {
  protobuf_mmtrack_2eproto::InitDefaults();
  return *internal_default_instance();
}

RefreshTrackRoomResponse* RefreshTrackRoomResponse::New(::google::protobuf::Arena* arena) const {
  RefreshTrackRoomResponse* n = new RefreshTrackRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefreshTrackRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RefreshTrackRoomResponse)
  positions_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_roompoi()) {
      GOOGLE_DCHECK(roompoi_ != NULL);
      roompoi_->::micromsg::TrackPOIItem::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&count_, 0, reinterpret_cast<char*>(&refreshtime_) -
      reinterpret_cast<char*>(&count_) + sizeof(refreshtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RefreshTrackRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RefreshTrackRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.UserPositionItem Positions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_positions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RefreshTrackRoomResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 RefreshTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_refreshtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refreshtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.TrackPOIItem RoomPoi = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roompoi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RefreshTrackRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RefreshTrackRoomResponse)
  return false;
#undef DO_
}

void RefreshTrackRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RefreshTrackRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // repeated .micromsg.UserPositionItem Positions = 3;
  for (unsigned int i = 0, n = this->positions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->positions(i), output);
  }

  // optional string RetMsg = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RefreshTrackRoomResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->retmsg(), output);
  }

  // optional uint32 RefreshTime = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->refreshtime(), output);
  }

  // optional .micromsg.TrackPOIItem RoomPoi = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->roompoi_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RefreshTrackRoomResponse)
}

::google::protobuf::uint8* RefreshTrackRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RefreshTrackRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // repeated .micromsg.UserPositionItem Positions = 3;
  for (unsigned int i = 0, n = this->positions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->positions(i), deterministic, target);
  }

  // optional string RetMsg = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RefreshTrackRoomResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->retmsg(), target);
  }

  // optional uint32 RefreshTime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->refreshtime(), target);
  }

  // optional .micromsg.TrackPOIItem RoomPoi = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->roompoi_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RefreshTrackRoomResponse)
  return target;
}

size_t RefreshTrackRoomResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RefreshTrackRoomResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_count()) {
    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  return total_size;
}
size_t RefreshTrackRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RefreshTrackRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000a) ^ 0x0000000a) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.UserPositionItem Positions = 3;
  {
    unsigned int count = this->positions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->positions(i));
    }
  }

  // optional string RetMsg = 4;
  if (has_retmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retmsg());
  }

  // optional .micromsg.TrackPOIItem RoomPoi = 6;
  if (has_roompoi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roompoi_);
  }

  // optional uint32 RefreshTime = 5;
  if (has_refreshtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refreshtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshTrackRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RefreshTrackRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshTrackRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshTrackRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RefreshTrackRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RefreshTrackRoomResponse)
    MergeFrom(*source);
  }
}

void RefreshTrackRoomResponse::MergeFrom(const RefreshTrackRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RefreshTrackRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positions_.MergeFrom(from.positions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_roompoi()->::micromsg::TrackPOIItem::MergeFrom(from.roompoi());
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000010u) {
      refreshtime_ = from.refreshtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RefreshTrackRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RefreshTrackRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshTrackRoomResponse::CopyFrom(const RefreshTrackRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RefreshTrackRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshTrackRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000a) != 0x0000000a) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->positions())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_roompoi()) {
    if (!this->roompoi_->IsInitialized()) return false;
  }
  return true;
}

void RefreshTrackRoomResponse::Swap(RefreshTrackRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshTrackRoomResponse::InternalSwap(RefreshTrackRoomResponse* other) {
  positions_.InternalSwap(&other->positions_);
  retmsg_.Swap(&other->retmsg_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(roompoi_, other->roompoi_);
  std::swap(count_, other->count_);
  std::swap(refreshtime_, other->refreshtime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefreshTrackRoomResponse::GetMetadata() const {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefreshTrackRoomResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool RefreshTrackRoomResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RefreshTrackRoomResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void RefreshTrackRoomResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void RefreshTrackRoomResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RefreshTrackRoomResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RefreshTrackRoomResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RefreshTrackRoomResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RefreshTrackRoomResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RefreshTrackRoomResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RefreshTrackRoomResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RefreshTrackRoomResponse.BaseResponse)
}

// required uint32 Count = 2;
bool RefreshTrackRoomResponse::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RefreshTrackRoomResponse::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
void RefreshTrackRoomResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
void RefreshTrackRoomResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 RefreshTrackRoomResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomResponse.Count)
  return count_;
}
void RefreshTrackRoomResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RefreshTrackRoomResponse.Count)
}

// repeated .micromsg.UserPositionItem Positions = 3;
int RefreshTrackRoomResponse::positions_size() const {
  return positions_.size();
}
void RefreshTrackRoomResponse::clear_positions() {
  positions_.Clear();
}
const ::micromsg::UserPositionItem& RefreshTrackRoomResponse::positions(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomResponse.Positions)
  return positions_.Get(index);
}
::micromsg::UserPositionItem* RefreshTrackRoomResponse::mutable_positions(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RefreshTrackRoomResponse.Positions)
  return positions_.Mutable(index);
}
::micromsg::UserPositionItem* RefreshTrackRoomResponse::add_positions() {
  // @@protoc_insertion_point(field_add:micromsg.RefreshTrackRoomResponse.Positions)
  return positions_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::UserPositionItem >*
RefreshTrackRoomResponse::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RefreshTrackRoomResponse.Positions)
  return &positions_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::UserPositionItem >&
RefreshTrackRoomResponse::positions() const {
  // @@protoc_insertion_point(field_list:micromsg.RefreshTrackRoomResponse.Positions)
  return positions_;
}

// optional string RetMsg = 4;
bool RefreshTrackRoomResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RefreshTrackRoomResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
void RefreshTrackRoomResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
void RefreshTrackRoomResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& RefreshTrackRoomResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void RefreshTrackRoomResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RefreshTrackRoomResponse.RetMsg)
}
#if LANG_CXX11
void RefreshTrackRoomResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RefreshTrackRoomResponse.RetMsg)
}
#endif
void RefreshTrackRoomResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RefreshTrackRoomResponse.RetMsg)
}
void RefreshTrackRoomResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RefreshTrackRoomResponse.RetMsg)
}
::std::string* RefreshTrackRoomResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.RefreshTrackRoomResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RefreshTrackRoomResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.RefreshTrackRoomResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RefreshTrackRoomResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RefreshTrackRoomResponse.RetMsg)
}

// optional uint32 RefreshTime = 5;
bool RefreshTrackRoomResponse::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RefreshTrackRoomResponse::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000010u;
}
void RefreshTrackRoomResponse::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000010u;
}
void RefreshTrackRoomResponse::clear_refreshtime() {
  refreshtime_ = 0u;
  clear_has_refreshtime();
}
::google::protobuf::uint32 RefreshTrackRoomResponse::refreshtime() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomResponse.RefreshTime)
  return refreshtime_;
}
void RefreshTrackRoomResponse::set_refreshtime(::google::protobuf::uint32 value) {
  set_has_refreshtime();
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RefreshTrackRoomResponse.RefreshTime)
}

// optional .micromsg.TrackPOIItem RoomPoi = 6;
bool RefreshTrackRoomResponse::has_roompoi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RefreshTrackRoomResponse::set_has_roompoi() {
  _has_bits_[0] |= 0x00000004u;
}
void RefreshTrackRoomResponse::clear_has_roompoi() {
  _has_bits_[0] &= ~0x00000004u;
}
void RefreshTrackRoomResponse::clear_roompoi() {
  if (roompoi_ != NULL) roompoi_->::micromsg::TrackPOIItem::Clear();
  clear_has_roompoi();
}
const ::micromsg::TrackPOIItem& RefreshTrackRoomResponse::roompoi() const {
  // @@protoc_insertion_point(field_get:micromsg.RefreshTrackRoomResponse.RoomPoi)
  return roompoi_ != NULL ? *roompoi_
                         : *::micromsg::TrackPOIItem::internal_default_instance();
}
::micromsg::TrackPOIItem* RefreshTrackRoomResponse::mutable_roompoi() {
  set_has_roompoi();
  if (roompoi_ == NULL) {
    roompoi_ = new ::micromsg::TrackPOIItem;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RefreshTrackRoomResponse.RoomPoi)
  return roompoi_;
}
::micromsg::TrackPOIItem* RefreshTrackRoomResponse::release_roompoi() {
  // @@protoc_insertion_point(field_release:micromsg.RefreshTrackRoomResponse.RoomPoi)
  clear_has_roompoi();
  ::micromsg::TrackPOIItem* temp = roompoi_;
  roompoi_ = NULL;
  return temp;
}
void RefreshTrackRoomResponse::set_allocated_roompoi(::micromsg::TrackPOIItem* roompoi) {
  delete roompoi_;
  roompoi_ = roompoi;
  if (roompoi) {
    set_has_roompoi();
  } else {
    clear_has_roompoi();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RefreshTrackRoomResponse.RoomPoi)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinTrackRoomRequest::kBaseRequestFieldNumber;
const int JoinTrackRoomRequest::kChatnameFieldNumber;
const int JoinTrackRoomRequest::kSceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinTrackRoomRequest::JoinTrackRoomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmtrack_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.JoinTrackRoomRequest)
}
JoinTrackRoomRequest::JoinTrackRoomRequest(const JoinTrackRoomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chatname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chatname()) {
    chatname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatname_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  scene_ = from.scene_;
  // @@protoc_insertion_point(copy_constructor:micromsg.JoinTrackRoomRequest)
}

void JoinTrackRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  chatname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(scene_));
}

JoinTrackRoomRequest::~JoinTrackRoomRequest() {
  // @@protoc_insertion_point(destructor:micromsg.JoinTrackRoomRequest)
  SharedDtor();
}

void JoinTrackRoomRequest::SharedDtor() {
  chatname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void JoinTrackRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinTrackRoomRequest::descriptor() {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinTrackRoomRequest& JoinTrackRoomRequest::default_instance() {
  protobuf_mmtrack_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinTrackRoomRequest* JoinTrackRoomRequest::New(::google::protobuf::Arena* arena) const {
  JoinTrackRoomRequest* n = new JoinTrackRoomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinTrackRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.JoinTrackRoomRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_chatname()) {
      GOOGLE_DCHECK(!chatname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chatname_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  scene_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoinTrackRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.JoinTrackRoomRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Chatname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chatname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chatname().data(), this->chatname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JoinTrackRoomRequest.Chatname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Scene = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.JoinTrackRoomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.JoinTrackRoomRequest)
  return false;
#undef DO_
}

void JoinTrackRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.JoinTrackRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string Chatname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chatname().data(), this->chatname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JoinTrackRoomRequest.Chatname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chatname(), output);
  }

  // optional uint32 Scene = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.JoinTrackRoomRequest)
}

::google::protobuf::uint8* JoinTrackRoomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.JoinTrackRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string Chatname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chatname().data(), this->chatname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JoinTrackRoomRequest.Chatname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chatname(), target);
  }

  // optional uint32 Scene = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.JoinTrackRoomRequest)
  return target;
}

size_t JoinTrackRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.JoinTrackRoomRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  // optional string Chatname = 2;
  if (has_chatname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chatname());
  }

  // optional uint32 Scene = 3;
  if (has_scene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinTrackRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.JoinTrackRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinTrackRoomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinTrackRoomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.JoinTrackRoomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.JoinTrackRoomRequest)
    MergeFrom(*source);
  }
}

void JoinTrackRoomRequest::MergeFrom(const JoinTrackRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.JoinTrackRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chatname();
      chatname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatname_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      scene_ = from.scene_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JoinTrackRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.JoinTrackRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinTrackRoomRequest::CopyFrom(const JoinTrackRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.JoinTrackRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinTrackRoomRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void JoinTrackRoomRequest::Swap(JoinTrackRoomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinTrackRoomRequest::InternalSwap(JoinTrackRoomRequest* other) {
  chatname_.Swap(&other->chatname_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(scene_, other->scene_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinTrackRoomRequest::GetMetadata() const {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinTrackRoomRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool JoinTrackRoomRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JoinTrackRoomRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void JoinTrackRoomRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void JoinTrackRoomRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& JoinTrackRoomRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.JoinTrackRoomRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* JoinTrackRoomRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.JoinTrackRoomRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* JoinTrackRoomRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.JoinTrackRoomRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void JoinTrackRoomRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.JoinTrackRoomRequest.BaseRequest)
}

// optional string Chatname = 2;
bool JoinTrackRoomRequest::has_chatname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JoinTrackRoomRequest::set_has_chatname() {
  _has_bits_[0] |= 0x00000001u;
}
void JoinTrackRoomRequest::clear_has_chatname() {
  _has_bits_[0] &= ~0x00000001u;
}
void JoinTrackRoomRequest::clear_chatname() {
  chatname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatname();
}
const ::std::string& JoinTrackRoomRequest::chatname() const {
  // @@protoc_insertion_point(field_get:micromsg.JoinTrackRoomRequest.Chatname)
  return chatname_.GetNoArena();
}
void JoinTrackRoomRequest::set_chatname(const ::std::string& value) {
  set_has_chatname();
  chatname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JoinTrackRoomRequest.Chatname)
}
#if LANG_CXX11
void JoinTrackRoomRequest::set_chatname(::std::string&& value) {
  set_has_chatname();
  chatname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JoinTrackRoomRequest.Chatname)
}
#endif
void JoinTrackRoomRequest::set_chatname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatname();
  chatname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JoinTrackRoomRequest.Chatname)
}
void JoinTrackRoomRequest::set_chatname(const char* value, size_t size) {
  set_has_chatname();
  chatname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JoinTrackRoomRequest.Chatname)
}
::std::string* JoinTrackRoomRequest::mutable_chatname() {
  set_has_chatname();
  // @@protoc_insertion_point(field_mutable:micromsg.JoinTrackRoomRequest.Chatname)
  return chatname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinTrackRoomRequest::release_chatname() {
  // @@protoc_insertion_point(field_release:micromsg.JoinTrackRoomRequest.Chatname)
  clear_has_chatname();
  return chatname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinTrackRoomRequest::set_allocated_chatname(::std::string* chatname) {
  if (chatname != NULL) {
    set_has_chatname();
  } else {
    clear_has_chatname();
  }
  chatname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JoinTrackRoomRequest.Chatname)
}

// optional uint32 Scene = 3;
bool JoinTrackRoomRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JoinTrackRoomRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000004u;
}
void JoinTrackRoomRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
void JoinTrackRoomRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 JoinTrackRoomRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.JoinTrackRoomRequest.Scene)
  return scene_;
}
void JoinTrackRoomRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JoinTrackRoomRequest.Scene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinTrackRoomResponse::kBaseResponseFieldNumber;
const int JoinTrackRoomResponse::kTrackRoomIDFieldNumber;
const int JoinTrackRoomResponse::kRetMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinTrackRoomResponse::JoinTrackRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmtrack_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.JoinTrackRoomResponse)
}
JoinTrackRoomResponse::JoinTrackRoomResponse(const JoinTrackRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trackroomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trackroomid()) {
    trackroomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackroomid_);
  }
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.JoinTrackRoomResponse)
}

void JoinTrackRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  trackroomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

JoinTrackRoomResponse::~JoinTrackRoomResponse() {
  // @@protoc_insertion_point(destructor:micromsg.JoinTrackRoomResponse)
  SharedDtor();
}

void JoinTrackRoomResponse::SharedDtor() {
  trackroomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void JoinTrackRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinTrackRoomResponse::descriptor() {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinTrackRoomResponse& JoinTrackRoomResponse::default_instance() {
  protobuf_mmtrack_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinTrackRoomResponse* JoinTrackRoomResponse::New(::google::protobuf::Arena* arena) const {
  JoinTrackRoomResponse* n = new JoinTrackRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinTrackRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.JoinTrackRoomResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_trackroomid()) {
      GOOGLE_DCHECK(!trackroomid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*trackroomid_.UnsafeRawStringPointer())->clear();
    }
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoinTrackRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.JoinTrackRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string TrackRoomID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackroomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trackroomid().data(), this->trackroomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JoinTrackRoomResponse.TrackRoomID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JoinTrackRoomResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.JoinTrackRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.JoinTrackRoomResponse)
  return false;
#undef DO_
}

void JoinTrackRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.JoinTrackRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string TrackRoomID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackroomid().data(), this->trackroomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JoinTrackRoomResponse.TrackRoomID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trackroomid(), output);
  }

  // optional string RetMsg = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JoinTrackRoomResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->retmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.JoinTrackRoomResponse)
}

::google::protobuf::uint8* JoinTrackRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.JoinTrackRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string TrackRoomID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackroomid().data(), this->trackroomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JoinTrackRoomResponse.TrackRoomID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trackroomid(), target);
  }

  // optional string RetMsg = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JoinTrackRoomResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->retmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.JoinTrackRoomResponse)
  return target;
}

size_t JoinTrackRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.JoinTrackRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string TrackRoomID = 2;
    if (has_trackroomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trackroomid());
    }

    // optional string RetMsg = 3;
    if (has_retmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retmsg());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinTrackRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.JoinTrackRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinTrackRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinTrackRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.JoinTrackRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.JoinTrackRoomResponse)
    MergeFrom(*source);
  }
}

void JoinTrackRoomResponse::MergeFrom(const JoinTrackRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.JoinTrackRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_trackroomid();
      trackroomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackroomid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void JoinTrackRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.JoinTrackRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinTrackRoomResponse::CopyFrom(const JoinTrackRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.JoinTrackRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinTrackRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void JoinTrackRoomResponse::Swap(JoinTrackRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinTrackRoomResponse::InternalSwap(JoinTrackRoomResponse* other) {
  trackroomid_.Swap(&other->trackroomid_);
  retmsg_.Swap(&other->retmsg_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinTrackRoomResponse::GetMetadata() const {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinTrackRoomResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool JoinTrackRoomResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JoinTrackRoomResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void JoinTrackRoomResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void JoinTrackRoomResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& JoinTrackRoomResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.JoinTrackRoomResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* JoinTrackRoomResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.JoinTrackRoomResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* JoinTrackRoomResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.JoinTrackRoomResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void JoinTrackRoomResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.JoinTrackRoomResponse.BaseResponse)
}

// optional string TrackRoomID = 2;
bool JoinTrackRoomResponse::has_trackroomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JoinTrackRoomResponse::set_has_trackroomid() {
  _has_bits_[0] |= 0x00000001u;
}
void JoinTrackRoomResponse::clear_has_trackroomid() {
  _has_bits_[0] &= ~0x00000001u;
}
void JoinTrackRoomResponse::clear_trackroomid() {
  trackroomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trackroomid();
}
const ::std::string& JoinTrackRoomResponse::trackroomid() const {
  // @@protoc_insertion_point(field_get:micromsg.JoinTrackRoomResponse.TrackRoomID)
  return trackroomid_.GetNoArena();
}
void JoinTrackRoomResponse::set_trackroomid(const ::std::string& value) {
  set_has_trackroomid();
  trackroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JoinTrackRoomResponse.TrackRoomID)
}
#if LANG_CXX11
void JoinTrackRoomResponse::set_trackroomid(::std::string&& value) {
  set_has_trackroomid();
  trackroomid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JoinTrackRoomResponse.TrackRoomID)
}
#endif
void JoinTrackRoomResponse::set_trackroomid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_trackroomid();
  trackroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JoinTrackRoomResponse.TrackRoomID)
}
void JoinTrackRoomResponse::set_trackroomid(const char* value, size_t size) {
  set_has_trackroomid();
  trackroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JoinTrackRoomResponse.TrackRoomID)
}
::std::string* JoinTrackRoomResponse::mutable_trackroomid() {
  set_has_trackroomid();
  // @@protoc_insertion_point(field_mutable:micromsg.JoinTrackRoomResponse.TrackRoomID)
  return trackroomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinTrackRoomResponse::release_trackroomid() {
  // @@protoc_insertion_point(field_release:micromsg.JoinTrackRoomResponse.TrackRoomID)
  clear_has_trackroomid();
  return trackroomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinTrackRoomResponse::set_allocated_trackroomid(::std::string* trackroomid) {
  if (trackroomid != NULL) {
    set_has_trackroomid();
  } else {
    clear_has_trackroomid();
  }
  trackroomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trackroomid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JoinTrackRoomResponse.TrackRoomID)
}

// optional string RetMsg = 3;
bool JoinTrackRoomResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JoinTrackRoomResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
void JoinTrackRoomResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
void JoinTrackRoomResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& JoinTrackRoomResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.JoinTrackRoomResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void JoinTrackRoomResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JoinTrackRoomResponse.RetMsg)
}
#if LANG_CXX11
void JoinTrackRoomResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JoinTrackRoomResponse.RetMsg)
}
#endif
void JoinTrackRoomResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JoinTrackRoomResponse.RetMsg)
}
void JoinTrackRoomResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JoinTrackRoomResponse.RetMsg)
}
::std::string* JoinTrackRoomResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.JoinTrackRoomResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinTrackRoomResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.JoinTrackRoomResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinTrackRoomResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JoinTrackRoomResponse.RetMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitTrackRoomRequest::kBaseRequestFieldNumber;
const int ExitTrackRoomRequest::kTrackRoomIDFieldNumber;
const int ExitTrackRoomRequest::kSceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitTrackRoomRequest::ExitTrackRoomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmtrack_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ExitTrackRoomRequest)
}
ExitTrackRoomRequest::ExitTrackRoomRequest(const ExitTrackRoomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trackroomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trackroomid()) {
    trackroomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackroomid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  scene_ = from.scene_;
  // @@protoc_insertion_point(copy_constructor:micromsg.ExitTrackRoomRequest)
}

void ExitTrackRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  trackroomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(scene_));
}

ExitTrackRoomRequest::~ExitTrackRoomRequest() {
  // @@protoc_insertion_point(destructor:micromsg.ExitTrackRoomRequest)
  SharedDtor();
}

void ExitTrackRoomRequest::SharedDtor() {
  trackroomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void ExitTrackRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitTrackRoomRequest::descriptor() {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitTrackRoomRequest& ExitTrackRoomRequest::default_instance() {
  protobuf_mmtrack_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExitTrackRoomRequest* ExitTrackRoomRequest::New(::google::protobuf::Arena* arena) const {
  ExitTrackRoomRequest* n = new ExitTrackRoomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitTrackRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ExitTrackRoomRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_trackroomid()) {
      GOOGLE_DCHECK(!trackroomid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*trackroomid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  scene_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExitTrackRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ExitTrackRoomRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string TrackRoomID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackroomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trackroomid().data(), this->trackroomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ExitTrackRoomRequest.TrackRoomID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Scene = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ExitTrackRoomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ExitTrackRoomRequest)
  return false;
#undef DO_
}

void ExitTrackRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ExitTrackRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string TrackRoomID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackroomid().data(), this->trackroomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ExitTrackRoomRequest.TrackRoomID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trackroomid(), output);
  }

  // optional uint32 Scene = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ExitTrackRoomRequest)
}

::google::protobuf::uint8* ExitTrackRoomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ExitTrackRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string TrackRoomID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trackroomid().data(), this->trackroomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ExitTrackRoomRequest.TrackRoomID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trackroomid(), target);
  }

  // optional uint32 Scene = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ExitTrackRoomRequest)
  return target;
}

size_t ExitTrackRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ExitTrackRoomRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  // optional string TrackRoomID = 2;
  if (has_trackroomid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trackroomid());
  }

  // optional uint32 Scene = 3;
  if (has_scene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitTrackRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ExitTrackRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitTrackRoomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitTrackRoomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ExitTrackRoomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ExitTrackRoomRequest)
    MergeFrom(*source);
  }
}

void ExitTrackRoomRequest::MergeFrom(const ExitTrackRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ExitTrackRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_trackroomid();
      trackroomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trackroomid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      scene_ = from.scene_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExitTrackRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ExitTrackRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitTrackRoomRequest::CopyFrom(const ExitTrackRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ExitTrackRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitTrackRoomRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void ExitTrackRoomRequest::Swap(ExitTrackRoomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitTrackRoomRequest::InternalSwap(ExitTrackRoomRequest* other) {
  trackroomid_.Swap(&other->trackroomid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(scene_, other->scene_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitTrackRoomRequest::GetMetadata() const {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExitTrackRoomRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool ExitTrackRoomRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ExitTrackRoomRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void ExitTrackRoomRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void ExitTrackRoomRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& ExitTrackRoomRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ExitTrackRoomRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* ExitTrackRoomRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ExitTrackRoomRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* ExitTrackRoomRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ExitTrackRoomRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void ExitTrackRoomRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ExitTrackRoomRequest.BaseRequest)
}

// optional string TrackRoomID = 2;
bool ExitTrackRoomRequest::has_trackroomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ExitTrackRoomRequest::set_has_trackroomid() {
  _has_bits_[0] |= 0x00000001u;
}
void ExitTrackRoomRequest::clear_has_trackroomid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ExitTrackRoomRequest::clear_trackroomid() {
  trackroomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trackroomid();
}
const ::std::string& ExitTrackRoomRequest::trackroomid() const {
  // @@protoc_insertion_point(field_get:micromsg.ExitTrackRoomRequest.TrackRoomID)
  return trackroomid_.GetNoArena();
}
void ExitTrackRoomRequest::set_trackroomid(const ::std::string& value) {
  set_has_trackroomid();
  trackroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ExitTrackRoomRequest.TrackRoomID)
}
#if LANG_CXX11
void ExitTrackRoomRequest::set_trackroomid(::std::string&& value) {
  set_has_trackroomid();
  trackroomid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ExitTrackRoomRequest.TrackRoomID)
}
#endif
void ExitTrackRoomRequest::set_trackroomid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_trackroomid();
  trackroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ExitTrackRoomRequest.TrackRoomID)
}
void ExitTrackRoomRequest::set_trackroomid(const char* value, size_t size) {
  set_has_trackroomid();
  trackroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ExitTrackRoomRequest.TrackRoomID)
}
::std::string* ExitTrackRoomRequest::mutable_trackroomid() {
  set_has_trackroomid();
  // @@protoc_insertion_point(field_mutable:micromsg.ExitTrackRoomRequest.TrackRoomID)
  return trackroomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExitTrackRoomRequest::release_trackroomid() {
  // @@protoc_insertion_point(field_release:micromsg.ExitTrackRoomRequest.TrackRoomID)
  clear_has_trackroomid();
  return trackroomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExitTrackRoomRequest::set_allocated_trackroomid(::std::string* trackroomid) {
  if (trackroomid != NULL) {
    set_has_trackroomid();
  } else {
    clear_has_trackroomid();
  }
  trackroomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trackroomid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ExitTrackRoomRequest.TrackRoomID)
}

// optional uint32 Scene = 3;
bool ExitTrackRoomRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ExitTrackRoomRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000004u;
}
void ExitTrackRoomRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
void ExitTrackRoomRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 ExitTrackRoomRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.ExitTrackRoomRequest.Scene)
  return scene_;
}
void ExitTrackRoomRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ExitTrackRoomRequest.Scene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitTrackRoomResponse::kBaseResponseFieldNumber;
const int ExitTrackRoomResponse::kRetMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitTrackRoomResponse::ExitTrackRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmtrack_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ExitTrackRoomResponse)
}
ExitTrackRoomResponse::ExitTrackRoomResponse(const ExitTrackRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.ExitTrackRoomResponse)
}

void ExitTrackRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

ExitTrackRoomResponse::~ExitTrackRoomResponse() {
  // @@protoc_insertion_point(destructor:micromsg.ExitTrackRoomResponse)
  SharedDtor();
}

void ExitTrackRoomResponse::SharedDtor() {
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void ExitTrackRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitTrackRoomResponse::descriptor() {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitTrackRoomResponse& ExitTrackRoomResponse::default_instance() {
  protobuf_mmtrack_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExitTrackRoomResponse* ExitTrackRoomResponse::New(::google::protobuf::Arena* arena) const {
  ExitTrackRoomResponse* n = new ExitTrackRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitTrackRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ExitTrackRoomResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExitTrackRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ExitTrackRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ExitTrackRoomResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ExitTrackRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ExitTrackRoomResponse)
  return false;
#undef DO_
}

void ExitTrackRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ExitTrackRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string RetMsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ExitTrackRoomResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->retmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ExitTrackRoomResponse)
}

::google::protobuf::uint8* ExitTrackRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ExitTrackRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string RetMsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ExitTrackRoomResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ExitTrackRoomResponse)
  return target;
}

size_t ExitTrackRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ExitTrackRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional string RetMsg = 2;
  if (has_retmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retmsg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitTrackRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ExitTrackRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitTrackRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitTrackRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ExitTrackRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ExitTrackRoomResponse)
    MergeFrom(*source);
  }
}

void ExitTrackRoomResponse::MergeFrom(const ExitTrackRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ExitTrackRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void ExitTrackRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ExitTrackRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitTrackRoomResponse::CopyFrom(const ExitTrackRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ExitTrackRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitTrackRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void ExitTrackRoomResponse::Swap(ExitTrackRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitTrackRoomResponse::InternalSwap(ExitTrackRoomResponse* other) {
  retmsg_.Swap(&other->retmsg_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitTrackRoomResponse::GetMetadata() const {
  protobuf_mmtrack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmtrack_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExitTrackRoomResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool ExitTrackRoomResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ExitTrackRoomResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void ExitTrackRoomResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void ExitTrackRoomResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& ExitTrackRoomResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ExitTrackRoomResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* ExitTrackRoomResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ExitTrackRoomResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* ExitTrackRoomResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ExitTrackRoomResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void ExitTrackRoomResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ExitTrackRoomResponse.BaseResponse)
}

// optional string RetMsg = 2;
bool ExitTrackRoomResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ExitTrackRoomResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
void ExitTrackRoomResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
void ExitTrackRoomResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& ExitTrackRoomResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.ExitTrackRoomResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void ExitTrackRoomResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ExitTrackRoomResponse.RetMsg)
}
#if LANG_CXX11
void ExitTrackRoomResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ExitTrackRoomResponse.RetMsg)
}
#endif
void ExitTrackRoomResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ExitTrackRoomResponse.RetMsg)
}
void ExitTrackRoomResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ExitTrackRoomResponse.RetMsg)
}
::std::string* ExitTrackRoomResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.ExitTrackRoomResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExitTrackRoomResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.ExitTrackRoomResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExitTrackRoomResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ExitTrackRoomResponse.RetMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg

// @@protoc_insertion_point(global_scope)
