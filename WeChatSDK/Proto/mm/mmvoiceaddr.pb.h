// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmvoiceaddr.proto

#ifndef PROTOBUF_mmvoiceaddr_2eproto__INCLUDED
#define PROTOBUF_mmvoiceaddr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GetProductInfoRequest;
class GetProductInfoRequestDefaultTypeInternal;
extern GetProductInfoRequestDefaultTypeInternal _GetProductInfoRequest_default_instance_;
class GetProductInfoResponse;
class GetProductInfoResponseDefaultTypeInternal;
extern GetProductInfoResponseDefaultTypeInternal _GetProductInfoResponse_default_instance_;
class GetQQMusicLyricRequest;
class GetQQMusicLyricRequestDefaultTypeInternal;
extern GetQQMusicLyricRequestDefaultTypeInternal _GetQQMusicLyricRequest_default_instance_;
class GetQQMusicLyricResponse;
class GetQQMusicLyricResponseDefaultTypeInternal;
extern GetQQMusicLyricResponseDefaultTypeInternal _GetQQMusicLyricResponse_default_instance_;
class GetTVInfoRequest;
class GetTVInfoRequestDefaultTypeInternal;
extern GetTVInfoRequestDefaultTypeInternal _GetTVInfoRequest_default_instance_;
class GetTVInfoResponse;
class GetTVInfoResponseDefaultTypeInternal;
extern GetTVInfoResponseDefaultTypeInternal _GetTVInfoResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class OCRTranslationRequest;
class OCRTranslationRequestDefaultTypeInternal;
extern OCRTranslationRequestDefaultTypeInternal _OCRTranslationRequest_default_instance_;
class OCRTranslationResponse;
class OCRTranslationResponseDefaultTypeInternal;
extern OCRTranslationResponseDefaultTypeInternal _OCRTranslationResponse_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class ScanBarcodeRequest;
class ScanBarcodeRequestDefaultTypeInternal;
extern ScanBarcodeRequestDefaultTypeInternal _ScanBarcodeRequest_default_instance_;
class ScanBarcodeResponse;
class ScanBarcodeResponseDefaultTypeInternal;
extern ScanBarcodeResponseDefaultTypeInternal _ScanBarcodeResponse_default_instance_;
class ScanImageRequest;
class ScanImageRequestDefaultTypeInternal;
extern ScanImageRequestDefaultTypeInternal _ScanImageRequest_default_instance_;
class ScanImageResponse;
class ScanImageResponseDefaultTypeInternal;
extern ScanImageResponseDefaultTypeInternal _ScanImageResponse_default_instance_;
class ShakeMusicRequest;
class ShakeMusicRequestDefaultTypeInternal;
extern ShakeMusicRequestDefaultTypeInternal _ShakeMusicRequest_default_instance_;
class ShakeMusicResponse;
class ShakeMusicResponseDefaultTypeInternal;
extern ShakeMusicResponseDefaultTypeInternal _ShakeMusicResponse_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShakeTVRequest;
class ShakeTVRequestDefaultTypeInternal;
extern ShakeTVRequestDefaultTypeInternal _ShakeTVRequest_default_instance_;
class ShakeTVResponse;
class ShakeTVResponseDefaultTypeInternal;
extern ShakeTVResponseDefaultTypeInternal _ShakeTVResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class UploadInputVoiceRequest;
class UploadInputVoiceRequestDefaultTypeInternal;
extern UploadInputVoiceRequestDefaultTypeInternal _UploadInputVoiceRequest_default_instance_;
class UploadInputVoiceResponse;
class UploadInputVoiceResponseDefaultTypeInternal;
extern UploadInputVoiceResponseDefaultTypeInternal _UploadInputVoiceResponse_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
class VoiceAddrReportRequest;
class VoiceAddrReportRequestDefaultTypeInternal;
extern VoiceAddrReportRequestDefaultTypeInternal _VoiceAddrReportRequest_default_instance_;
class VoiceAddrReportResponse;
class VoiceAddrReportResponseDefaultTypeInternal;
extern VoiceAddrReportResponseDefaultTypeInternal _VoiceAddrReportResponse_default_instance_;
class VoiceAddrRequest;
class VoiceAddrRequestDefaultTypeInternal;
extern VoiceAddrRequestDefaultTypeInternal _VoiceAddrRequest_default_instance_;
class VoiceAddrResponse;
class VoiceAddrResponseDefaultTypeInternal;
extern VoiceAddrResponseDefaultTypeInternal _VoiceAddrResponse_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmvoiceaddr_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmvoiceaddr_2eproto

// ===================================================================

class VoiceAddrRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.VoiceAddrRequest) */ {
 public:
  VoiceAddrRequest();
  virtual ~VoiceAddrRequest();

  VoiceAddrRequest(const VoiceAddrRequest& from);

  inline VoiceAddrRequest& operator=(const VoiceAddrRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoiceAddrRequest& default_instance();

  static inline const VoiceAddrRequest* internal_default_instance() {
    return reinterpret_cast<const VoiceAddrRequest*>(
               &_VoiceAddrRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VoiceAddrRequest* other);

  // implements Message ----------------------------------------------

  inline VoiceAddrRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  VoiceAddrRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VoiceAddrRequest& from);
  void MergeFrom(const VoiceAddrRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VoiceAddrRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t ExtraNameUserNameList = 13;
  int extranameusernamelist_size() const;
  void clear_extranameusernamelist();
  static const int kExtraNameUserNameListFieldNumber = 13;
  const ::micromsg::SKBuiltinString_t& extranameusernamelist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_extranameusernamelist(int index);
  ::micromsg::SKBuiltinString_t* add_extranameusernamelist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_extranameusernamelist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      extranameusernamelist() const;

  // repeated .micromsg.SKBuiltinBuffer_t ExtraNameRemarkNameList = 14;
  int extranameremarknamelist_size() const;
  void clear_extranameremarknamelist();
  static const int kExtraNameRemarkNameListFieldNumber = 14;
  const ::micromsg::SKBuiltinBuffer_t& extranameremarknamelist(int index) const;
  ::micromsg::SKBuiltinBuffer_t* mutable_extranameremarknamelist(int index);
  ::micromsg::SKBuiltinBuffer_t* add_extranameremarknamelist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinBuffer_t >*
      mutable_extranameremarknamelist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinBuffer_t >&
      extranameremarknamelist() const;

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string ClientVoiceId = 5;
  bool has_clientvoiceid() const;
  void clear_clientvoiceid();
  static const int kClientVoiceIdFieldNumber = 5;
  const ::std::string& clientvoiceid() const;
  void set_clientvoiceid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientvoiceid(::std::string&& value);
  #endif
  void set_clientvoiceid(const char* value);
  void set_clientvoiceid(const char* value, size_t size);
  ::std::string* mutable_clientvoiceid();
  ::std::string* release_clientvoiceid();
  void set_allocated_clientvoiceid(::std::string* clientvoiceid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t Data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& data() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_data();
  ::micromsg::SKBuiltinBuffer_t* release_data();
  void set_allocated_data(::micromsg::SKBuiltinBuffer_t* data);

  // required uint32 Offset = 4;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // required uint32 EndFlag = 6;
  bool has_endflag() const;
  void clear_endflag();
  static const int kEndFlagFieldNumber = 6;
  ::google::protobuf::uint32 endflag() const;
  void set_endflag(::google::protobuf::uint32 value);

  // required uint32 SamplePerSec = 7;
  bool has_samplepersec() const;
  void clear_samplepersec();
  static const int kSamplePerSecFieldNumber = 7;
  ::google::protobuf::uint32 samplepersec() const;
  void set_samplepersec(::google::protobuf::uint32 value);

  // required uint32 BitsPerSample = 8;
  bool has_bitspersample() const;
  void clear_bitspersample();
  static const int kBitsPerSampleFieldNumber = 8;
  ::google::protobuf::uint32 bitspersample() const;
  void set_bitspersample(::google::protobuf::uint32 value);

  // required uint32 VoiceEncodeType = 9;
  bool has_voiceencodetype() const;
  void clear_voiceencodetype();
  static const int kVoiceEncodeTypeFieldNumber = 9;
  ::google::protobuf::uint32 voiceencodetype() const;
  void set_voiceencodetype(::google::protobuf::uint32 value);

  // required uint32 FileType = 10;
  bool has_filetype() const;
  void clear_filetype();
  static const int kFileTypeFieldNumber = 10;
  ::google::protobuf::uint32 filetype() const;
  void set_filetype(::google::protobuf::uint32 value);

  // optional uint32 SearchType = 11;
  bool has_searchtype() const;
  void clear_searchtype();
  static const int kSearchTypeFieldNumber = 11;
  ::google::protobuf::uint32 searchtype() const;
  void set_searchtype(::google::protobuf::uint32 value);

  // optional uint32 ExtraNameCount = 12;
  bool has_extranamecount() const;
  void clear_extranamecount();
  static const int kExtraNameCountFieldNumber = 12;
  ::google::protobuf::uint32 extranamecount() const;
  void set_extranamecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.VoiceAddrRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_username();
  void clear_has_username();
  void set_has_data();
  void clear_has_data();
  void set_has_offset();
  void clear_has_offset();
  void set_has_clientvoiceid();
  void clear_has_clientvoiceid();
  void set_has_endflag();
  void clear_has_endflag();
  void set_has_samplepersec();
  void clear_has_samplepersec();
  void set_has_bitspersample();
  void clear_has_bitspersample();
  void set_has_voiceencodetype();
  void clear_has_voiceencodetype();
  void set_has_filetype();
  void clear_has_filetype();
  void set_has_searchtype();
  void clear_has_searchtype();
  void set_has_extranamecount();
  void clear_has_extranamecount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > extranameusernamelist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinBuffer_t > extranameremarknamelist_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr clientvoiceid_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* data_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 endflag_;
  ::google::protobuf::uint32 samplepersec_;
  ::google::protobuf::uint32 bitspersample_;
  ::google::protobuf::uint32 voiceencodetype_;
  ::google::protobuf::uint32 filetype_;
  ::google::protobuf::uint32 searchtype_;
  ::google::protobuf::uint32 extranamecount_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VoiceAddrResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.VoiceAddrResponse) */ {
 public:
  VoiceAddrResponse();
  virtual ~VoiceAddrResponse();

  VoiceAddrResponse(const VoiceAddrResponse& from);

  inline VoiceAddrResponse& operator=(const VoiceAddrResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoiceAddrResponse& default_instance();

  static inline const VoiceAddrResponse* internal_default_instance() {
    return reinterpret_cast<const VoiceAddrResponse*>(
               &_VoiceAddrResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(VoiceAddrResponse* other);

  // implements Message ----------------------------------------------

  inline VoiceAddrResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  VoiceAddrResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VoiceAddrResponse& from);
  void MergeFrom(const VoiceAddrResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VoiceAddrResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t UserNameList = 4;
  int usernamelist_size() const;
  void clear_usernamelist();
  static const int kUserNameListFieldNumber = 4;
  const ::micromsg::SKBuiltinString_t& usernamelist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_usernamelist(int index);
  ::micromsg::SKBuiltinString_t* add_usernamelist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_usernamelist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      usernamelist() const;

  // optional string ReportFiled = 5;
  bool has_reportfiled() const;
  void clear_reportfiled();
  static const int kReportFiledFieldNumber = 5;
  const ::std::string& reportfiled() const;
  void set_reportfiled(const ::std::string& value);
  #if LANG_CXX11
  void set_reportfiled(::std::string&& value);
  #endif
  void set_reportfiled(const char* value);
  void set_reportfiled(const char* value, size_t size);
  ::std::string* mutable_reportfiled();
  ::std::string* release_reportfiled();
  void set_allocated_reportfiled(::std::string* reportfiled);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 EndFlag = 2;
  bool has_endflag() const;
  void clear_endflag();
  static const int kEndFlagFieldNumber = 2;
  ::google::protobuf::uint32 endflag() const;
  void set_endflag(::google::protobuf::uint32 value);

  // required int32 UserCount = 3;
  bool has_usercount() const;
  void clear_usercount();
  static const int kUserCountFieldNumber = 3;
  ::google::protobuf::int32 usercount() const;
  void set_usercount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.VoiceAddrResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_endflag();
  void clear_has_endflag();
  void set_has_usercount();
  void clear_has_usercount();
  void set_has_reportfiled();
  void clear_has_reportfiled();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > usernamelist_;
  ::google::protobuf::internal::ArenaStringPtr reportfiled_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 endflag_;
  ::google::protobuf::int32 usercount_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VoiceAddrReportRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.VoiceAddrReportRequest) */ {
 public:
  VoiceAddrReportRequest();
  virtual ~VoiceAddrReportRequest();

  VoiceAddrReportRequest(const VoiceAddrReportRequest& from);

  inline VoiceAddrReportRequest& operator=(const VoiceAddrReportRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoiceAddrReportRequest& default_instance();

  static inline const VoiceAddrReportRequest* internal_default_instance() {
    return reinterpret_cast<const VoiceAddrReportRequest*>(
               &_VoiceAddrReportRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(VoiceAddrReportRequest* other);

  // implements Message ----------------------------------------------

  inline VoiceAddrReportRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  VoiceAddrReportRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VoiceAddrReportRequest& from);
  void MergeFrom(const VoiceAddrReportRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VoiceAddrReportRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string HitUserName = 3;
  bool has_hitusername() const;
  void clear_hitusername();
  static const int kHitUserNameFieldNumber = 3;
  const ::std::string& hitusername() const;
  void set_hitusername(const ::std::string& value);
  #if LANG_CXX11
  void set_hitusername(::std::string&& value);
  #endif
  void set_hitusername(const char* value);
  void set_hitusername(const char* value, size_t size);
  ::std::string* mutable_hitusername();
  ::std::string* release_hitusername();
  void set_allocated_hitusername(::std::string* hitusername);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 HitPos = 2;
  bool has_hitpos() const;
  void clear_hitpos();
  static const int kHitPosFieldNumber = 2;
  ::google::protobuf::uint32 hitpos() const;
  void set_hitpos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.VoiceAddrReportRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_hitpos();
  void clear_has_hitpos();
  void set_has_hitusername();
  void clear_has_hitusername();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hitusername_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 hitpos_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VoiceAddrReportResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.VoiceAddrReportResponse) */ {
 public:
  VoiceAddrReportResponse();
  virtual ~VoiceAddrReportResponse();

  VoiceAddrReportResponse(const VoiceAddrReportResponse& from);

  inline VoiceAddrReportResponse& operator=(const VoiceAddrReportResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoiceAddrReportResponse& default_instance();

  static inline const VoiceAddrReportResponse* internal_default_instance() {
    return reinterpret_cast<const VoiceAddrReportResponse*>(
               &_VoiceAddrReportResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(VoiceAddrReportResponse* other);

  // implements Message ----------------------------------------------

  inline VoiceAddrReportResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  VoiceAddrReportResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VoiceAddrReportResponse& from);
  void MergeFrom(const VoiceAddrReportResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VoiceAddrReportResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.VoiceAddrReportResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScanBarcodeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ScanBarcodeRequest) */ {
 public:
  ScanBarcodeRequest();
  virtual ~ScanBarcodeRequest();

  ScanBarcodeRequest(const ScanBarcodeRequest& from);

  inline ScanBarcodeRequest& operator=(const ScanBarcodeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanBarcodeRequest& default_instance();

  static inline const ScanBarcodeRequest* internal_default_instance() {
    return reinterpret_cast<const ScanBarcodeRequest*>(
               &_ScanBarcodeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ScanBarcodeRequest* other);

  // implements Message ----------------------------------------------

  inline ScanBarcodeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ScanBarcodeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScanBarcodeRequest& from);
  void MergeFrom(const ScanBarcodeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScanBarcodeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Barcode = 3;
  bool has_barcode() const;
  void clear_barcode();
  static const int kBarcodeFieldNumber = 3;
  const ::std::string& barcode() const;
  void set_barcode(const ::std::string& value);
  #if LANG_CXX11
  void set_barcode(::std::string&& value);
  #endif
  void set_barcode(const char* value);
  void set_barcode(const char* value, size_t size);
  ::std::string* mutable_barcode();
  ::std::string* release_barcode();
  void set_allocated_barcode(::std::string* barcode);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 Scene = 4;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 4;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ScanBarcodeRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_type();
  void clear_has_type();
  void set_has_barcode();
  void clear_has_barcode();
  void set_has_scene();
  void clear_has_scene();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr barcode_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScanBarcodeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ScanBarcodeResponse) */ {
 public:
  ScanBarcodeResponse();
  virtual ~ScanBarcodeResponse();

  ScanBarcodeResponse(const ScanBarcodeResponse& from);

  inline ScanBarcodeResponse& operator=(const ScanBarcodeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanBarcodeResponse& default_instance();

  static inline const ScanBarcodeResponse* internal_default_instance() {
    return reinterpret_cast<const ScanBarcodeResponse*>(
               &_ScanBarcodeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ScanBarcodeResponse* other);

  // implements Message ----------------------------------------------

  inline ScanBarcodeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ScanBarcodeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScanBarcodeResponse& from);
  void MergeFrom(const ScanBarcodeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScanBarcodeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DescXML = 3;
  bool has_descxml() const;
  void clear_descxml();
  static const int kDescXMLFieldNumber = 3;
  const ::std::string& descxml() const;
  void set_descxml(const ::std::string& value);
  #if LANG_CXX11
  void set_descxml(::std::string&& value);
  #endif
  void set_descxml(const char* value);
  void set_descxml(const char* value, size_t size);
  ::std::string* mutable_descxml();
  ::std::string* release_descxml();
  void set_allocated_descxml(::std::string* descxml);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ScanBarcodeResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_type();
  void clear_has_type();
  void set_has_descxml();
  void clear_has_descxml();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr descxml_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScanImageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ScanImageRequest) */ {
 public:
  ScanImageRequest();
  virtual ~ScanImageRequest();

  ScanImageRequest(const ScanImageRequest& from);

  inline ScanImageRequest& operator=(const ScanImageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanImageRequest& default_instance();

  static inline const ScanImageRequest* internal_default_instance() {
    return reinterpret_cast<const ScanImageRequest*>(
               &_ScanImageRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ScanImageRequest* other);

  // implements Message ----------------------------------------------

  inline ScanImageRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ScanImageRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScanImageRequest& from);
  void MergeFrom(const ScanImageRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScanImageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t ImageBuffer = 3;
  bool has_imagebuffer() const;
  void clear_imagebuffer();
  static const int kImageBufferFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& imagebuffer() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_imagebuffer();
  ::micromsg::SKBuiltinBuffer_t* release_imagebuffer();
  void set_allocated_imagebuffer(::micromsg::SKBuiltinBuffer_t* imagebuffer);

  // required uint32 ClientScanID = 2;
  bool has_clientscanid() const;
  void clear_clientscanid();
  static const int kClientScanIDFieldNumber = 2;
  ::google::protobuf::uint32 clientscanid() const;
  void set_clientscanid(::google::protobuf::uint32 value);

  // required uint32 TotalLength = 4;
  bool has_totallength() const;
  void clear_totallength();
  static const int kTotalLengthFieldNumber = 4;
  ::google::protobuf::uint32 totallength() const;
  void set_totallength(::google::protobuf::uint32 value);

  // required uint32 Offset = 5;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 5;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // required uint32 EndFlag = 6;
  bool has_endflag() const;
  void clear_endflag();
  static const int kEndFlagFieldNumber = 6;
  ::google::protobuf::uint32 endflag() const;
  void set_endflag(::google::protobuf::uint32 value);

  // required uint32 ImageType = 7;
  bool has_imagetype() const;
  void clear_imagetype();
  static const int kImageTypeFieldNumber = 7;
  ::google::protobuf::uint32 imagetype() const;
  void set_imagetype(::google::protobuf::uint32 value);

  // optional uint32 OPCode = 8;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOPCodeFieldNumber = 8;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // optional uint32 SessionID = 9;
  bool has_sessionid() const;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 9;
  ::google::protobuf::uint32 sessionid() const;
  void set_sessionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ScanImageRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_clientscanid();
  void clear_has_clientscanid();
  void set_has_imagebuffer();
  void clear_has_imagebuffer();
  void set_has_totallength();
  void clear_has_totallength();
  void set_has_offset();
  void clear_has_offset();
  void set_has_endflag();
  void clear_has_endflag();
  void set_has_imagetype();
  void clear_has_imagetype();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_sessionid();
  void clear_has_sessionid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* imagebuffer_;
  ::google::protobuf::uint32 clientscanid_;
  ::google::protobuf::uint32 totallength_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 endflag_;
  ::google::protobuf::uint32 imagetype_;
  ::google::protobuf::uint32 opcode_;
  ::google::protobuf::uint32 sessionid_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScanImageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ScanImageResponse) */ {
 public:
  ScanImageResponse();
  virtual ~ScanImageResponse();

  ScanImageResponse(const ScanImageResponse& from);

  inline ScanImageResponse& operator=(const ScanImageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanImageResponse& default_instance();

  static inline const ScanImageResponse* internal_default_instance() {
    return reinterpret_cast<const ScanImageResponse*>(
               &_ScanImageResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ScanImageResponse* other);

  // implements Message ----------------------------------------------

  inline ScanImageResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ScanImageResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScanImageResponse& from);
  void MergeFrom(const ScanImageResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScanImageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DescriptionXML = 4;
  bool has_descriptionxml() const;
  void clear_descriptionxml();
  static const int kDescriptionXMLFieldNumber = 4;
  const ::std::string& descriptionxml() const;
  void set_descriptionxml(const ::std::string& value);
  #if LANG_CXX11
  void set_descriptionxml(::std::string&& value);
  #endif
  void set_descriptionxml(const char* value);
  void set_descriptionxml(const char* value, size_t size);
  ::std::string* mutable_descriptionxml();
  ::std::string* release_descriptionxml();
  void set_allocated_descriptionxml(::std::string* descriptionxml);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 ClientScanID = 2;
  bool has_clientscanid() const;
  void clear_clientscanid();
  static const int kClientScanIDFieldNumber = 2;
  ::google::protobuf::uint32 clientscanid() const;
  void set_clientscanid(::google::protobuf::uint32 value);

  // required uint32 Type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 EndFlag = 5;
  bool has_endflag() const;
  void clear_endflag();
  static const int kEndFlagFieldNumber = 5;
  ::google::protobuf::uint32 endflag() const;
  void set_endflag(::google::protobuf::uint32 value);

  // required uint32 ImageType = 6;
  bool has_imagetype() const;
  void clear_imagetype();
  static const int kImageTypeFieldNumber = 6;
  ::google::protobuf::uint32 imagetype() const;
  void set_imagetype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ScanImageResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_clientscanid();
  void clear_has_clientscanid();
  void set_has_type();
  void clear_has_type();
  void set_has_descriptionxml();
  void clear_has_descriptionxml();
  void set_has_endflag();
  void clear_has_endflag();
  void set_has_imagetype();
  void clear_has_imagetype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr descriptionxml_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 clientscanid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 endflag_;
  ::google::protobuf::uint32 imagetype_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetProductInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetProductInfoRequest) */ {
 public:
  GetProductInfoRequest();
  virtual ~GetProductInfoRequest();

  GetProductInfoRequest(const GetProductInfoRequest& from);

  inline GetProductInfoRequest& operator=(const GetProductInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProductInfoRequest& default_instance();

  static inline const GetProductInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetProductInfoRequest*>(
               &_GetProductInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GetProductInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetProductInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetProductInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetProductInfoRequest& from);
  void MergeFrom(const GetProductInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetProductInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ProductID = 2;
  bool has_productid() const;
  void clear_productid();
  static const int kProductIDFieldNumber = 2;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  #if LANG_CXX11
  void set_productid(::std::string&& value);
  #endif
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // optional string QrUrl = 4;
  bool has_qrurl() const;
  void clear_qrurl();
  static const int kQrUrlFieldNumber = 4;
  const ::std::string& qrurl() const;
  void set_qrurl(const ::std::string& value);
  #if LANG_CXX11
  void set_qrurl(::std::string&& value);
  #endif
  void set_qrurl(const char* value);
  void set_qrurl(const char* value, size_t size);
  ::std::string* mutable_qrurl();
  ::std::string* release_qrurl();
  void set_allocated_qrurl(::std::string* qrurl);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Scene = 3;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 3;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetProductInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_productid();
  void clear_has_productid();
  void set_has_scene();
  void clear_has_scene();
  void set_has_qrurl();
  void clear_has_qrurl();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::google::protobuf::internal::ArenaStringPtr qrurl_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetProductInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetProductInfoResponse) */ {
 public:
  GetProductInfoResponse();
  virtual ~GetProductInfoResponse();

  GetProductInfoResponse(const GetProductInfoResponse& from);

  inline GetProductInfoResponse& operator=(const GetProductInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProductInfoResponse& default_instance();

  static inline const GetProductInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetProductInfoResponse*>(
               &_GetProductInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetProductInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetProductInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetProductInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetProductInfoResponse& from);
  void MergeFrom(const GetProductInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetProductInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DescXML = 3;
  bool has_descxml() const;
  void clear_descxml();
  static const int kDescXMLFieldNumber = 3;
  const ::std::string& descxml() const;
  void set_descxml(const ::std::string& value);
  #if LANG_CXX11
  void set_descxml(::std::string&& value);
  #endif
  void set_descxml(const char* value);
  void set_descxml(const char* value, size_t size);
  ::std::string* mutable_descxml();
  ::std::string* release_descxml();
  void set_allocated_descxml(::std::string* descxml);

  // optional string ProductID = 4;
  bool has_productid() const;
  void clear_productid();
  static const int kProductIDFieldNumber = 4;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  #if LANG_CXX11
  void set_productid(::std::string&& value);
  #endif
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetProductInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_type();
  void clear_has_type();
  void set_has_descxml();
  void clear_has_descxml();
  void set_has_productid();
  void clear_has_productid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr descxml_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OCRTranslationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.OCRTranslationRequest) */ {
 public:
  OCRTranslationRequest();
  virtual ~OCRTranslationRequest();

  OCRTranslationRequest(const OCRTranslationRequest& from);

  inline OCRTranslationRequest& operator=(const OCRTranslationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OCRTranslationRequest& default_instance();

  static inline const OCRTranslationRequest* internal_default_instance() {
    return reinterpret_cast<const OCRTranslationRequest*>(
               &_OCRTranslationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(OCRTranslationRequest* other);

  // implements Message ----------------------------------------------

  inline OCRTranslationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  OCRTranslationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OCRTranslationRequest& from);
  void MergeFrom(const OCRTranslationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OCRTranslationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FromLanguage = 5;
  bool has_fromlanguage() const;
  void clear_fromlanguage();
  static const int kFromLanguageFieldNumber = 5;
  const ::std::string& fromlanguage() const;
  void set_fromlanguage(const ::std::string& value);
  #if LANG_CXX11
  void set_fromlanguage(::std::string&& value);
  #endif
  void set_fromlanguage(const char* value);
  void set_fromlanguage(const char* value, size_t size);
  ::std::string* mutable_fromlanguage();
  ::std::string* release_fromlanguage();
  void set_allocated_fromlanguage(::std::string* fromlanguage);

  // optional string ToLanguage = 6;
  bool has_tolanguage() const;
  void clear_tolanguage();
  static const int kToLanguageFieldNumber = 6;
  const ::std::string& tolanguage() const;
  void set_tolanguage(const ::std::string& value);
  #if LANG_CXX11
  void set_tolanguage(::std::string&& value);
  #endif
  void set_tolanguage(const char* value);
  void set_tolanguage(const char* value, size_t size);
  ::std::string* mutable_tolanguage();
  ::std::string* release_tolanguage();
  void set_allocated_tolanguage(::std::string* tolanguage);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t ImageBuffer = 3;
  bool has_imagebuffer() const;
  void clear_imagebuffer();
  static const int kImageBufferFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& imagebuffer() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_imagebuffer();
  ::micromsg::SKBuiltinBuffer_t* release_imagebuffer();
  void set_allocated_imagebuffer(::micromsg::SKBuiltinBuffer_t* imagebuffer);

  // required uint32 ClientScanID = 2;
  bool has_clientscanid() const;
  void clear_clientscanid();
  static const int kClientScanIDFieldNumber = 2;
  ::google::protobuf::uint32 clientscanid() const;
  void set_clientscanid(::google::protobuf::uint32 value);

  // required uint32 ImageType = 4;
  bool has_imagetype() const;
  void clear_imagetype();
  static const int kImageTypeFieldNumber = 4;
  ::google::protobuf::uint32 imagetype() const;
  void set_imagetype(::google::protobuf::uint32 value);

  // optional uint32 SessionID = 7;
  bool has_sessionid() const;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 7;
  ::google::protobuf::uint32 sessionid() const;
  void set_sessionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.OCRTranslationRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_clientscanid();
  void clear_has_clientscanid();
  void set_has_imagebuffer();
  void clear_has_imagebuffer();
  void set_has_imagetype();
  void clear_has_imagetype();
  void set_has_fromlanguage();
  void clear_has_fromlanguage();
  void set_has_tolanguage();
  void clear_has_tolanguage();
  void set_has_sessionid();
  void clear_has_sessionid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fromlanguage_;
  ::google::protobuf::internal::ArenaStringPtr tolanguage_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* imagebuffer_;
  ::google::protobuf::uint32 clientscanid_;
  ::google::protobuf::uint32 imagetype_;
  ::google::protobuf::uint32 sessionid_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OCRTranslationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.OCRTranslationResponse) */ {
 public:
  OCRTranslationResponse();
  virtual ~OCRTranslationResponse();

  OCRTranslationResponse(const OCRTranslationResponse& from);

  inline OCRTranslationResponse& operator=(const OCRTranslationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OCRTranslationResponse& default_instance();

  static inline const OCRTranslationResponse* internal_default_instance() {
    return reinterpret_cast<const OCRTranslationResponse*>(
               &_OCRTranslationResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(OCRTranslationResponse* other);

  // implements Message ----------------------------------------------

  inline OCRTranslationResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  OCRTranslationResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OCRTranslationResponse& from);
  void MergeFrom(const OCRTranslationResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OCRTranslationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Source = 3;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // optional string Translation = 4;
  bool has_translation() const;
  void clear_translation();
  static const int kTranslationFieldNumber = 4;
  const ::std::string& translation() const;
  void set_translation(const ::std::string& value);
  #if LANG_CXX11
  void set_translation(::std::string&& value);
  #endif
  void set_translation(const char* value);
  void set_translation(const char* value, size_t size);
  ::std::string* mutable_translation();
  ::std::string* release_translation();
  void set_allocated_translation(::std::string* translation);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 ClientScanID = 2;
  bool has_clientscanid() const;
  void clear_clientscanid();
  static const int kClientScanIDFieldNumber = 2;
  ::google::protobuf::uint32 clientscanid() const;
  void set_clientscanid(::google::protobuf::uint32 value);

  // required uint32 ImageType = 5;
  bool has_imagetype() const;
  void clear_imagetype();
  static const int kImageTypeFieldNumber = 5;
  ::google::protobuf::uint32 imagetype() const;
  void set_imagetype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.OCRTranslationResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_clientscanid();
  void clear_has_clientscanid();
  void set_has_source();
  void clear_has_source();
  void set_has_translation();
  void clear_has_translation();
  void set_has_imagetype();
  void clear_has_imagetype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr translation_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 clientscanid_;
  ::google::protobuf::uint32 imagetype_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeTVRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeTVRequest) */ {
 public:
  ShakeTVRequest();
  virtual ~ShakeTVRequest();

  ShakeTVRequest(const ShakeTVRequest& from);

  inline ShakeTVRequest& operator=(const ShakeTVRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeTVRequest& default_instance();

  static inline const ShakeTVRequest* internal_default_instance() {
    return reinterpret_cast<const ShakeTVRequest*>(
               &_ShakeTVRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ShakeTVRequest* other);

  // implements Message ----------------------------------------------

  inline ShakeTVRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeTVRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeTVRequest& from);
  void MergeFrom(const ShakeTVRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeTVRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t Data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& data() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_data();
  ::micromsg::SKBuiltinBuffer_t* release_data();
  void set_allocated_data(::micromsg::SKBuiltinBuffer_t* data);

  // required uint32 DataId = 3;
  bool has_dataid() const;
  void clear_dataid();
  static const int kDataIdFieldNumber = 3;
  ::google::protobuf::uint32 dataid() const;
  void set_dataid(::google::protobuf::uint32 value);

  // required uint32 EndFlag = 4;
  bool has_endflag() const;
  void clear_endflag();
  static const int kEndFlagFieldNumber = 4;
  ::google::protobuf::uint32 endflag() const;
  void set_endflag(::google::protobuf::uint32 value);

  // required float VoiceLen = 5;
  bool has_voicelen() const;
  void clear_voicelen();
  static const int kVoiceLenFieldNumber = 5;
  float voicelen() const;
  void set_voicelen(float value);

  // required uint32 NetType = 6;
  bool has_nettype() const;
  void clear_nettype();
  static const int kNetTypeFieldNumber = 6;
  ::google::protobuf::uint32 nettype() const;
  void set_nettype(::google::protobuf::uint32 value);

  // required uint32 SdkVersion = 7;
  bool has_sdkversion() const;
  void clear_sdkversion();
  static const int kSdkVersionFieldNumber = 7;
  ::google::protobuf::uint32 sdkversion() const;
  void set_sdkversion(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeTVRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_data();
  void clear_has_data();
  void set_has_dataid();
  void clear_has_dataid();
  void set_has_endflag();
  void clear_has_endflag();
  void set_has_voicelen();
  void clear_has_voicelen();
  void set_has_nettype();
  void clear_has_nettype();
  void set_has_sdkversion();
  void clear_has_sdkversion();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* data_;
  ::google::protobuf::uint32 dataid_;
  ::google::protobuf::uint32 endflag_;
  float voicelen_;
  ::google::protobuf::uint32 nettype_;
  ::google::protobuf::uint32 sdkversion_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeTVResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeTVResponse) */ {
 public:
  ShakeTVResponse();
  virtual ~ShakeTVResponse();

  ShakeTVResponse(const ShakeTVResponse& from);

  inline ShakeTVResponse& operator=(const ShakeTVResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeTVResponse& default_instance();

  static inline const ShakeTVResponse* internal_default_instance() {
    return reinterpret_cast<const ShakeTVResponse*>(
               &_ShakeTVResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ShakeTVResponse* other);

  // implements Message ----------------------------------------------

  inline ShakeTVResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeTVResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeTVResponse& from);
  void MergeFrom(const ShakeTVResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeTVResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DescriptionXML = 4;
  bool has_descriptionxml() const;
  void clear_descriptionxml();
  static const int kDescriptionXMLFieldNumber = 4;
  const ::std::string& descriptionxml() const;
  void set_descriptionxml(const ::std::string& value);
  #if LANG_CXX11
  void set_descriptionxml(::std::string&& value);
  #endif
  void set_descriptionxml(const char* value);
  void set_descriptionxml(const char* value, size_t size);
  ::std::string* mutable_descriptionxml();
  ::std::string* release_descriptionxml();
  void set_allocated_descriptionxml(::std::string* descriptionxml);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 EndFlag = 2;
  bool has_endflag() const;
  void clear_endflag();
  static const int kEndFlagFieldNumber = 2;
  ::google::protobuf::uint32 endflag() const;
  void set_endflag(::google::protobuf::uint32 value);

  // required uint32 Type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeTVResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_endflag();
  void clear_has_endflag();
  void set_has_type();
  void clear_has_type();
  void set_has_descriptionxml();
  void clear_has_descriptionxml();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr descriptionxml_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 endflag_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTVInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetTVInfoRequest) */ {
 public:
  GetTVInfoRequest();
  virtual ~GetTVInfoRequest();

  GetTVInfoRequest(const GetTVInfoRequest& from);

  inline GetTVInfoRequest& operator=(const GetTVInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTVInfoRequest& default_instance();

  static inline const GetTVInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetTVInfoRequest*>(
               &_GetTVInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GetTVInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetTVInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetTVInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetTVInfoRequest& from);
  void MergeFrom(const GetTVInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetTVInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string TVID = 2;
  bool has_tvid() const;
  void clear_tvid();
  static const int kTVIDFieldNumber = 2;
  const ::std::string& tvid() const;
  void set_tvid(const ::std::string& value);
  #if LANG_CXX11
  void set_tvid(::std::string&& value);
  #endif
  void set_tvid(const char* value);
  void set_tvid(const char* value, size_t size);
  ::std::string* mutable_tvid();
  ::std::string* release_tvid();
  void set_allocated_tvid(::std::string* tvid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Scene = 3;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 3;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetTVInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_tvid();
  void clear_has_tvid();
  void set_has_scene();
  void clear_has_scene();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tvid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTVInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetTVInfoResponse) */ {
 public:
  GetTVInfoResponse();
  virtual ~GetTVInfoResponse();

  GetTVInfoResponse(const GetTVInfoResponse& from);

  inline GetTVInfoResponse& operator=(const GetTVInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTVInfoResponse& default_instance();

  static inline const GetTVInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetTVInfoResponse*>(
               &_GetTVInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetTVInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetTVInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetTVInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetTVInfoResponse& from);
  void MergeFrom(const GetTVInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetTVInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DescriptionXML = 3;
  bool has_descriptionxml() const;
  void clear_descriptionxml();
  static const int kDescriptionXMLFieldNumber = 3;
  const ::std::string& descriptionxml() const;
  void set_descriptionxml(const ::std::string& value);
  #if LANG_CXX11
  void set_descriptionxml(::std::string&& value);
  #endif
  void set_descriptionxml(const char* value);
  void set_descriptionxml(const char* value, size_t size);
  ::std::string* mutable_descriptionxml();
  ::std::string* release_descriptionxml();
  void set_allocated_descriptionxml(::std::string* descriptionxml);

  // optional string TVID = 4;
  bool has_tvid() const;
  void clear_tvid();
  static const int kTVIDFieldNumber = 4;
  const ::std::string& tvid() const;
  void set_tvid(const ::std::string& value);
  #if LANG_CXX11
  void set_tvid(::std::string&& value);
  #endif
  void set_tvid(const char* value);
  void set_tvid(const char* value, size_t size);
  ::std::string* mutable_tvid();
  ::std::string* release_tvid();
  void set_allocated_tvid(::std::string* tvid);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetTVInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_type();
  void clear_has_type();
  void set_has_descriptionxml();
  void clear_has_descriptionxml();
  void set_has_tvid();
  void clear_has_tvid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr descriptionxml_;
  ::google::protobuf::internal::ArenaStringPtr tvid_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeMusicRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeMusicRequest) */ {
 public:
  ShakeMusicRequest();
  virtual ~ShakeMusicRequest();

  ShakeMusicRequest(const ShakeMusicRequest& from);

  inline ShakeMusicRequest& operator=(const ShakeMusicRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeMusicRequest& default_instance();

  static inline const ShakeMusicRequest* internal_default_instance() {
    return reinterpret_cast<const ShakeMusicRequest*>(
               &_ShakeMusicRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ShakeMusicRequest* other);

  // implements Message ----------------------------------------------

  inline ShakeMusicRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeMusicRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeMusicRequest& from);
  void MergeFrom(const ShakeMusicRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeMusicRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t Data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& data() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_data();
  ::micromsg::SKBuiltinBuffer_t* release_data();
  void set_allocated_data(::micromsg::SKBuiltinBuffer_t* data);

  // required uint32 DataId = 3;
  bool has_dataid() const;
  void clear_dataid();
  static const int kDataIdFieldNumber = 3;
  ::google::protobuf::uint32 dataid() const;
  void set_dataid(::google::protobuf::uint32 value);

  // required uint32 EndFlag = 4;
  bool has_endflag() const;
  void clear_endflag();
  static const int kEndFlagFieldNumber = 4;
  ::google::protobuf::uint32 endflag() const;
  void set_endflag(::google::protobuf::uint32 value);

  // required float VoiceLen = 5;
  bool has_voicelen() const;
  void clear_voicelen();
  static const int kVoiceLenFieldNumber = 5;
  float voicelen() const;
  void set_voicelen(float value);

  // required uint32 NetType = 6;
  bool has_nettype() const;
  void clear_nettype();
  static const int kNetTypeFieldNumber = 6;
  ::google::protobuf::uint32 nettype() const;
  void set_nettype(::google::protobuf::uint32 value);

  // required uint32 SdkVersion = 7;
  bool has_sdkversion() const;
  void clear_sdkversion();
  static const int kSdkVersionFieldNumber = 7;
  ::google::protobuf::uint32 sdkversion() const;
  void set_sdkversion(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeMusicRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_data();
  void clear_has_data();
  void set_has_dataid();
  void clear_has_dataid();
  void set_has_endflag();
  void clear_has_endflag();
  void set_has_voicelen();
  void clear_has_voicelen();
  void set_has_nettype();
  void clear_has_nettype();
  void set_has_sdkversion();
  void clear_has_sdkversion();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* data_;
  ::google::protobuf::uint32 dataid_;
  ::google::protobuf::uint32 endflag_;
  float voicelen_;
  ::google::protobuf::uint32 nettype_;
  ::google::protobuf::uint32 sdkversion_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeMusicResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeMusicResponse) */ {
 public:
  ShakeMusicResponse();
  virtual ~ShakeMusicResponse();

  ShakeMusicResponse(const ShakeMusicResponse& from);

  inline ShakeMusicResponse& operator=(const ShakeMusicResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeMusicResponse& default_instance();

  static inline const ShakeMusicResponse* internal_default_instance() {
    return reinterpret_cast<const ShakeMusicResponse*>(
               &_ShakeMusicResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ShakeMusicResponse* other);

  // implements Message ----------------------------------------------

  inline ShakeMusicResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeMusicResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeMusicResponse& from);
  void MergeFrom(const ShakeMusicResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeMusicResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string TVDescriptionXML = 15;
  bool has_tvdescriptionxml() const;
  void clear_tvdescriptionxml();
  static const int kTVDescriptionXMLFieldNumber = 15;
  const ::std::string& tvdescriptionxml() const;
  void set_tvdescriptionxml(const ::std::string& value);
  #if LANG_CXX11
  void set_tvdescriptionxml(::std::string&& value);
  #endif
  void set_tvdescriptionxml(const char* value);
  void set_tvdescriptionxml(const char* value, size_t size);
  ::std::string* mutable_tvdescriptionxml();
  ::std::string* release_tvdescriptionxml();
  void set_allocated_tvdescriptionxml(::std::string* tvdescriptionxml);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t SongName = 5;
  bool has_songname() const;
  void clear_songname();
  static const int kSongNameFieldNumber = 5;
  const ::micromsg::SKBuiltinBuffer_t& songname() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_songname();
  ::micromsg::SKBuiltinBuffer_t* release_songname();
  void set_allocated_songname(::micromsg::SKBuiltinBuffer_t* songname);

  // required .micromsg.SKBuiltinBuffer_t SongSinger = 6;
  bool has_songsinger() const;
  void clear_songsinger();
  static const int kSongSingerFieldNumber = 6;
  const ::micromsg::SKBuiltinBuffer_t& songsinger() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_songsinger();
  ::micromsg::SKBuiltinBuffer_t* release_songsinger();
  void set_allocated_songsinger(::micromsg::SKBuiltinBuffer_t* songsinger);

  // required .micromsg.SKBuiltinBuffer_t SongAlbum = 7;
  bool has_songalbum() const;
  void clear_songalbum();
  static const int kSongAlbumFieldNumber = 7;
  const ::micromsg::SKBuiltinBuffer_t& songalbum() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_songalbum();
  ::micromsg::SKBuiltinBuffer_t* release_songalbum();
  void set_allocated_songalbum(::micromsg::SKBuiltinBuffer_t* songalbum);

  // required .micromsg.SKBuiltinBuffer_t SongAlbumUrl = 8;
  bool has_songalbumurl() const;
  void clear_songalbumurl();
  static const int kSongAlbumUrlFieldNumber = 8;
  const ::micromsg::SKBuiltinBuffer_t& songalbumurl() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_songalbumurl();
  ::micromsg::SKBuiltinBuffer_t* release_songalbumurl();
  void set_allocated_songalbumurl(::micromsg::SKBuiltinBuffer_t* songalbumurl);

  // required .micromsg.SKBuiltinBuffer_t SongWifiUrl = 9;
  bool has_songwifiurl() const;
  void clear_songwifiurl();
  static const int kSongWifiUrlFieldNumber = 9;
  const ::micromsg::SKBuiltinBuffer_t& songwifiurl() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_songwifiurl();
  ::micromsg::SKBuiltinBuffer_t* release_songwifiurl();
  void set_allocated_songwifiurl(::micromsg::SKBuiltinBuffer_t* songwifiurl);

  // required .micromsg.SKBuiltinBuffer_t SongWapLinkUrl = 10;
  bool has_songwaplinkurl() const;
  void clear_songwaplinkurl();
  static const int kSongWapLinkUrlFieldNumber = 10;
  const ::micromsg::SKBuiltinBuffer_t& songwaplinkurl() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_songwaplinkurl();
  ::micromsg::SKBuiltinBuffer_t* release_songwaplinkurl();
  void set_allocated_songwaplinkurl(::micromsg::SKBuiltinBuffer_t* songwaplinkurl);

  // required .micromsg.SKBuiltinBuffer_t SongWebUrl = 11;
  bool has_songweburl() const;
  void clear_songweburl();
  static const int kSongWebUrlFieldNumber = 11;
  const ::micromsg::SKBuiltinBuffer_t& songweburl() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_songweburl();
  ::micromsg::SKBuiltinBuffer_t* release_songweburl();
  void set_allocated_songweburl(::micromsg::SKBuiltinBuffer_t* songweburl);

  // required .micromsg.SKBuiltinBuffer_t SongLyric = 12;
  bool has_songlyric() const;
  void clear_songlyric();
  static const int kSongLyricFieldNumber = 12;
  const ::micromsg::SKBuiltinBuffer_t& songlyric() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_songlyric();
  ::micromsg::SKBuiltinBuffer_t* release_songlyric();
  void set_allocated_songlyric(::micromsg::SKBuiltinBuffer_t* songlyric);

  // required uint32 EndFlag = 2;
  bool has_endflag() const;
  void clear_endflag();
  static const int kEndFlagFieldNumber = 2;
  ::google::protobuf::uint32 endflag() const;
  void set_endflag(::google::protobuf::uint32 value);

  // required uint32 MusicId = 3;
  bool has_musicid() const;
  void clear_musicid();
  static const int kMusicIdFieldNumber = 3;
  ::google::protobuf::uint32 musicid() const;
  void set_musicid(::google::protobuf::uint32 value);

  // required float Offset = 4;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  float offset() const;
  void set_offset(float value);

  // optional uint32 ResultType = 13;
  bool has_resulttype() const;
  void clear_resulttype();
  static const int kResultTypeFieldNumber = 13;
  ::google::protobuf::uint32 resulttype() const;
  void set_resulttype(::google::protobuf::uint32 value);

  // optional uint32 TVType = 14;
  bool has_tvtype() const;
  void clear_tvtype();
  static const int kTVTypeFieldNumber = 14;
  ::google::protobuf::uint32 tvtype() const;
  void set_tvtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeMusicResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_endflag();
  void clear_has_endflag();
  void set_has_musicid();
  void clear_has_musicid();
  void set_has_offset();
  void clear_has_offset();
  void set_has_songname();
  void clear_has_songname();
  void set_has_songsinger();
  void clear_has_songsinger();
  void set_has_songalbum();
  void clear_has_songalbum();
  void set_has_songalbumurl();
  void clear_has_songalbumurl();
  void set_has_songwifiurl();
  void clear_has_songwifiurl();
  void set_has_songwaplinkurl();
  void clear_has_songwaplinkurl();
  void set_has_songweburl();
  void clear_has_songweburl();
  void set_has_songlyric();
  void clear_has_songlyric();
  void set_has_resulttype();
  void clear_has_resulttype();
  void set_has_tvtype();
  void clear_has_tvtype();
  void set_has_tvdescriptionxml();
  void clear_has_tvdescriptionxml();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tvdescriptionxml_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* songname_;
  ::micromsg::SKBuiltinBuffer_t* songsinger_;
  ::micromsg::SKBuiltinBuffer_t* songalbum_;
  ::micromsg::SKBuiltinBuffer_t* songalbumurl_;
  ::micromsg::SKBuiltinBuffer_t* songwifiurl_;
  ::micromsg::SKBuiltinBuffer_t* songwaplinkurl_;
  ::micromsg::SKBuiltinBuffer_t* songweburl_;
  ::micromsg::SKBuiltinBuffer_t* songlyric_;
  ::google::protobuf::uint32 endflag_;
  ::google::protobuf::uint32 musicid_;
  float offset_;
  ::google::protobuf::uint32 resulttype_;
  ::google::protobuf::uint32 tvtype_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetQQMusicLyricRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetQQMusicLyricRequest) */ {
 public:
  GetQQMusicLyricRequest();
  virtual ~GetQQMusicLyricRequest();

  GetQQMusicLyricRequest(const GetQQMusicLyricRequest& from);

  inline GetQQMusicLyricRequest& operator=(const GetQQMusicLyricRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetQQMusicLyricRequest& default_instance();

  static inline const GetQQMusicLyricRequest* internal_default_instance() {
    return reinterpret_cast<const GetQQMusicLyricRequest*>(
               &_GetQQMusicLyricRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GetQQMusicLyricRequest* other);

  // implements Message ----------------------------------------------

  inline GetQQMusicLyricRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetQQMusicLyricRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetQQMusicLyricRequest& from);
  void MergeFrom(const GetQQMusicLyricRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetQQMusicLyricRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t Url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& url() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_url();
  ::micromsg::SKBuiltinBuffer_t* release_url();
  void set_allocated_url(::micromsg::SKBuiltinBuffer_t* url);

  // required uint32 SongId = 2;
  bool has_songid() const;
  void clear_songid();
  static const int kSongIdFieldNumber = 2;
  ::google::protobuf::uint32 songid() const;
  void set_songid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetQQMusicLyricRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_songid();
  void clear_has_songid();
  void set_has_url();
  void clear_has_url();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* url_;
  ::google::protobuf::uint32 songid_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetQQMusicLyricResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetQQMusicLyricResponse) */ {
 public:
  GetQQMusicLyricResponse();
  virtual ~GetQQMusicLyricResponse();

  GetQQMusicLyricResponse(const GetQQMusicLyricResponse& from);

  inline GetQQMusicLyricResponse& operator=(const GetQQMusicLyricResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetQQMusicLyricResponse& default_instance();

  static inline const GetQQMusicLyricResponse* internal_default_instance() {
    return reinterpret_cast<const GetQQMusicLyricResponse*>(
               &_GetQQMusicLyricResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GetQQMusicLyricResponse* other);

  // implements Message ----------------------------------------------

  inline GetQQMusicLyricResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetQQMusicLyricResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetQQMusicLyricResponse& from);
  void MergeFrom(const GetQQMusicLyricResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetQQMusicLyricResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t SongLyric = 2;
  bool has_songlyric() const;
  void clear_songlyric();
  static const int kSongLyricFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& songlyric() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_songlyric();
  ::micromsg::SKBuiltinBuffer_t* release_songlyric();
  void set_allocated_songlyric(::micromsg::SKBuiltinBuffer_t* songlyric);

  // @@protoc_insertion_point(class_scope:micromsg.GetQQMusicLyricResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_songlyric();
  void clear_has_songlyric();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* songlyric_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UploadInputVoiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.UploadInputVoiceRequest) */ {
 public:
  UploadInputVoiceRequest();
  virtual ~UploadInputVoiceRequest();

  UploadInputVoiceRequest(const UploadInputVoiceRequest& from);

  inline UploadInputVoiceRequest& operator=(const UploadInputVoiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadInputVoiceRequest& default_instance();

  static inline const UploadInputVoiceRequest* internal_default_instance() {
    return reinterpret_cast<const UploadInputVoiceRequest*>(
               &_UploadInputVoiceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(UploadInputVoiceRequest* other);

  // implements Message ----------------------------------------------

  inline UploadInputVoiceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UploadInputVoiceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UploadInputVoiceRequest& from);
  void MergeFrom(const UploadInputVoiceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UploadInputVoiceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string ClientVoiceId = 5;
  bool has_clientvoiceid() const;
  void clear_clientvoiceid();
  static const int kClientVoiceIdFieldNumber = 5;
  const ::std::string& clientvoiceid() const;
  void set_clientvoiceid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientvoiceid(::std::string&& value);
  #endif
  void set_clientvoiceid(const char* value);
  void set_clientvoiceid(const char* value, size_t size);
  ::std::string* mutable_clientvoiceid();
  ::std::string* release_clientvoiceid();
  void set_allocated_clientvoiceid(::std::string* clientvoiceid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t Data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& data() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_data();
  ::micromsg::SKBuiltinBuffer_t* release_data();
  void set_allocated_data(::micromsg::SKBuiltinBuffer_t* data);

  // required uint32 Offset = 4;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // required uint32 EndFlag = 6;
  bool has_endflag() const;
  void clear_endflag();
  static const int kEndFlagFieldNumber = 6;
  ::google::protobuf::uint32 endflag() const;
  void set_endflag(::google::protobuf::uint32 value);

  // required uint32 SamplePerSec = 7;
  bool has_samplepersec() const;
  void clear_samplepersec();
  static const int kSamplePerSecFieldNumber = 7;
  ::google::protobuf::uint32 samplepersec() const;
  void set_samplepersec(::google::protobuf::uint32 value);

  // required uint32 BitsPerSample = 8;
  bool has_bitspersample() const;
  void clear_bitspersample();
  static const int kBitsPerSampleFieldNumber = 8;
  ::google::protobuf::uint32 bitspersample() const;
  void set_bitspersample(::google::protobuf::uint32 value);

  // required uint32 VoiceEncodeType = 9;
  bool has_voiceencodetype() const;
  void clear_voiceencodetype();
  static const int kVoiceEncodeTypeFieldNumber = 9;
  ::google::protobuf::uint32 voiceencodetype() const;
  void set_voiceencodetype(::google::protobuf::uint32 value);

  // required uint32 FileType = 10;
  bool has_filetype() const;
  void clear_filetype();
  static const int kFileTypeFieldNumber = 10;
  ::google::protobuf::uint32 filetype() const;
  void set_filetype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.UploadInputVoiceRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_username();
  void clear_has_username();
  void set_has_data();
  void clear_has_data();
  void set_has_offset();
  void clear_has_offset();
  void set_has_clientvoiceid();
  void clear_has_clientvoiceid();
  void set_has_endflag();
  void clear_has_endflag();
  void set_has_samplepersec();
  void clear_has_samplepersec();
  void set_has_bitspersample();
  void clear_has_bitspersample();
  void set_has_voiceencodetype();
  void clear_has_voiceencodetype();
  void set_has_filetype();
  void clear_has_filetype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr clientvoiceid_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* data_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 endflag_;
  ::google::protobuf::uint32 samplepersec_;
  ::google::protobuf::uint32 bitspersample_;
  ::google::protobuf::uint32 voiceencodetype_;
  ::google::protobuf::uint32 filetype_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UploadInputVoiceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.UploadInputVoiceResponse) */ {
 public:
  UploadInputVoiceResponse();
  virtual ~UploadInputVoiceResponse();

  UploadInputVoiceResponse(const UploadInputVoiceResponse& from);

  inline UploadInputVoiceResponse& operator=(const UploadInputVoiceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadInputVoiceResponse& default_instance();

  static inline const UploadInputVoiceResponse* internal_default_instance() {
    return reinterpret_cast<const UploadInputVoiceResponse*>(
               &_UploadInputVoiceResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(UploadInputVoiceResponse* other);

  // implements Message ----------------------------------------------

  inline UploadInputVoiceResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  UploadInputVoiceResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UploadInputVoiceResponse& from);
  void MergeFrom(const UploadInputVoiceResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UploadInputVoiceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t Text = 3;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& text() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_text();
  ::micromsg::SKBuiltinBuffer_t* release_text();
  void set_allocated_text(::micromsg::SKBuiltinBuffer_t* text);

  // required uint32 EndFlag = 2;
  bool has_endflag() const;
  void clear_endflag();
  static const int kEndFlagFieldNumber = 2;
  ::google::protobuf::uint32 endflag() const;
  void set_endflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.UploadInputVoiceResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_endflag();
  void clear_has_endflag();
  void set_has_text();
  void clear_has_text();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* text_;
  ::google::protobuf::uint32 endflag_;
  friend struct protobuf_mmvoiceaddr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VoiceAddrRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool VoiceAddrRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VoiceAddrRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VoiceAddrRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VoiceAddrRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& VoiceAddrRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* VoiceAddrRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* VoiceAddrRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.VoiceAddrRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void VoiceAddrRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoiceAddrRequest.BaseRequest)
}

// optional string UserName = 2;
inline bool VoiceAddrRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoiceAddrRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoiceAddrRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoiceAddrRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& VoiceAddrRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.UserName)
  return username_.GetNoArena();
}
inline void VoiceAddrRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrRequest.UserName)
}
#if LANG_CXX11
inline void VoiceAddrRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VoiceAddrRequest.UserName)
}
#endif
inline void VoiceAddrRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VoiceAddrRequest.UserName)
}
inline void VoiceAddrRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VoiceAddrRequest.UserName)
}
inline ::std::string* VoiceAddrRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoiceAddrRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.VoiceAddrRequest.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoiceAddrRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoiceAddrRequest.UserName)
}

// required .micromsg.SKBuiltinBuffer_t Data = 3;
inline bool VoiceAddrRequest::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VoiceAddrRequest::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VoiceAddrRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VoiceAddrRequest::clear_data() {
  if (data_ != NULL) data_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_data();
}
inline const ::micromsg::SKBuiltinBuffer_t& VoiceAddrRequest::data() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.Data)
  return data_ != NULL ? *data_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* VoiceAddrRequest::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrRequest.Data)
  return data_;
}
inline ::micromsg::SKBuiltinBuffer_t* VoiceAddrRequest::release_data() {
  // @@protoc_insertion_point(field_release:micromsg.VoiceAddrRequest.Data)
  clear_has_data();
  ::micromsg::SKBuiltinBuffer_t* temp = data_;
  data_ = NULL;
  return temp;
}
inline void VoiceAddrRequest::set_allocated_data(::micromsg::SKBuiltinBuffer_t* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoiceAddrRequest.Data)
}

// required uint32 Offset = 4;
inline bool VoiceAddrRequest::has_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VoiceAddrRequest::set_has_offset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VoiceAddrRequest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VoiceAddrRequest::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 VoiceAddrRequest::offset() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.Offset)
  return offset_;
}
inline void VoiceAddrRequest::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrRequest.Offset)
}

// optional string ClientVoiceId = 5;
inline bool VoiceAddrRequest::has_clientvoiceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoiceAddrRequest::set_has_clientvoiceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoiceAddrRequest::clear_has_clientvoiceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoiceAddrRequest::clear_clientvoiceid() {
  clientvoiceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientvoiceid();
}
inline const ::std::string& VoiceAddrRequest::clientvoiceid() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.ClientVoiceId)
  return clientvoiceid_.GetNoArena();
}
inline void VoiceAddrRequest::set_clientvoiceid(const ::std::string& value) {
  set_has_clientvoiceid();
  clientvoiceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrRequest.ClientVoiceId)
}
#if LANG_CXX11
inline void VoiceAddrRequest::set_clientvoiceid(::std::string&& value) {
  set_has_clientvoiceid();
  clientvoiceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VoiceAddrRequest.ClientVoiceId)
}
#endif
inline void VoiceAddrRequest::set_clientvoiceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientvoiceid();
  clientvoiceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VoiceAddrRequest.ClientVoiceId)
}
inline void VoiceAddrRequest::set_clientvoiceid(const char* value, size_t size) {
  set_has_clientvoiceid();
  clientvoiceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VoiceAddrRequest.ClientVoiceId)
}
inline ::std::string* VoiceAddrRequest::mutable_clientvoiceid() {
  set_has_clientvoiceid();
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrRequest.ClientVoiceId)
  return clientvoiceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoiceAddrRequest::release_clientvoiceid() {
  // @@protoc_insertion_point(field_release:micromsg.VoiceAddrRequest.ClientVoiceId)
  clear_has_clientvoiceid();
  return clientvoiceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoiceAddrRequest::set_allocated_clientvoiceid(::std::string* clientvoiceid) {
  if (clientvoiceid != NULL) {
    set_has_clientvoiceid();
  } else {
    clear_has_clientvoiceid();
  }
  clientvoiceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientvoiceid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoiceAddrRequest.ClientVoiceId)
}

// required uint32 EndFlag = 6;
inline bool VoiceAddrRequest::has_endflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VoiceAddrRequest::set_has_endflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VoiceAddrRequest::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VoiceAddrRequest::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 VoiceAddrRequest::endflag() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.EndFlag)
  return endflag_;
}
inline void VoiceAddrRequest::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrRequest.EndFlag)
}

// required uint32 SamplePerSec = 7;
inline bool VoiceAddrRequest::has_samplepersec() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VoiceAddrRequest::set_has_samplepersec() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VoiceAddrRequest::clear_has_samplepersec() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VoiceAddrRequest::clear_samplepersec() {
  samplepersec_ = 0u;
  clear_has_samplepersec();
}
inline ::google::protobuf::uint32 VoiceAddrRequest::samplepersec() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.SamplePerSec)
  return samplepersec_;
}
inline void VoiceAddrRequest::set_samplepersec(::google::protobuf::uint32 value) {
  set_has_samplepersec();
  samplepersec_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrRequest.SamplePerSec)
}

// required uint32 BitsPerSample = 8;
inline bool VoiceAddrRequest::has_bitspersample() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VoiceAddrRequest::set_has_bitspersample() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VoiceAddrRequest::clear_has_bitspersample() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VoiceAddrRequest::clear_bitspersample() {
  bitspersample_ = 0u;
  clear_has_bitspersample();
}
inline ::google::protobuf::uint32 VoiceAddrRequest::bitspersample() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.BitsPerSample)
  return bitspersample_;
}
inline void VoiceAddrRequest::set_bitspersample(::google::protobuf::uint32 value) {
  set_has_bitspersample();
  bitspersample_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrRequest.BitsPerSample)
}

// required uint32 VoiceEncodeType = 9;
inline bool VoiceAddrRequest::has_voiceencodetype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void VoiceAddrRequest::set_has_voiceencodetype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void VoiceAddrRequest::clear_has_voiceencodetype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void VoiceAddrRequest::clear_voiceencodetype() {
  voiceencodetype_ = 0u;
  clear_has_voiceencodetype();
}
inline ::google::protobuf::uint32 VoiceAddrRequest::voiceencodetype() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.VoiceEncodeType)
  return voiceencodetype_;
}
inline void VoiceAddrRequest::set_voiceencodetype(::google::protobuf::uint32 value) {
  set_has_voiceencodetype();
  voiceencodetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrRequest.VoiceEncodeType)
}

// required uint32 FileType = 10;
inline bool VoiceAddrRequest::has_filetype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void VoiceAddrRequest::set_has_filetype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void VoiceAddrRequest::clear_has_filetype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void VoiceAddrRequest::clear_filetype() {
  filetype_ = 0u;
  clear_has_filetype();
}
inline ::google::protobuf::uint32 VoiceAddrRequest::filetype() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.FileType)
  return filetype_;
}
inline void VoiceAddrRequest::set_filetype(::google::protobuf::uint32 value) {
  set_has_filetype();
  filetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrRequest.FileType)
}

// optional uint32 SearchType = 11;
inline bool VoiceAddrRequest::has_searchtype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void VoiceAddrRequest::set_has_searchtype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void VoiceAddrRequest::clear_has_searchtype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void VoiceAddrRequest::clear_searchtype() {
  searchtype_ = 0u;
  clear_has_searchtype();
}
inline ::google::protobuf::uint32 VoiceAddrRequest::searchtype() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.SearchType)
  return searchtype_;
}
inline void VoiceAddrRequest::set_searchtype(::google::protobuf::uint32 value) {
  set_has_searchtype();
  searchtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrRequest.SearchType)
}

// optional uint32 ExtraNameCount = 12;
inline bool VoiceAddrRequest::has_extranamecount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void VoiceAddrRequest::set_has_extranamecount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void VoiceAddrRequest::clear_has_extranamecount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void VoiceAddrRequest::clear_extranamecount() {
  extranamecount_ = 0u;
  clear_has_extranamecount();
}
inline ::google::protobuf::uint32 VoiceAddrRequest::extranamecount() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.ExtraNameCount)
  return extranamecount_;
}
inline void VoiceAddrRequest::set_extranamecount(::google::protobuf::uint32 value) {
  set_has_extranamecount();
  extranamecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrRequest.ExtraNameCount)
}

// repeated .micromsg.SKBuiltinString_t ExtraNameUserNameList = 13;
inline int VoiceAddrRequest::extranameusernamelist_size() const {
  return extranameusernamelist_.size();
}
inline void VoiceAddrRequest::clear_extranameusernamelist() {
  extranameusernamelist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& VoiceAddrRequest::extranameusernamelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.ExtraNameUserNameList)
  return extranameusernamelist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* VoiceAddrRequest::mutable_extranameusernamelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrRequest.ExtraNameUserNameList)
  return extranameusernamelist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* VoiceAddrRequest::add_extranameusernamelist() {
  // @@protoc_insertion_point(field_add:micromsg.VoiceAddrRequest.ExtraNameUserNameList)
  return extranameusernamelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
VoiceAddrRequest::mutable_extranameusernamelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.VoiceAddrRequest.ExtraNameUserNameList)
  return &extranameusernamelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
VoiceAddrRequest::extranameusernamelist() const {
  // @@protoc_insertion_point(field_list:micromsg.VoiceAddrRequest.ExtraNameUserNameList)
  return extranameusernamelist_;
}

// repeated .micromsg.SKBuiltinBuffer_t ExtraNameRemarkNameList = 14;
inline int VoiceAddrRequest::extranameremarknamelist_size() const {
  return extranameremarknamelist_.size();
}
inline void VoiceAddrRequest::clear_extranameremarknamelist() {
  extranameremarknamelist_.Clear();
}
inline const ::micromsg::SKBuiltinBuffer_t& VoiceAddrRequest::extranameremarknamelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrRequest.ExtraNameRemarkNameList)
  return extranameremarknamelist_.Get(index);
}
inline ::micromsg::SKBuiltinBuffer_t* VoiceAddrRequest::mutable_extranameremarknamelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrRequest.ExtraNameRemarkNameList)
  return extranameremarknamelist_.Mutable(index);
}
inline ::micromsg::SKBuiltinBuffer_t* VoiceAddrRequest::add_extranameremarknamelist() {
  // @@protoc_insertion_point(field_add:micromsg.VoiceAddrRequest.ExtraNameRemarkNameList)
  return extranameremarknamelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinBuffer_t >*
VoiceAddrRequest::mutable_extranameremarknamelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.VoiceAddrRequest.ExtraNameRemarkNameList)
  return &extranameremarknamelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinBuffer_t >&
VoiceAddrRequest::extranameremarknamelist() const {
  // @@protoc_insertion_point(field_list:micromsg.VoiceAddrRequest.ExtraNameRemarkNameList)
  return extranameremarknamelist_;
}

// -------------------------------------------------------------------

// VoiceAddrResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool VoiceAddrResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoiceAddrResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoiceAddrResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoiceAddrResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& VoiceAddrResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* VoiceAddrResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* VoiceAddrResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.VoiceAddrResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void VoiceAddrResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoiceAddrResponse.BaseResponse)
}

// required uint32 EndFlag = 2;
inline bool VoiceAddrResponse::has_endflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VoiceAddrResponse::set_has_endflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VoiceAddrResponse::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VoiceAddrResponse::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 VoiceAddrResponse::endflag() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrResponse.EndFlag)
  return endflag_;
}
inline void VoiceAddrResponse::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrResponse.EndFlag)
}

// required int32 UserCount = 3;
inline bool VoiceAddrResponse::has_usercount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VoiceAddrResponse::set_has_usercount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VoiceAddrResponse::clear_has_usercount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VoiceAddrResponse::clear_usercount() {
  usercount_ = 0;
  clear_has_usercount();
}
inline ::google::protobuf::int32 VoiceAddrResponse::usercount() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrResponse.UserCount)
  return usercount_;
}
inline void VoiceAddrResponse::set_usercount(::google::protobuf::int32 value) {
  set_has_usercount();
  usercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrResponse.UserCount)
}

// repeated .micromsg.SKBuiltinString_t UserNameList = 4;
inline int VoiceAddrResponse::usernamelist_size() const {
  return usernamelist_.size();
}
inline void VoiceAddrResponse::clear_usernamelist() {
  usernamelist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& VoiceAddrResponse::usernamelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrResponse.UserNameList)
  return usernamelist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* VoiceAddrResponse::mutable_usernamelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrResponse.UserNameList)
  return usernamelist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* VoiceAddrResponse::add_usernamelist() {
  // @@protoc_insertion_point(field_add:micromsg.VoiceAddrResponse.UserNameList)
  return usernamelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
VoiceAddrResponse::mutable_usernamelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.VoiceAddrResponse.UserNameList)
  return &usernamelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
VoiceAddrResponse::usernamelist() const {
  // @@protoc_insertion_point(field_list:micromsg.VoiceAddrResponse.UserNameList)
  return usernamelist_;
}

// optional string ReportFiled = 5;
inline bool VoiceAddrResponse::has_reportfiled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoiceAddrResponse::set_has_reportfiled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoiceAddrResponse::clear_has_reportfiled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoiceAddrResponse::clear_reportfiled() {
  reportfiled_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reportfiled();
}
inline const ::std::string& VoiceAddrResponse::reportfiled() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrResponse.ReportFiled)
  return reportfiled_.GetNoArena();
}
inline void VoiceAddrResponse::set_reportfiled(const ::std::string& value) {
  set_has_reportfiled();
  reportfiled_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrResponse.ReportFiled)
}
#if LANG_CXX11
inline void VoiceAddrResponse::set_reportfiled(::std::string&& value) {
  set_has_reportfiled();
  reportfiled_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VoiceAddrResponse.ReportFiled)
}
#endif
inline void VoiceAddrResponse::set_reportfiled(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reportfiled();
  reportfiled_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VoiceAddrResponse.ReportFiled)
}
inline void VoiceAddrResponse::set_reportfiled(const char* value, size_t size) {
  set_has_reportfiled();
  reportfiled_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VoiceAddrResponse.ReportFiled)
}
inline ::std::string* VoiceAddrResponse::mutable_reportfiled() {
  set_has_reportfiled();
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrResponse.ReportFiled)
  return reportfiled_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoiceAddrResponse::release_reportfiled() {
  // @@protoc_insertion_point(field_release:micromsg.VoiceAddrResponse.ReportFiled)
  clear_has_reportfiled();
  return reportfiled_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoiceAddrResponse::set_allocated_reportfiled(::std::string* reportfiled) {
  if (reportfiled != NULL) {
    set_has_reportfiled();
  } else {
    clear_has_reportfiled();
  }
  reportfiled_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reportfiled);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoiceAddrResponse.ReportFiled)
}

// -------------------------------------------------------------------

// VoiceAddrReportRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool VoiceAddrReportRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoiceAddrReportRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoiceAddrReportRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoiceAddrReportRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& VoiceAddrReportRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrReportRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* VoiceAddrReportRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrReportRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* VoiceAddrReportRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.VoiceAddrReportRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void VoiceAddrReportRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoiceAddrReportRequest.BaseRequest)
}

// required uint32 HitPos = 2;
inline bool VoiceAddrReportRequest::has_hitpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VoiceAddrReportRequest::set_has_hitpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VoiceAddrReportRequest::clear_has_hitpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VoiceAddrReportRequest::clear_hitpos() {
  hitpos_ = 0u;
  clear_has_hitpos();
}
inline ::google::protobuf::uint32 VoiceAddrReportRequest::hitpos() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrReportRequest.HitPos)
  return hitpos_;
}
inline void VoiceAddrReportRequest::set_hitpos(::google::protobuf::uint32 value) {
  set_has_hitpos();
  hitpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrReportRequest.HitPos)
}

// optional string HitUserName = 3;
inline bool VoiceAddrReportRequest::has_hitusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoiceAddrReportRequest::set_has_hitusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoiceAddrReportRequest::clear_has_hitusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoiceAddrReportRequest::clear_hitusername() {
  hitusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hitusername();
}
inline const ::std::string& VoiceAddrReportRequest::hitusername() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrReportRequest.HitUserName)
  return hitusername_.GetNoArena();
}
inline void VoiceAddrReportRequest::set_hitusername(const ::std::string& value) {
  set_has_hitusername();
  hitusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VoiceAddrReportRequest.HitUserName)
}
#if LANG_CXX11
inline void VoiceAddrReportRequest::set_hitusername(::std::string&& value) {
  set_has_hitusername();
  hitusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VoiceAddrReportRequest.HitUserName)
}
#endif
inline void VoiceAddrReportRequest::set_hitusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hitusername();
  hitusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VoiceAddrReportRequest.HitUserName)
}
inline void VoiceAddrReportRequest::set_hitusername(const char* value, size_t size) {
  set_has_hitusername();
  hitusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VoiceAddrReportRequest.HitUserName)
}
inline ::std::string* VoiceAddrReportRequest::mutable_hitusername() {
  set_has_hitusername();
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrReportRequest.HitUserName)
  return hitusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoiceAddrReportRequest::release_hitusername() {
  // @@protoc_insertion_point(field_release:micromsg.VoiceAddrReportRequest.HitUserName)
  clear_has_hitusername();
  return hitusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoiceAddrReportRequest::set_allocated_hitusername(::std::string* hitusername) {
  if (hitusername != NULL) {
    set_has_hitusername();
  } else {
    clear_has_hitusername();
  }
  hitusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hitusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoiceAddrReportRequest.HitUserName)
}

// -------------------------------------------------------------------

// VoiceAddrReportResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool VoiceAddrReportResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoiceAddrReportResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoiceAddrReportResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoiceAddrReportResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& VoiceAddrReportResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.VoiceAddrReportResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* VoiceAddrReportResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VoiceAddrReportResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* VoiceAddrReportResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.VoiceAddrReportResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void VoiceAddrReportResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoiceAddrReportResponse.BaseResponse)
}

// -------------------------------------------------------------------

// ScanBarcodeRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ScanBarcodeRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScanBarcodeRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScanBarcodeRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScanBarcodeRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ScanBarcodeRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanBarcodeRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ScanBarcodeRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanBarcodeRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ScanBarcodeRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ScanBarcodeRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ScanBarcodeRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanBarcodeRequest.BaseRequest)
}

// required uint32 Type = 2;
inline bool ScanBarcodeRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScanBarcodeRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScanBarcodeRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScanBarcodeRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ScanBarcodeRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanBarcodeRequest.Type)
  return type_;
}
inline void ScanBarcodeRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanBarcodeRequest.Type)
}

// optional string Barcode = 3;
inline bool ScanBarcodeRequest::has_barcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScanBarcodeRequest::set_has_barcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScanBarcodeRequest::clear_has_barcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScanBarcodeRequest::clear_barcode() {
  barcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_barcode();
}
inline const ::std::string& ScanBarcodeRequest::barcode() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanBarcodeRequest.Barcode)
  return barcode_.GetNoArena();
}
inline void ScanBarcodeRequest::set_barcode(const ::std::string& value) {
  set_has_barcode();
  barcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ScanBarcodeRequest.Barcode)
}
#if LANG_CXX11
inline void ScanBarcodeRequest::set_barcode(::std::string&& value) {
  set_has_barcode();
  barcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ScanBarcodeRequest.Barcode)
}
#endif
inline void ScanBarcodeRequest::set_barcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_barcode();
  barcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ScanBarcodeRequest.Barcode)
}
inline void ScanBarcodeRequest::set_barcode(const char* value, size_t size) {
  set_has_barcode();
  barcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ScanBarcodeRequest.Barcode)
}
inline ::std::string* ScanBarcodeRequest::mutable_barcode() {
  set_has_barcode();
  // @@protoc_insertion_point(field_mutable:micromsg.ScanBarcodeRequest.Barcode)
  return barcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScanBarcodeRequest::release_barcode() {
  // @@protoc_insertion_point(field_release:micromsg.ScanBarcodeRequest.Barcode)
  clear_has_barcode();
  return barcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScanBarcodeRequest::set_allocated_barcode(::std::string* barcode) {
  if (barcode != NULL) {
    set_has_barcode();
  } else {
    clear_has_barcode();
  }
  barcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), barcode);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanBarcodeRequest.Barcode)
}

// optional uint32 Scene = 4;
inline bool ScanBarcodeRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScanBarcodeRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScanBarcodeRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScanBarcodeRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 ScanBarcodeRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanBarcodeRequest.Scene)
  return scene_;
}
inline void ScanBarcodeRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanBarcodeRequest.Scene)
}

// -------------------------------------------------------------------

// ScanBarcodeResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ScanBarcodeResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScanBarcodeResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScanBarcodeResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScanBarcodeResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ScanBarcodeResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanBarcodeResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ScanBarcodeResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanBarcodeResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ScanBarcodeResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ScanBarcodeResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ScanBarcodeResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanBarcodeResponse.BaseResponse)
}

// required uint32 Type = 2;
inline bool ScanBarcodeResponse::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScanBarcodeResponse::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScanBarcodeResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScanBarcodeResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ScanBarcodeResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanBarcodeResponse.Type)
  return type_;
}
inline void ScanBarcodeResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanBarcodeResponse.Type)
}

// optional string DescXML = 3;
inline bool ScanBarcodeResponse::has_descxml() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScanBarcodeResponse::set_has_descxml() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScanBarcodeResponse::clear_has_descxml() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScanBarcodeResponse::clear_descxml() {
  descxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_descxml();
}
inline const ::std::string& ScanBarcodeResponse::descxml() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanBarcodeResponse.DescXML)
  return descxml_.GetNoArena();
}
inline void ScanBarcodeResponse::set_descxml(const ::std::string& value) {
  set_has_descxml();
  descxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ScanBarcodeResponse.DescXML)
}
#if LANG_CXX11
inline void ScanBarcodeResponse::set_descxml(::std::string&& value) {
  set_has_descxml();
  descxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ScanBarcodeResponse.DescXML)
}
#endif
inline void ScanBarcodeResponse::set_descxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_descxml();
  descxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ScanBarcodeResponse.DescXML)
}
inline void ScanBarcodeResponse::set_descxml(const char* value, size_t size) {
  set_has_descxml();
  descxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ScanBarcodeResponse.DescXML)
}
inline ::std::string* ScanBarcodeResponse::mutable_descxml() {
  set_has_descxml();
  // @@protoc_insertion_point(field_mutable:micromsg.ScanBarcodeResponse.DescXML)
  return descxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScanBarcodeResponse::release_descxml() {
  // @@protoc_insertion_point(field_release:micromsg.ScanBarcodeResponse.DescXML)
  clear_has_descxml();
  return descxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScanBarcodeResponse::set_allocated_descxml(::std::string* descxml) {
  if (descxml != NULL) {
    set_has_descxml();
  } else {
    clear_has_descxml();
  }
  descxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanBarcodeResponse.DescXML)
}

// -------------------------------------------------------------------

// ScanImageRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ScanImageRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScanImageRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScanImageRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScanImageRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ScanImageRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ScanImageRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanImageRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ScanImageRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ScanImageRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ScanImageRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanImageRequest.BaseRequest)
}

// required uint32 ClientScanID = 2;
inline bool ScanImageRequest::has_clientscanid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScanImageRequest::set_has_clientscanid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScanImageRequest::clear_has_clientscanid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScanImageRequest::clear_clientscanid() {
  clientscanid_ = 0u;
  clear_has_clientscanid();
}
inline ::google::protobuf::uint32 ScanImageRequest::clientscanid() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageRequest.ClientScanID)
  return clientscanid_;
}
inline void ScanImageRequest::set_clientscanid(::google::protobuf::uint32 value) {
  set_has_clientscanid();
  clientscanid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageRequest.ClientScanID)
}

// required .micromsg.SKBuiltinBuffer_t ImageBuffer = 3;
inline bool ScanImageRequest::has_imagebuffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScanImageRequest::set_has_imagebuffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScanImageRequest::clear_has_imagebuffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScanImageRequest::clear_imagebuffer() {
  if (imagebuffer_ != NULL) imagebuffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_imagebuffer();
}
inline const ::micromsg::SKBuiltinBuffer_t& ScanImageRequest::imagebuffer() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageRequest.ImageBuffer)
  return imagebuffer_ != NULL ? *imagebuffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ScanImageRequest::mutable_imagebuffer() {
  set_has_imagebuffer();
  if (imagebuffer_ == NULL) {
    imagebuffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanImageRequest.ImageBuffer)
  return imagebuffer_;
}
inline ::micromsg::SKBuiltinBuffer_t* ScanImageRequest::release_imagebuffer() {
  // @@protoc_insertion_point(field_release:micromsg.ScanImageRequest.ImageBuffer)
  clear_has_imagebuffer();
  ::micromsg::SKBuiltinBuffer_t* temp = imagebuffer_;
  imagebuffer_ = NULL;
  return temp;
}
inline void ScanImageRequest::set_allocated_imagebuffer(::micromsg::SKBuiltinBuffer_t* imagebuffer) {
  delete imagebuffer_;
  imagebuffer_ = imagebuffer;
  if (imagebuffer) {
    set_has_imagebuffer();
  } else {
    clear_has_imagebuffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanImageRequest.ImageBuffer)
}

// required uint32 TotalLength = 4;
inline bool ScanImageRequest::has_totallength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScanImageRequest::set_has_totallength() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScanImageRequest::clear_has_totallength() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScanImageRequest::clear_totallength() {
  totallength_ = 0u;
  clear_has_totallength();
}
inline ::google::protobuf::uint32 ScanImageRequest::totallength() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageRequest.TotalLength)
  return totallength_;
}
inline void ScanImageRequest::set_totallength(::google::protobuf::uint32 value) {
  set_has_totallength();
  totallength_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageRequest.TotalLength)
}

// required uint32 Offset = 5;
inline bool ScanImageRequest::has_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScanImageRequest::set_has_offset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScanImageRequest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScanImageRequest::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 ScanImageRequest::offset() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageRequest.Offset)
  return offset_;
}
inline void ScanImageRequest::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageRequest.Offset)
}

// required uint32 EndFlag = 6;
inline bool ScanImageRequest::has_endflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ScanImageRequest::set_has_endflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ScanImageRequest::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ScanImageRequest::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 ScanImageRequest::endflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageRequest.EndFlag)
  return endflag_;
}
inline void ScanImageRequest::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageRequest.EndFlag)
}

// required uint32 ImageType = 7;
inline bool ScanImageRequest::has_imagetype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ScanImageRequest::set_has_imagetype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ScanImageRequest::clear_has_imagetype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ScanImageRequest::clear_imagetype() {
  imagetype_ = 0u;
  clear_has_imagetype();
}
inline ::google::protobuf::uint32 ScanImageRequest::imagetype() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageRequest.ImageType)
  return imagetype_;
}
inline void ScanImageRequest::set_imagetype(::google::protobuf::uint32 value) {
  set_has_imagetype();
  imagetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageRequest.ImageType)
}

// optional uint32 OPCode = 8;
inline bool ScanImageRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ScanImageRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ScanImageRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ScanImageRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 ScanImageRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageRequest.OPCode)
  return opcode_;
}
inline void ScanImageRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageRequest.OPCode)
}

// optional uint32 SessionID = 9;
inline bool ScanImageRequest::has_sessionid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ScanImageRequest::set_has_sessionid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ScanImageRequest::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ScanImageRequest::clear_sessionid() {
  sessionid_ = 0u;
  clear_has_sessionid();
}
inline ::google::protobuf::uint32 ScanImageRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageRequest.SessionID)
  return sessionid_;
}
inline void ScanImageRequest::set_sessionid(::google::protobuf::uint32 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageRequest.SessionID)
}

// -------------------------------------------------------------------

// ScanImageResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ScanImageResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScanImageResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScanImageResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScanImageResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ScanImageResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ScanImageResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanImageResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ScanImageResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ScanImageResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ScanImageResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanImageResponse.BaseResponse)
}

// required uint32 ClientScanID = 2;
inline bool ScanImageResponse::has_clientscanid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScanImageResponse::set_has_clientscanid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScanImageResponse::clear_has_clientscanid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScanImageResponse::clear_clientscanid() {
  clientscanid_ = 0u;
  clear_has_clientscanid();
}
inline ::google::protobuf::uint32 ScanImageResponse::clientscanid() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageResponse.ClientScanID)
  return clientscanid_;
}
inline void ScanImageResponse::set_clientscanid(::google::protobuf::uint32 value) {
  set_has_clientscanid();
  clientscanid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageResponse.ClientScanID)
}

// required uint32 Type = 3;
inline bool ScanImageResponse::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScanImageResponse::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScanImageResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScanImageResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ScanImageResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageResponse.Type)
  return type_;
}
inline void ScanImageResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageResponse.Type)
}

// optional string DescriptionXML = 4;
inline bool ScanImageResponse::has_descriptionxml() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScanImageResponse::set_has_descriptionxml() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScanImageResponse::clear_has_descriptionxml() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScanImageResponse::clear_descriptionxml() {
  descriptionxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_descriptionxml();
}
inline const ::std::string& ScanImageResponse::descriptionxml() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageResponse.DescriptionXML)
  return descriptionxml_.GetNoArena();
}
inline void ScanImageResponse::set_descriptionxml(const ::std::string& value) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ScanImageResponse.DescriptionXML)
}
#if LANG_CXX11
inline void ScanImageResponse::set_descriptionxml(::std::string&& value) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ScanImageResponse.DescriptionXML)
}
#endif
inline void ScanImageResponse::set_descriptionxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ScanImageResponse.DescriptionXML)
}
inline void ScanImageResponse::set_descriptionxml(const char* value, size_t size) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ScanImageResponse.DescriptionXML)
}
inline ::std::string* ScanImageResponse::mutable_descriptionxml() {
  set_has_descriptionxml();
  // @@protoc_insertion_point(field_mutable:micromsg.ScanImageResponse.DescriptionXML)
  return descriptionxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScanImageResponse::release_descriptionxml() {
  // @@protoc_insertion_point(field_release:micromsg.ScanImageResponse.DescriptionXML)
  clear_has_descriptionxml();
  return descriptionxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScanImageResponse::set_allocated_descriptionxml(::std::string* descriptionxml) {
  if (descriptionxml != NULL) {
    set_has_descriptionxml();
  } else {
    clear_has_descriptionxml();
  }
  descriptionxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descriptionxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanImageResponse.DescriptionXML)
}

// required uint32 EndFlag = 5;
inline bool ScanImageResponse::has_endflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScanImageResponse::set_has_endflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScanImageResponse::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScanImageResponse::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 ScanImageResponse::endflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageResponse.EndFlag)
  return endflag_;
}
inline void ScanImageResponse::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageResponse.EndFlag)
}

// required uint32 ImageType = 6;
inline bool ScanImageResponse::has_imagetype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ScanImageResponse::set_has_imagetype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ScanImageResponse::clear_has_imagetype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ScanImageResponse::clear_imagetype() {
  imagetype_ = 0u;
  clear_has_imagetype();
}
inline ::google::protobuf::uint32 ScanImageResponse::imagetype() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanImageResponse.ImageType)
  return imagetype_;
}
inline void ScanImageResponse::set_imagetype(::google::protobuf::uint32 value) {
  set_has_imagetype();
  imagetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanImageResponse.ImageType)
}

// -------------------------------------------------------------------

// GetProductInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetProductInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetProductInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetProductInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetProductInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetProductInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetProductInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetProductInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetProductInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductInfoRequest.BaseRequest)
}

// optional string ProductID = 2;
inline bool GetProductInfoRequest::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetProductInfoRequest::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetProductInfoRequest::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetProductInfoRequest::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
inline const ::std::string& GetProductInfoRequest::productid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductInfoRequest.ProductID)
  return productid_.GetNoArena();
}
inline void GetProductInfoRequest::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductInfoRequest.ProductID)
}
#if LANG_CXX11
inline void GetProductInfoRequest::set_productid(::std::string&& value) {
  set_has_productid();
  productid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductInfoRequest.ProductID)
}
#endif
inline void GetProductInfoRequest::set_productid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductInfoRequest.ProductID)
}
inline void GetProductInfoRequest::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductInfoRequest.ProductID)
}
inline ::std::string* GetProductInfoRequest::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductInfoRequest.ProductID)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductInfoRequest::release_productid() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductInfoRequest.ProductID)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductInfoRequest::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductInfoRequest.ProductID)
}

// required uint32 Scene = 3;
inline bool GetProductInfoRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetProductInfoRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetProductInfoRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetProductInfoRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 GetProductInfoRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductInfoRequest.Scene)
  return scene_;
}
inline void GetProductInfoRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetProductInfoRequest.Scene)
}

// optional string QrUrl = 4;
inline bool GetProductInfoRequest::has_qrurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetProductInfoRequest::set_has_qrurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetProductInfoRequest::clear_has_qrurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetProductInfoRequest::clear_qrurl() {
  qrurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qrurl();
}
inline const ::std::string& GetProductInfoRequest::qrurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductInfoRequest.QrUrl)
  return qrurl_.GetNoArena();
}
inline void GetProductInfoRequest::set_qrurl(const ::std::string& value) {
  set_has_qrurl();
  qrurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductInfoRequest.QrUrl)
}
#if LANG_CXX11
inline void GetProductInfoRequest::set_qrurl(::std::string&& value) {
  set_has_qrurl();
  qrurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductInfoRequest.QrUrl)
}
#endif
inline void GetProductInfoRequest::set_qrurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_qrurl();
  qrurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductInfoRequest.QrUrl)
}
inline void GetProductInfoRequest::set_qrurl(const char* value, size_t size) {
  set_has_qrurl();
  qrurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductInfoRequest.QrUrl)
}
inline ::std::string* GetProductInfoRequest::mutable_qrurl() {
  set_has_qrurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductInfoRequest.QrUrl)
  return qrurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductInfoRequest::release_qrurl() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductInfoRequest.QrUrl)
  clear_has_qrurl();
  return qrurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductInfoRequest::set_allocated_qrurl(::std::string* qrurl) {
  if (qrurl != NULL) {
    set_has_qrurl();
  } else {
    clear_has_qrurl();
  }
  qrurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qrurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductInfoRequest.QrUrl)
}

// -------------------------------------------------------------------

// GetProductInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetProductInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetProductInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetProductInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetProductInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetProductInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetProductInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetProductInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetProductInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductInfoResponse.BaseResponse)
}

// required uint32 Type = 2;
inline bool GetProductInfoResponse::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetProductInfoResponse::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetProductInfoResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetProductInfoResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GetProductInfoResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductInfoResponse.Type)
  return type_;
}
inline void GetProductInfoResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetProductInfoResponse.Type)
}

// optional string DescXML = 3;
inline bool GetProductInfoResponse::has_descxml() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetProductInfoResponse::set_has_descxml() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetProductInfoResponse::clear_has_descxml() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetProductInfoResponse::clear_descxml() {
  descxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_descxml();
}
inline const ::std::string& GetProductInfoResponse::descxml() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductInfoResponse.DescXML)
  return descxml_.GetNoArena();
}
inline void GetProductInfoResponse::set_descxml(const ::std::string& value) {
  set_has_descxml();
  descxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductInfoResponse.DescXML)
}
#if LANG_CXX11
inline void GetProductInfoResponse::set_descxml(::std::string&& value) {
  set_has_descxml();
  descxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductInfoResponse.DescXML)
}
#endif
inline void GetProductInfoResponse::set_descxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_descxml();
  descxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductInfoResponse.DescXML)
}
inline void GetProductInfoResponse::set_descxml(const char* value, size_t size) {
  set_has_descxml();
  descxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductInfoResponse.DescXML)
}
inline ::std::string* GetProductInfoResponse::mutable_descxml() {
  set_has_descxml();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductInfoResponse.DescXML)
  return descxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductInfoResponse::release_descxml() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductInfoResponse.DescXML)
  clear_has_descxml();
  return descxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductInfoResponse::set_allocated_descxml(::std::string* descxml) {
  if (descxml != NULL) {
    set_has_descxml();
  } else {
    clear_has_descxml();
  }
  descxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductInfoResponse.DescXML)
}

// optional string ProductID = 4;
inline bool GetProductInfoResponse::has_productid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetProductInfoResponse::set_has_productid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetProductInfoResponse::clear_has_productid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetProductInfoResponse::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
inline const ::std::string& GetProductInfoResponse::productid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductInfoResponse.ProductID)
  return productid_.GetNoArena();
}
inline void GetProductInfoResponse::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductInfoResponse.ProductID)
}
#if LANG_CXX11
inline void GetProductInfoResponse::set_productid(::std::string&& value) {
  set_has_productid();
  productid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductInfoResponse.ProductID)
}
#endif
inline void GetProductInfoResponse::set_productid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductInfoResponse.ProductID)
}
inline void GetProductInfoResponse::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductInfoResponse.ProductID)
}
inline ::std::string* GetProductInfoResponse::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductInfoResponse.ProductID)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductInfoResponse::release_productid() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductInfoResponse.ProductID)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductInfoResponse::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductInfoResponse.ProductID)
}

// -------------------------------------------------------------------

// OCRTranslationRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool OCRTranslationRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OCRTranslationRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OCRTranslationRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OCRTranslationRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& OCRTranslationRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* OCRTranslationRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.OCRTranslationRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* OCRTranslationRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.OCRTranslationRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void OCRTranslationRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.OCRTranslationRequest.BaseRequest)
}

// required uint32 ClientScanID = 2;
inline bool OCRTranslationRequest::has_clientscanid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OCRTranslationRequest::set_has_clientscanid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OCRTranslationRequest::clear_has_clientscanid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OCRTranslationRequest::clear_clientscanid() {
  clientscanid_ = 0u;
  clear_has_clientscanid();
}
inline ::google::protobuf::uint32 OCRTranslationRequest::clientscanid() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationRequest.ClientScanID)
  return clientscanid_;
}
inline void OCRTranslationRequest::set_clientscanid(::google::protobuf::uint32 value) {
  set_has_clientscanid();
  clientscanid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OCRTranslationRequest.ClientScanID)
}

// required .micromsg.SKBuiltinBuffer_t ImageBuffer = 3;
inline bool OCRTranslationRequest::has_imagebuffer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OCRTranslationRequest::set_has_imagebuffer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OCRTranslationRequest::clear_has_imagebuffer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OCRTranslationRequest::clear_imagebuffer() {
  if (imagebuffer_ != NULL) imagebuffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_imagebuffer();
}
inline const ::micromsg::SKBuiltinBuffer_t& OCRTranslationRequest::imagebuffer() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationRequest.ImageBuffer)
  return imagebuffer_ != NULL ? *imagebuffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* OCRTranslationRequest::mutable_imagebuffer() {
  set_has_imagebuffer();
  if (imagebuffer_ == NULL) {
    imagebuffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.OCRTranslationRequest.ImageBuffer)
  return imagebuffer_;
}
inline ::micromsg::SKBuiltinBuffer_t* OCRTranslationRequest::release_imagebuffer() {
  // @@protoc_insertion_point(field_release:micromsg.OCRTranslationRequest.ImageBuffer)
  clear_has_imagebuffer();
  ::micromsg::SKBuiltinBuffer_t* temp = imagebuffer_;
  imagebuffer_ = NULL;
  return temp;
}
inline void OCRTranslationRequest::set_allocated_imagebuffer(::micromsg::SKBuiltinBuffer_t* imagebuffer) {
  delete imagebuffer_;
  imagebuffer_ = imagebuffer;
  if (imagebuffer) {
    set_has_imagebuffer();
  } else {
    clear_has_imagebuffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.OCRTranslationRequest.ImageBuffer)
}

// required uint32 ImageType = 4;
inline bool OCRTranslationRequest::has_imagetype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OCRTranslationRequest::set_has_imagetype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OCRTranslationRequest::clear_has_imagetype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OCRTranslationRequest::clear_imagetype() {
  imagetype_ = 0u;
  clear_has_imagetype();
}
inline ::google::protobuf::uint32 OCRTranslationRequest::imagetype() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationRequest.ImageType)
  return imagetype_;
}
inline void OCRTranslationRequest::set_imagetype(::google::protobuf::uint32 value) {
  set_has_imagetype();
  imagetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OCRTranslationRequest.ImageType)
}

// optional string FromLanguage = 5;
inline bool OCRTranslationRequest::has_fromlanguage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OCRTranslationRequest::set_has_fromlanguage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OCRTranslationRequest::clear_has_fromlanguage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OCRTranslationRequest::clear_fromlanguage() {
  fromlanguage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromlanguage();
}
inline const ::std::string& OCRTranslationRequest::fromlanguage() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationRequest.FromLanguage)
  return fromlanguage_.GetNoArena();
}
inline void OCRTranslationRequest::set_fromlanguage(const ::std::string& value) {
  set_has_fromlanguage();
  fromlanguage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OCRTranslationRequest.FromLanguage)
}
#if LANG_CXX11
inline void OCRTranslationRequest::set_fromlanguage(::std::string&& value) {
  set_has_fromlanguage();
  fromlanguage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OCRTranslationRequest.FromLanguage)
}
#endif
inline void OCRTranslationRequest::set_fromlanguage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromlanguage();
  fromlanguage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OCRTranslationRequest.FromLanguage)
}
inline void OCRTranslationRequest::set_fromlanguage(const char* value, size_t size) {
  set_has_fromlanguage();
  fromlanguage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OCRTranslationRequest.FromLanguage)
}
inline ::std::string* OCRTranslationRequest::mutable_fromlanguage() {
  set_has_fromlanguage();
  // @@protoc_insertion_point(field_mutable:micromsg.OCRTranslationRequest.FromLanguage)
  return fromlanguage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCRTranslationRequest::release_fromlanguage() {
  // @@protoc_insertion_point(field_release:micromsg.OCRTranslationRequest.FromLanguage)
  clear_has_fromlanguage();
  return fromlanguage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCRTranslationRequest::set_allocated_fromlanguage(::std::string* fromlanguage) {
  if (fromlanguage != NULL) {
    set_has_fromlanguage();
  } else {
    clear_has_fromlanguage();
  }
  fromlanguage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromlanguage);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OCRTranslationRequest.FromLanguage)
}

// optional string ToLanguage = 6;
inline bool OCRTranslationRequest::has_tolanguage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OCRTranslationRequest::set_has_tolanguage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OCRTranslationRequest::clear_has_tolanguage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OCRTranslationRequest::clear_tolanguage() {
  tolanguage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tolanguage();
}
inline const ::std::string& OCRTranslationRequest::tolanguage() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationRequest.ToLanguage)
  return tolanguage_.GetNoArena();
}
inline void OCRTranslationRequest::set_tolanguage(const ::std::string& value) {
  set_has_tolanguage();
  tolanguage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OCRTranslationRequest.ToLanguage)
}
#if LANG_CXX11
inline void OCRTranslationRequest::set_tolanguage(::std::string&& value) {
  set_has_tolanguage();
  tolanguage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OCRTranslationRequest.ToLanguage)
}
#endif
inline void OCRTranslationRequest::set_tolanguage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tolanguage();
  tolanguage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OCRTranslationRequest.ToLanguage)
}
inline void OCRTranslationRequest::set_tolanguage(const char* value, size_t size) {
  set_has_tolanguage();
  tolanguage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OCRTranslationRequest.ToLanguage)
}
inline ::std::string* OCRTranslationRequest::mutable_tolanguage() {
  set_has_tolanguage();
  // @@protoc_insertion_point(field_mutable:micromsg.OCRTranslationRequest.ToLanguage)
  return tolanguage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCRTranslationRequest::release_tolanguage() {
  // @@protoc_insertion_point(field_release:micromsg.OCRTranslationRequest.ToLanguage)
  clear_has_tolanguage();
  return tolanguage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCRTranslationRequest::set_allocated_tolanguage(::std::string* tolanguage) {
  if (tolanguage != NULL) {
    set_has_tolanguage();
  } else {
    clear_has_tolanguage();
  }
  tolanguage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tolanguage);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OCRTranslationRequest.ToLanguage)
}

// optional uint32 SessionID = 7;
inline bool OCRTranslationRequest::has_sessionid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OCRTranslationRequest::set_has_sessionid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OCRTranslationRequest::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OCRTranslationRequest::clear_sessionid() {
  sessionid_ = 0u;
  clear_has_sessionid();
}
inline ::google::protobuf::uint32 OCRTranslationRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationRequest.SessionID)
  return sessionid_;
}
inline void OCRTranslationRequest::set_sessionid(::google::protobuf::uint32 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OCRTranslationRequest.SessionID)
}

// -------------------------------------------------------------------

// OCRTranslationResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool OCRTranslationResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OCRTranslationResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OCRTranslationResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OCRTranslationResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& OCRTranslationResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* OCRTranslationResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.OCRTranslationResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* OCRTranslationResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.OCRTranslationResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void OCRTranslationResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.OCRTranslationResponse.BaseResponse)
}

// required uint32 ClientScanID = 2;
inline bool OCRTranslationResponse::has_clientscanid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OCRTranslationResponse::set_has_clientscanid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OCRTranslationResponse::clear_has_clientscanid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OCRTranslationResponse::clear_clientscanid() {
  clientscanid_ = 0u;
  clear_has_clientscanid();
}
inline ::google::protobuf::uint32 OCRTranslationResponse::clientscanid() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationResponse.ClientScanID)
  return clientscanid_;
}
inline void OCRTranslationResponse::set_clientscanid(::google::protobuf::uint32 value) {
  set_has_clientscanid();
  clientscanid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OCRTranslationResponse.ClientScanID)
}

// optional string Source = 3;
inline bool OCRTranslationResponse::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OCRTranslationResponse::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OCRTranslationResponse::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OCRTranslationResponse::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& OCRTranslationResponse::source() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationResponse.Source)
  return source_.GetNoArena();
}
inline void OCRTranslationResponse::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OCRTranslationResponse.Source)
}
#if LANG_CXX11
inline void OCRTranslationResponse::set_source(::std::string&& value) {
  set_has_source();
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OCRTranslationResponse.Source)
}
#endif
inline void OCRTranslationResponse::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OCRTranslationResponse.Source)
}
inline void OCRTranslationResponse::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OCRTranslationResponse.Source)
}
inline ::std::string* OCRTranslationResponse::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:micromsg.OCRTranslationResponse.Source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCRTranslationResponse::release_source() {
  // @@protoc_insertion_point(field_release:micromsg.OCRTranslationResponse.Source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCRTranslationResponse::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OCRTranslationResponse.Source)
}

// optional string Translation = 4;
inline bool OCRTranslationResponse::has_translation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OCRTranslationResponse::set_has_translation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OCRTranslationResponse::clear_has_translation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OCRTranslationResponse::clear_translation() {
  translation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_translation();
}
inline const ::std::string& OCRTranslationResponse::translation() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationResponse.Translation)
  return translation_.GetNoArena();
}
inline void OCRTranslationResponse::set_translation(const ::std::string& value) {
  set_has_translation();
  translation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OCRTranslationResponse.Translation)
}
#if LANG_CXX11
inline void OCRTranslationResponse::set_translation(::std::string&& value) {
  set_has_translation();
  translation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OCRTranslationResponse.Translation)
}
#endif
inline void OCRTranslationResponse::set_translation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_translation();
  translation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OCRTranslationResponse.Translation)
}
inline void OCRTranslationResponse::set_translation(const char* value, size_t size) {
  set_has_translation();
  translation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OCRTranslationResponse.Translation)
}
inline ::std::string* OCRTranslationResponse::mutable_translation() {
  set_has_translation();
  // @@protoc_insertion_point(field_mutable:micromsg.OCRTranslationResponse.Translation)
  return translation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OCRTranslationResponse::release_translation() {
  // @@protoc_insertion_point(field_release:micromsg.OCRTranslationResponse.Translation)
  clear_has_translation();
  return translation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OCRTranslationResponse::set_allocated_translation(::std::string* translation) {
  if (translation != NULL) {
    set_has_translation();
  } else {
    clear_has_translation();
  }
  translation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), translation);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OCRTranslationResponse.Translation)
}

// required uint32 ImageType = 5;
inline bool OCRTranslationResponse::has_imagetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OCRTranslationResponse::set_has_imagetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OCRTranslationResponse::clear_has_imagetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OCRTranslationResponse::clear_imagetype() {
  imagetype_ = 0u;
  clear_has_imagetype();
}
inline ::google::protobuf::uint32 OCRTranslationResponse::imagetype() const {
  // @@protoc_insertion_point(field_get:micromsg.OCRTranslationResponse.ImageType)
  return imagetype_;
}
inline void OCRTranslationResponse::set_imagetype(::google::protobuf::uint32 value) {
  set_has_imagetype();
  imagetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OCRTranslationResponse.ImageType)
}

// -------------------------------------------------------------------

// ShakeTVRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ShakeTVRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeTVRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeTVRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeTVRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ShakeTVRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ShakeTVRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeTVRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ShakeTVRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeTVRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ShakeTVRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeTVRequest.BaseRequest)
}

// required .micromsg.SKBuiltinBuffer_t Data = 2;
inline bool ShakeTVRequest::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeTVRequest::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeTVRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeTVRequest::clear_data() {
  if (data_ != NULL) data_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_data();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeTVRequest::data() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVRequest.Data)
  return data_ != NULL ? *data_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeTVRequest::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeTVRequest.Data)
  return data_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeTVRequest::release_data() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeTVRequest.Data)
  clear_has_data();
  ::micromsg::SKBuiltinBuffer_t* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ShakeTVRequest::set_allocated_data(::micromsg::SKBuiltinBuffer_t* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeTVRequest.Data)
}

// required uint32 DataId = 3;
inline bool ShakeTVRequest::has_dataid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeTVRequest::set_has_dataid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeTVRequest::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeTVRequest::clear_dataid() {
  dataid_ = 0u;
  clear_has_dataid();
}
inline ::google::protobuf::uint32 ShakeTVRequest::dataid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVRequest.DataId)
  return dataid_;
}
inline void ShakeTVRequest::set_dataid(::google::protobuf::uint32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeTVRequest.DataId)
}

// required uint32 EndFlag = 4;
inline bool ShakeTVRequest::has_endflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeTVRequest::set_has_endflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeTVRequest::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeTVRequest::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 ShakeTVRequest::endflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVRequest.EndFlag)
  return endflag_;
}
inline void ShakeTVRequest::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeTVRequest.EndFlag)
}

// required float VoiceLen = 5;
inline bool ShakeTVRequest::has_voicelen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShakeTVRequest::set_has_voicelen() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShakeTVRequest::clear_has_voicelen() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShakeTVRequest::clear_voicelen() {
  voicelen_ = 0;
  clear_has_voicelen();
}
inline float ShakeTVRequest::voicelen() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVRequest.VoiceLen)
  return voicelen_;
}
inline void ShakeTVRequest::set_voicelen(float value) {
  set_has_voicelen();
  voicelen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeTVRequest.VoiceLen)
}

// required uint32 NetType = 6;
inline bool ShakeTVRequest::has_nettype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShakeTVRequest::set_has_nettype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShakeTVRequest::clear_has_nettype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShakeTVRequest::clear_nettype() {
  nettype_ = 0u;
  clear_has_nettype();
}
inline ::google::protobuf::uint32 ShakeTVRequest::nettype() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVRequest.NetType)
  return nettype_;
}
inline void ShakeTVRequest::set_nettype(::google::protobuf::uint32 value) {
  set_has_nettype();
  nettype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeTVRequest.NetType)
}

// required uint32 SdkVersion = 7;
inline bool ShakeTVRequest::has_sdkversion() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShakeTVRequest::set_has_sdkversion() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShakeTVRequest::clear_has_sdkversion() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShakeTVRequest::clear_sdkversion() {
  sdkversion_ = 0u;
  clear_has_sdkversion();
}
inline ::google::protobuf::uint32 ShakeTVRequest::sdkversion() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVRequest.SdkVersion)
  return sdkversion_;
}
inline void ShakeTVRequest::set_sdkversion(::google::protobuf::uint32 value) {
  set_has_sdkversion();
  sdkversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeTVRequest.SdkVersion)
}

// -------------------------------------------------------------------

// ShakeTVResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ShakeTVResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeTVResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeTVResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeTVResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ShakeTVResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ShakeTVResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeTVResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ShakeTVResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeTVResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ShakeTVResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeTVResponse.BaseResponse)
}

// required uint32 EndFlag = 2;
inline bool ShakeTVResponse::has_endflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeTVResponse::set_has_endflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeTVResponse::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeTVResponse::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 ShakeTVResponse::endflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVResponse.EndFlag)
  return endflag_;
}
inline void ShakeTVResponse::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeTVResponse.EndFlag)
}

// required uint32 Type = 3;
inline bool ShakeTVResponse::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeTVResponse::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeTVResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeTVResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ShakeTVResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVResponse.Type)
  return type_;
}
inline void ShakeTVResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeTVResponse.Type)
}

// optional string DescriptionXML = 4;
inline bool ShakeTVResponse::has_descriptionxml() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeTVResponse::set_has_descriptionxml() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeTVResponse::clear_has_descriptionxml() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeTVResponse::clear_descriptionxml() {
  descriptionxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_descriptionxml();
}
inline const ::std::string& ShakeTVResponse::descriptionxml() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeTVResponse.DescriptionXML)
  return descriptionxml_.GetNoArena();
}
inline void ShakeTVResponse::set_descriptionxml(const ::std::string& value) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeTVResponse.DescriptionXML)
}
#if LANG_CXX11
inline void ShakeTVResponse::set_descriptionxml(::std::string&& value) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeTVResponse.DescriptionXML)
}
#endif
inline void ShakeTVResponse::set_descriptionxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeTVResponse.DescriptionXML)
}
inline void ShakeTVResponse::set_descriptionxml(const char* value, size_t size) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeTVResponse.DescriptionXML)
}
inline ::std::string* ShakeTVResponse::mutable_descriptionxml() {
  set_has_descriptionxml();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeTVResponse.DescriptionXML)
  return descriptionxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeTVResponse::release_descriptionxml() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeTVResponse.DescriptionXML)
  clear_has_descriptionxml();
  return descriptionxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeTVResponse::set_allocated_descriptionxml(::std::string* descriptionxml) {
  if (descriptionxml != NULL) {
    set_has_descriptionxml();
  } else {
    clear_has_descriptionxml();
  }
  descriptionxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descriptionxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeTVResponse.DescriptionXML)
}

// -------------------------------------------------------------------

// GetTVInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetTVInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTVInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTVInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTVInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetTVInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetTVInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetTVInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetTVInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetTVInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetTVInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetTVInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetTVInfoRequest.BaseRequest)
}

// optional string TVID = 2;
inline bool GetTVInfoRequest::has_tvid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTVInfoRequest::set_has_tvid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTVInfoRequest::clear_has_tvid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTVInfoRequest::clear_tvid() {
  tvid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tvid();
}
inline const ::std::string& GetTVInfoRequest::tvid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetTVInfoRequest.TVID)
  return tvid_.GetNoArena();
}
inline void GetTVInfoRequest::set_tvid(const ::std::string& value) {
  set_has_tvid();
  tvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetTVInfoRequest.TVID)
}
#if LANG_CXX11
inline void GetTVInfoRequest::set_tvid(::std::string&& value) {
  set_has_tvid();
  tvid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetTVInfoRequest.TVID)
}
#endif
inline void GetTVInfoRequest::set_tvid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tvid();
  tvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetTVInfoRequest.TVID)
}
inline void GetTVInfoRequest::set_tvid(const char* value, size_t size) {
  set_has_tvid();
  tvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetTVInfoRequest.TVID)
}
inline ::std::string* GetTVInfoRequest::mutable_tvid() {
  set_has_tvid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetTVInfoRequest.TVID)
  return tvid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTVInfoRequest::release_tvid() {
  // @@protoc_insertion_point(field_release:micromsg.GetTVInfoRequest.TVID)
  clear_has_tvid();
  return tvid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTVInfoRequest::set_allocated_tvid(::std::string* tvid) {
  if (tvid != NULL) {
    set_has_tvid();
  } else {
    clear_has_tvid();
  }
  tvid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tvid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetTVInfoRequest.TVID)
}

// required uint32 Scene = 3;
inline bool GetTVInfoRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTVInfoRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTVInfoRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTVInfoRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 GetTVInfoRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetTVInfoRequest.Scene)
  return scene_;
}
inline void GetTVInfoRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetTVInfoRequest.Scene)
}

// -------------------------------------------------------------------

// GetTVInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetTVInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTVInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTVInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTVInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetTVInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetTVInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetTVInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetTVInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetTVInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetTVInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetTVInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetTVInfoResponse.BaseResponse)
}

// required uint32 Type = 2;
inline bool GetTVInfoResponse::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetTVInfoResponse::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetTVInfoResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetTVInfoResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GetTVInfoResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.GetTVInfoResponse.Type)
  return type_;
}
inline void GetTVInfoResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetTVInfoResponse.Type)
}

// optional string DescriptionXML = 3;
inline bool GetTVInfoResponse::has_descriptionxml() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTVInfoResponse::set_has_descriptionxml() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTVInfoResponse::clear_has_descriptionxml() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTVInfoResponse::clear_descriptionxml() {
  descriptionxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_descriptionxml();
}
inline const ::std::string& GetTVInfoResponse::descriptionxml() const {
  // @@protoc_insertion_point(field_get:micromsg.GetTVInfoResponse.DescriptionXML)
  return descriptionxml_.GetNoArena();
}
inline void GetTVInfoResponse::set_descriptionxml(const ::std::string& value) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetTVInfoResponse.DescriptionXML)
}
#if LANG_CXX11
inline void GetTVInfoResponse::set_descriptionxml(::std::string&& value) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetTVInfoResponse.DescriptionXML)
}
#endif
inline void GetTVInfoResponse::set_descriptionxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetTVInfoResponse.DescriptionXML)
}
inline void GetTVInfoResponse::set_descriptionxml(const char* value, size_t size) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetTVInfoResponse.DescriptionXML)
}
inline ::std::string* GetTVInfoResponse::mutable_descriptionxml() {
  set_has_descriptionxml();
  // @@protoc_insertion_point(field_mutable:micromsg.GetTVInfoResponse.DescriptionXML)
  return descriptionxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTVInfoResponse::release_descriptionxml() {
  // @@protoc_insertion_point(field_release:micromsg.GetTVInfoResponse.DescriptionXML)
  clear_has_descriptionxml();
  return descriptionxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTVInfoResponse::set_allocated_descriptionxml(::std::string* descriptionxml) {
  if (descriptionxml != NULL) {
    set_has_descriptionxml();
  } else {
    clear_has_descriptionxml();
  }
  descriptionxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descriptionxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetTVInfoResponse.DescriptionXML)
}

// optional string TVID = 4;
inline bool GetTVInfoResponse::has_tvid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTVInfoResponse::set_has_tvid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTVInfoResponse::clear_has_tvid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTVInfoResponse::clear_tvid() {
  tvid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tvid();
}
inline const ::std::string& GetTVInfoResponse::tvid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetTVInfoResponse.TVID)
  return tvid_.GetNoArena();
}
inline void GetTVInfoResponse::set_tvid(const ::std::string& value) {
  set_has_tvid();
  tvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetTVInfoResponse.TVID)
}
#if LANG_CXX11
inline void GetTVInfoResponse::set_tvid(::std::string&& value) {
  set_has_tvid();
  tvid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetTVInfoResponse.TVID)
}
#endif
inline void GetTVInfoResponse::set_tvid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tvid();
  tvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetTVInfoResponse.TVID)
}
inline void GetTVInfoResponse::set_tvid(const char* value, size_t size) {
  set_has_tvid();
  tvid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetTVInfoResponse.TVID)
}
inline ::std::string* GetTVInfoResponse::mutable_tvid() {
  set_has_tvid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetTVInfoResponse.TVID)
  return tvid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTVInfoResponse::release_tvid() {
  // @@protoc_insertion_point(field_release:micromsg.GetTVInfoResponse.TVID)
  clear_has_tvid();
  return tvid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTVInfoResponse::set_allocated_tvid(::std::string* tvid) {
  if (tvid != NULL) {
    set_has_tvid();
  } else {
    clear_has_tvid();
  }
  tvid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tvid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetTVInfoResponse.TVID)
}

// -------------------------------------------------------------------

// ShakeMusicRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ShakeMusicRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeMusicRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeMusicRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeMusicRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ShakeMusicRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ShakeMusicRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ShakeMusicRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ShakeMusicRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicRequest.BaseRequest)
}

// required .micromsg.SKBuiltinBuffer_t Data = 2;
inline bool ShakeMusicRequest::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeMusicRequest::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeMusicRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeMusicRequest::clear_data() {
  if (data_ != NULL) data_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_data();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeMusicRequest::data() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicRequest.Data)
  return data_ != NULL ? *data_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicRequest::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicRequest.Data)
  return data_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicRequest::release_data() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicRequest.Data)
  clear_has_data();
  ::micromsg::SKBuiltinBuffer_t* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ShakeMusicRequest::set_allocated_data(::micromsg::SKBuiltinBuffer_t* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicRequest.Data)
}

// required uint32 DataId = 3;
inline bool ShakeMusicRequest::has_dataid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeMusicRequest::set_has_dataid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeMusicRequest::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeMusicRequest::clear_dataid() {
  dataid_ = 0u;
  clear_has_dataid();
}
inline ::google::protobuf::uint32 ShakeMusicRequest::dataid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicRequest.DataId)
  return dataid_;
}
inline void ShakeMusicRequest::set_dataid(::google::protobuf::uint32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicRequest.DataId)
}

// required uint32 EndFlag = 4;
inline bool ShakeMusicRequest::has_endflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeMusicRequest::set_has_endflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeMusicRequest::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeMusicRequest::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 ShakeMusicRequest::endflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicRequest.EndFlag)
  return endflag_;
}
inline void ShakeMusicRequest::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicRequest.EndFlag)
}

// required float VoiceLen = 5;
inline bool ShakeMusicRequest::has_voicelen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShakeMusicRequest::set_has_voicelen() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShakeMusicRequest::clear_has_voicelen() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShakeMusicRequest::clear_voicelen() {
  voicelen_ = 0;
  clear_has_voicelen();
}
inline float ShakeMusicRequest::voicelen() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicRequest.VoiceLen)
  return voicelen_;
}
inline void ShakeMusicRequest::set_voicelen(float value) {
  set_has_voicelen();
  voicelen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicRequest.VoiceLen)
}

// required uint32 NetType = 6;
inline bool ShakeMusicRequest::has_nettype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShakeMusicRequest::set_has_nettype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShakeMusicRequest::clear_has_nettype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShakeMusicRequest::clear_nettype() {
  nettype_ = 0u;
  clear_has_nettype();
}
inline ::google::protobuf::uint32 ShakeMusicRequest::nettype() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicRequest.NetType)
  return nettype_;
}
inline void ShakeMusicRequest::set_nettype(::google::protobuf::uint32 value) {
  set_has_nettype();
  nettype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicRequest.NetType)
}

// required uint32 SdkVersion = 7;
inline bool ShakeMusicRequest::has_sdkversion() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShakeMusicRequest::set_has_sdkversion() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShakeMusicRequest::clear_has_sdkversion() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShakeMusicRequest::clear_sdkversion() {
  sdkversion_ = 0u;
  clear_has_sdkversion();
}
inline ::google::protobuf::uint32 ShakeMusicRequest::sdkversion() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicRequest.SdkVersion)
  return sdkversion_;
}
inline void ShakeMusicRequest::set_sdkversion(::google::protobuf::uint32 value) {
  set_has_sdkversion();
  sdkversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicRequest.SdkVersion)
}

// -------------------------------------------------------------------

// ShakeMusicResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ShakeMusicResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeMusicResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeMusicResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeMusicResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ShakeMusicResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ShakeMusicResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ShakeMusicResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ShakeMusicResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicResponse.BaseResponse)
}

// required uint32 EndFlag = 2;
inline bool ShakeMusicResponse::has_endflag() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ShakeMusicResponse::set_has_endflag() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ShakeMusicResponse::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ShakeMusicResponse::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 ShakeMusicResponse::endflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.EndFlag)
  return endflag_;
}
inline void ShakeMusicResponse::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicResponse.EndFlag)
}

// required uint32 MusicId = 3;
inline bool ShakeMusicResponse::has_musicid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ShakeMusicResponse::set_has_musicid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ShakeMusicResponse::clear_has_musicid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ShakeMusicResponse::clear_musicid() {
  musicid_ = 0u;
  clear_has_musicid();
}
inline ::google::protobuf::uint32 ShakeMusicResponse::musicid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.MusicId)
  return musicid_;
}
inline void ShakeMusicResponse::set_musicid(::google::protobuf::uint32 value) {
  set_has_musicid();
  musicid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicResponse.MusicId)
}

// required float Offset = 4;
inline bool ShakeMusicResponse::has_offset() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ShakeMusicResponse::set_has_offset() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ShakeMusicResponse::clear_has_offset() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ShakeMusicResponse::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline float ShakeMusicResponse::offset() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.Offset)
  return offset_;
}
inline void ShakeMusicResponse::set_offset(float value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicResponse.Offset)
}

// required .micromsg.SKBuiltinBuffer_t SongName = 5;
inline bool ShakeMusicResponse::has_songname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeMusicResponse::set_has_songname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeMusicResponse::clear_has_songname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeMusicResponse::clear_songname() {
  if (songname_ != NULL) songname_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_songname();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeMusicResponse::songname() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.SongName)
  return songname_ != NULL ? *songname_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::mutable_songname() {
  set_has_songname();
  if (songname_ == NULL) {
    songname_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicResponse.SongName)
  return songname_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::release_songname() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicResponse.SongName)
  clear_has_songname();
  ::micromsg::SKBuiltinBuffer_t* temp = songname_;
  songname_ = NULL;
  return temp;
}
inline void ShakeMusicResponse::set_allocated_songname(::micromsg::SKBuiltinBuffer_t* songname) {
  delete songname_;
  songname_ = songname;
  if (songname) {
    set_has_songname();
  } else {
    clear_has_songname();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicResponse.SongName)
}

// required .micromsg.SKBuiltinBuffer_t SongSinger = 6;
inline bool ShakeMusicResponse::has_songsinger() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeMusicResponse::set_has_songsinger() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeMusicResponse::clear_has_songsinger() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeMusicResponse::clear_songsinger() {
  if (songsinger_ != NULL) songsinger_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_songsinger();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeMusicResponse::songsinger() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.SongSinger)
  return songsinger_ != NULL ? *songsinger_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::mutable_songsinger() {
  set_has_songsinger();
  if (songsinger_ == NULL) {
    songsinger_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicResponse.SongSinger)
  return songsinger_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::release_songsinger() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicResponse.SongSinger)
  clear_has_songsinger();
  ::micromsg::SKBuiltinBuffer_t* temp = songsinger_;
  songsinger_ = NULL;
  return temp;
}
inline void ShakeMusicResponse::set_allocated_songsinger(::micromsg::SKBuiltinBuffer_t* songsinger) {
  delete songsinger_;
  songsinger_ = songsinger;
  if (songsinger) {
    set_has_songsinger();
  } else {
    clear_has_songsinger();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicResponse.SongSinger)
}

// required .micromsg.SKBuiltinBuffer_t SongAlbum = 7;
inline bool ShakeMusicResponse::has_songalbum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShakeMusicResponse::set_has_songalbum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShakeMusicResponse::clear_has_songalbum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShakeMusicResponse::clear_songalbum() {
  if (songalbum_ != NULL) songalbum_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_songalbum();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeMusicResponse::songalbum() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.SongAlbum)
  return songalbum_ != NULL ? *songalbum_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::mutable_songalbum() {
  set_has_songalbum();
  if (songalbum_ == NULL) {
    songalbum_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicResponse.SongAlbum)
  return songalbum_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::release_songalbum() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicResponse.SongAlbum)
  clear_has_songalbum();
  ::micromsg::SKBuiltinBuffer_t* temp = songalbum_;
  songalbum_ = NULL;
  return temp;
}
inline void ShakeMusicResponse::set_allocated_songalbum(::micromsg::SKBuiltinBuffer_t* songalbum) {
  delete songalbum_;
  songalbum_ = songalbum;
  if (songalbum) {
    set_has_songalbum();
  } else {
    clear_has_songalbum();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicResponse.SongAlbum)
}

// required .micromsg.SKBuiltinBuffer_t SongAlbumUrl = 8;
inline bool ShakeMusicResponse::has_songalbumurl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShakeMusicResponse::set_has_songalbumurl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShakeMusicResponse::clear_has_songalbumurl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShakeMusicResponse::clear_songalbumurl() {
  if (songalbumurl_ != NULL) songalbumurl_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_songalbumurl();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeMusicResponse::songalbumurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.SongAlbumUrl)
  return songalbumurl_ != NULL ? *songalbumurl_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::mutable_songalbumurl() {
  set_has_songalbumurl();
  if (songalbumurl_ == NULL) {
    songalbumurl_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicResponse.SongAlbumUrl)
  return songalbumurl_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::release_songalbumurl() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicResponse.SongAlbumUrl)
  clear_has_songalbumurl();
  ::micromsg::SKBuiltinBuffer_t* temp = songalbumurl_;
  songalbumurl_ = NULL;
  return temp;
}
inline void ShakeMusicResponse::set_allocated_songalbumurl(::micromsg::SKBuiltinBuffer_t* songalbumurl) {
  delete songalbumurl_;
  songalbumurl_ = songalbumurl;
  if (songalbumurl) {
    set_has_songalbumurl();
  } else {
    clear_has_songalbumurl();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicResponse.SongAlbumUrl)
}

// required .micromsg.SKBuiltinBuffer_t SongWifiUrl = 9;
inline bool ShakeMusicResponse::has_songwifiurl() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShakeMusicResponse::set_has_songwifiurl() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShakeMusicResponse::clear_has_songwifiurl() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShakeMusicResponse::clear_songwifiurl() {
  if (songwifiurl_ != NULL) songwifiurl_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_songwifiurl();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeMusicResponse::songwifiurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.SongWifiUrl)
  return songwifiurl_ != NULL ? *songwifiurl_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::mutable_songwifiurl() {
  set_has_songwifiurl();
  if (songwifiurl_ == NULL) {
    songwifiurl_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicResponse.SongWifiUrl)
  return songwifiurl_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::release_songwifiurl() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicResponse.SongWifiUrl)
  clear_has_songwifiurl();
  ::micromsg::SKBuiltinBuffer_t* temp = songwifiurl_;
  songwifiurl_ = NULL;
  return temp;
}
inline void ShakeMusicResponse::set_allocated_songwifiurl(::micromsg::SKBuiltinBuffer_t* songwifiurl) {
  delete songwifiurl_;
  songwifiurl_ = songwifiurl;
  if (songwifiurl) {
    set_has_songwifiurl();
  } else {
    clear_has_songwifiurl();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicResponse.SongWifiUrl)
}

// required .micromsg.SKBuiltinBuffer_t SongWapLinkUrl = 10;
inline bool ShakeMusicResponse::has_songwaplinkurl() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShakeMusicResponse::set_has_songwaplinkurl() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShakeMusicResponse::clear_has_songwaplinkurl() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShakeMusicResponse::clear_songwaplinkurl() {
  if (songwaplinkurl_ != NULL) songwaplinkurl_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_songwaplinkurl();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeMusicResponse::songwaplinkurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.SongWapLinkUrl)
  return songwaplinkurl_ != NULL ? *songwaplinkurl_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::mutable_songwaplinkurl() {
  set_has_songwaplinkurl();
  if (songwaplinkurl_ == NULL) {
    songwaplinkurl_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicResponse.SongWapLinkUrl)
  return songwaplinkurl_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::release_songwaplinkurl() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicResponse.SongWapLinkUrl)
  clear_has_songwaplinkurl();
  ::micromsg::SKBuiltinBuffer_t* temp = songwaplinkurl_;
  songwaplinkurl_ = NULL;
  return temp;
}
inline void ShakeMusicResponse::set_allocated_songwaplinkurl(::micromsg::SKBuiltinBuffer_t* songwaplinkurl) {
  delete songwaplinkurl_;
  songwaplinkurl_ = songwaplinkurl;
  if (songwaplinkurl) {
    set_has_songwaplinkurl();
  } else {
    clear_has_songwaplinkurl();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicResponse.SongWapLinkUrl)
}

// required .micromsg.SKBuiltinBuffer_t SongWebUrl = 11;
inline bool ShakeMusicResponse::has_songweburl() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ShakeMusicResponse::set_has_songweburl() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ShakeMusicResponse::clear_has_songweburl() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ShakeMusicResponse::clear_songweburl() {
  if (songweburl_ != NULL) songweburl_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_songweburl();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeMusicResponse::songweburl() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.SongWebUrl)
  return songweburl_ != NULL ? *songweburl_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::mutable_songweburl() {
  set_has_songweburl();
  if (songweburl_ == NULL) {
    songweburl_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicResponse.SongWebUrl)
  return songweburl_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::release_songweburl() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicResponse.SongWebUrl)
  clear_has_songweburl();
  ::micromsg::SKBuiltinBuffer_t* temp = songweburl_;
  songweburl_ = NULL;
  return temp;
}
inline void ShakeMusicResponse::set_allocated_songweburl(::micromsg::SKBuiltinBuffer_t* songweburl) {
  delete songweburl_;
  songweburl_ = songweburl;
  if (songweburl) {
    set_has_songweburl();
  } else {
    clear_has_songweburl();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicResponse.SongWebUrl)
}

// required .micromsg.SKBuiltinBuffer_t SongLyric = 12;
inline bool ShakeMusicResponse::has_songlyric() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ShakeMusicResponse::set_has_songlyric() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ShakeMusicResponse::clear_has_songlyric() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ShakeMusicResponse::clear_songlyric() {
  if (songlyric_ != NULL) songlyric_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_songlyric();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeMusicResponse::songlyric() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.SongLyric)
  return songlyric_ != NULL ? *songlyric_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::mutable_songlyric() {
  set_has_songlyric();
  if (songlyric_ == NULL) {
    songlyric_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicResponse.SongLyric)
  return songlyric_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeMusicResponse::release_songlyric() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicResponse.SongLyric)
  clear_has_songlyric();
  ::micromsg::SKBuiltinBuffer_t* temp = songlyric_;
  songlyric_ = NULL;
  return temp;
}
inline void ShakeMusicResponse::set_allocated_songlyric(::micromsg::SKBuiltinBuffer_t* songlyric) {
  delete songlyric_;
  songlyric_ = songlyric;
  if (songlyric) {
    set_has_songlyric();
  } else {
    clear_has_songlyric();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicResponse.SongLyric)
}

// optional uint32 ResultType = 13;
inline bool ShakeMusicResponse::has_resulttype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ShakeMusicResponse::set_has_resulttype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ShakeMusicResponse::clear_has_resulttype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ShakeMusicResponse::clear_resulttype() {
  resulttype_ = 0u;
  clear_has_resulttype();
}
inline ::google::protobuf::uint32 ShakeMusicResponse::resulttype() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.ResultType)
  return resulttype_;
}
inline void ShakeMusicResponse::set_resulttype(::google::protobuf::uint32 value) {
  set_has_resulttype();
  resulttype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicResponse.ResultType)
}

// optional uint32 TVType = 14;
inline bool ShakeMusicResponse::has_tvtype() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ShakeMusicResponse::set_has_tvtype() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ShakeMusicResponse::clear_has_tvtype() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ShakeMusicResponse::clear_tvtype() {
  tvtype_ = 0u;
  clear_has_tvtype();
}
inline ::google::protobuf::uint32 ShakeMusicResponse::tvtype() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.TVType)
  return tvtype_;
}
inline void ShakeMusicResponse::set_tvtype(::google::protobuf::uint32 value) {
  set_has_tvtype();
  tvtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicResponse.TVType)
}

// optional string TVDescriptionXML = 15;
inline bool ShakeMusicResponse::has_tvdescriptionxml() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeMusicResponse::set_has_tvdescriptionxml() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeMusicResponse::clear_has_tvdescriptionxml() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeMusicResponse::clear_tvdescriptionxml() {
  tvdescriptionxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tvdescriptionxml();
}
inline const ::std::string& ShakeMusicResponse::tvdescriptionxml() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMusicResponse.TVDescriptionXML)
  return tvdescriptionxml_.GetNoArena();
}
inline void ShakeMusicResponse::set_tvdescriptionxml(const ::std::string& value) {
  set_has_tvdescriptionxml();
  tvdescriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeMusicResponse.TVDescriptionXML)
}
#if LANG_CXX11
inline void ShakeMusicResponse::set_tvdescriptionxml(::std::string&& value) {
  set_has_tvdescriptionxml();
  tvdescriptionxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeMusicResponse.TVDescriptionXML)
}
#endif
inline void ShakeMusicResponse::set_tvdescriptionxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tvdescriptionxml();
  tvdescriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeMusicResponse.TVDescriptionXML)
}
inline void ShakeMusicResponse::set_tvdescriptionxml(const char* value, size_t size) {
  set_has_tvdescriptionxml();
  tvdescriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeMusicResponse.TVDescriptionXML)
}
inline ::std::string* ShakeMusicResponse::mutable_tvdescriptionxml() {
  set_has_tvdescriptionxml();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMusicResponse.TVDescriptionXML)
  return tvdescriptionxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeMusicResponse::release_tvdescriptionxml() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMusicResponse.TVDescriptionXML)
  clear_has_tvdescriptionxml();
  return tvdescriptionxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeMusicResponse::set_allocated_tvdescriptionxml(::std::string* tvdescriptionxml) {
  if (tvdescriptionxml != NULL) {
    set_has_tvdescriptionxml();
  } else {
    clear_has_tvdescriptionxml();
  }
  tvdescriptionxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tvdescriptionxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMusicResponse.TVDescriptionXML)
}

// -------------------------------------------------------------------

// GetQQMusicLyricRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetQQMusicLyricRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetQQMusicLyricRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetQQMusicLyricRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetQQMusicLyricRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetQQMusicLyricRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQQMusicLyricRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetQQMusicLyricRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetQQMusicLyricRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetQQMusicLyricRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetQQMusicLyricRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetQQMusicLyricRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetQQMusicLyricRequest.BaseRequest)
}

// required uint32 SongId = 2;
inline bool GetQQMusicLyricRequest::has_songid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetQQMusicLyricRequest::set_has_songid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetQQMusicLyricRequest::clear_has_songid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetQQMusicLyricRequest::clear_songid() {
  songid_ = 0u;
  clear_has_songid();
}
inline ::google::protobuf::uint32 GetQQMusicLyricRequest::songid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQQMusicLyricRequest.SongId)
  return songid_;
}
inline void GetQQMusicLyricRequest::set_songid(::google::protobuf::uint32 value) {
  set_has_songid();
  songid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetQQMusicLyricRequest.SongId)
}

// required .micromsg.SKBuiltinBuffer_t Url = 3;
inline bool GetQQMusicLyricRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetQQMusicLyricRequest::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetQQMusicLyricRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetQQMusicLyricRequest::clear_url() {
  if (url_ != NULL) url_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_url();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetQQMusicLyricRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQQMusicLyricRequest.Url)
  return url_ != NULL ? *url_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetQQMusicLyricRequest::mutable_url() {
  set_has_url();
  if (url_ == NULL) {
    url_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetQQMusicLyricRequest.Url)
  return url_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetQQMusicLyricRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.GetQQMusicLyricRequest.Url)
  clear_has_url();
  ::micromsg::SKBuiltinBuffer_t* temp = url_;
  url_ = NULL;
  return temp;
}
inline void GetQQMusicLyricRequest::set_allocated_url(::micromsg::SKBuiltinBuffer_t* url) {
  delete url_;
  url_ = url;
  if (url) {
    set_has_url();
  } else {
    clear_has_url();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetQQMusicLyricRequest.Url)
}

// -------------------------------------------------------------------

// GetQQMusicLyricResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetQQMusicLyricResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetQQMusicLyricResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetQQMusicLyricResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetQQMusicLyricResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetQQMusicLyricResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQQMusicLyricResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetQQMusicLyricResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetQQMusicLyricResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetQQMusicLyricResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetQQMusicLyricResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetQQMusicLyricResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetQQMusicLyricResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t SongLyric = 2;
inline bool GetQQMusicLyricResponse::has_songlyric() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetQQMusicLyricResponse::set_has_songlyric() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetQQMusicLyricResponse::clear_has_songlyric() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetQQMusicLyricResponse::clear_songlyric() {
  if (songlyric_ != NULL) songlyric_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_songlyric();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetQQMusicLyricResponse::songlyric() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQQMusicLyricResponse.SongLyric)
  return songlyric_ != NULL ? *songlyric_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetQQMusicLyricResponse::mutable_songlyric() {
  set_has_songlyric();
  if (songlyric_ == NULL) {
    songlyric_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetQQMusicLyricResponse.SongLyric)
  return songlyric_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetQQMusicLyricResponse::release_songlyric() {
  // @@protoc_insertion_point(field_release:micromsg.GetQQMusicLyricResponse.SongLyric)
  clear_has_songlyric();
  ::micromsg::SKBuiltinBuffer_t* temp = songlyric_;
  songlyric_ = NULL;
  return temp;
}
inline void GetQQMusicLyricResponse::set_allocated_songlyric(::micromsg::SKBuiltinBuffer_t* songlyric) {
  delete songlyric_;
  songlyric_ = songlyric;
  if (songlyric) {
    set_has_songlyric();
  } else {
    clear_has_songlyric();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetQQMusicLyricResponse.SongLyric)
}

// -------------------------------------------------------------------

// UploadInputVoiceRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool UploadInputVoiceRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UploadInputVoiceRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UploadInputVoiceRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UploadInputVoiceRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& UploadInputVoiceRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* UploadInputVoiceRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.UploadInputVoiceRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* UploadInputVoiceRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.UploadInputVoiceRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void UploadInputVoiceRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.UploadInputVoiceRequest.BaseRequest)
}

// optional string UserName = 2;
inline bool UploadInputVoiceRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UploadInputVoiceRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UploadInputVoiceRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UploadInputVoiceRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& UploadInputVoiceRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceRequest.UserName)
  return username_.GetNoArena();
}
inline void UploadInputVoiceRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UploadInputVoiceRequest.UserName)
}
#if LANG_CXX11
inline void UploadInputVoiceRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UploadInputVoiceRequest.UserName)
}
#endif
inline void UploadInputVoiceRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UploadInputVoiceRequest.UserName)
}
inline void UploadInputVoiceRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UploadInputVoiceRequest.UserName)
}
inline ::std::string* UploadInputVoiceRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.UploadInputVoiceRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadInputVoiceRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.UploadInputVoiceRequest.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadInputVoiceRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UploadInputVoiceRequest.UserName)
}

// required .micromsg.SKBuiltinBuffer_t Data = 3;
inline bool UploadInputVoiceRequest::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UploadInputVoiceRequest::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UploadInputVoiceRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UploadInputVoiceRequest::clear_data() {
  if (data_ != NULL) data_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_data();
}
inline const ::micromsg::SKBuiltinBuffer_t& UploadInputVoiceRequest::data() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceRequest.Data)
  return data_ != NULL ? *data_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* UploadInputVoiceRequest::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.UploadInputVoiceRequest.Data)
  return data_;
}
inline ::micromsg::SKBuiltinBuffer_t* UploadInputVoiceRequest::release_data() {
  // @@protoc_insertion_point(field_release:micromsg.UploadInputVoiceRequest.Data)
  clear_has_data();
  ::micromsg::SKBuiltinBuffer_t* temp = data_;
  data_ = NULL;
  return temp;
}
inline void UploadInputVoiceRequest::set_allocated_data(::micromsg::SKBuiltinBuffer_t* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.UploadInputVoiceRequest.Data)
}

// required uint32 Offset = 4;
inline bool UploadInputVoiceRequest::has_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UploadInputVoiceRequest::set_has_offset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UploadInputVoiceRequest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UploadInputVoiceRequest::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 UploadInputVoiceRequest::offset() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceRequest.Offset)
  return offset_;
}
inline void UploadInputVoiceRequest::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UploadInputVoiceRequest.Offset)
}

// optional string ClientVoiceId = 5;
inline bool UploadInputVoiceRequest::has_clientvoiceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UploadInputVoiceRequest::set_has_clientvoiceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UploadInputVoiceRequest::clear_has_clientvoiceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UploadInputVoiceRequest::clear_clientvoiceid() {
  clientvoiceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientvoiceid();
}
inline const ::std::string& UploadInputVoiceRequest::clientvoiceid() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceRequest.ClientVoiceId)
  return clientvoiceid_.GetNoArena();
}
inline void UploadInputVoiceRequest::set_clientvoiceid(const ::std::string& value) {
  set_has_clientvoiceid();
  clientvoiceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UploadInputVoiceRequest.ClientVoiceId)
}
#if LANG_CXX11
inline void UploadInputVoiceRequest::set_clientvoiceid(::std::string&& value) {
  set_has_clientvoiceid();
  clientvoiceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UploadInputVoiceRequest.ClientVoiceId)
}
#endif
inline void UploadInputVoiceRequest::set_clientvoiceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientvoiceid();
  clientvoiceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UploadInputVoiceRequest.ClientVoiceId)
}
inline void UploadInputVoiceRequest::set_clientvoiceid(const char* value, size_t size) {
  set_has_clientvoiceid();
  clientvoiceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UploadInputVoiceRequest.ClientVoiceId)
}
inline ::std::string* UploadInputVoiceRequest::mutable_clientvoiceid() {
  set_has_clientvoiceid();
  // @@protoc_insertion_point(field_mutable:micromsg.UploadInputVoiceRequest.ClientVoiceId)
  return clientvoiceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadInputVoiceRequest::release_clientvoiceid() {
  // @@protoc_insertion_point(field_release:micromsg.UploadInputVoiceRequest.ClientVoiceId)
  clear_has_clientvoiceid();
  return clientvoiceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadInputVoiceRequest::set_allocated_clientvoiceid(::std::string* clientvoiceid) {
  if (clientvoiceid != NULL) {
    set_has_clientvoiceid();
  } else {
    clear_has_clientvoiceid();
  }
  clientvoiceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientvoiceid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UploadInputVoiceRequest.ClientVoiceId)
}

// required uint32 EndFlag = 6;
inline bool UploadInputVoiceRequest::has_endflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UploadInputVoiceRequest::set_has_endflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UploadInputVoiceRequest::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UploadInputVoiceRequest::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 UploadInputVoiceRequest::endflag() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceRequest.EndFlag)
  return endflag_;
}
inline void UploadInputVoiceRequest::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UploadInputVoiceRequest.EndFlag)
}

// required uint32 SamplePerSec = 7;
inline bool UploadInputVoiceRequest::has_samplepersec() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UploadInputVoiceRequest::set_has_samplepersec() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UploadInputVoiceRequest::clear_has_samplepersec() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UploadInputVoiceRequest::clear_samplepersec() {
  samplepersec_ = 0u;
  clear_has_samplepersec();
}
inline ::google::protobuf::uint32 UploadInputVoiceRequest::samplepersec() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceRequest.SamplePerSec)
  return samplepersec_;
}
inline void UploadInputVoiceRequest::set_samplepersec(::google::protobuf::uint32 value) {
  set_has_samplepersec();
  samplepersec_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UploadInputVoiceRequest.SamplePerSec)
}

// required uint32 BitsPerSample = 8;
inline bool UploadInputVoiceRequest::has_bitspersample() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UploadInputVoiceRequest::set_has_bitspersample() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UploadInputVoiceRequest::clear_has_bitspersample() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UploadInputVoiceRequest::clear_bitspersample() {
  bitspersample_ = 0u;
  clear_has_bitspersample();
}
inline ::google::protobuf::uint32 UploadInputVoiceRequest::bitspersample() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceRequest.BitsPerSample)
  return bitspersample_;
}
inline void UploadInputVoiceRequest::set_bitspersample(::google::protobuf::uint32 value) {
  set_has_bitspersample();
  bitspersample_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UploadInputVoiceRequest.BitsPerSample)
}

// required uint32 VoiceEncodeType = 9;
inline bool UploadInputVoiceRequest::has_voiceencodetype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UploadInputVoiceRequest::set_has_voiceencodetype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UploadInputVoiceRequest::clear_has_voiceencodetype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UploadInputVoiceRequest::clear_voiceencodetype() {
  voiceencodetype_ = 0u;
  clear_has_voiceencodetype();
}
inline ::google::protobuf::uint32 UploadInputVoiceRequest::voiceencodetype() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceRequest.VoiceEncodeType)
  return voiceencodetype_;
}
inline void UploadInputVoiceRequest::set_voiceencodetype(::google::protobuf::uint32 value) {
  set_has_voiceencodetype();
  voiceencodetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UploadInputVoiceRequest.VoiceEncodeType)
}

// required uint32 FileType = 10;
inline bool UploadInputVoiceRequest::has_filetype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UploadInputVoiceRequest::set_has_filetype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UploadInputVoiceRequest::clear_has_filetype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UploadInputVoiceRequest::clear_filetype() {
  filetype_ = 0u;
  clear_has_filetype();
}
inline ::google::protobuf::uint32 UploadInputVoiceRequest::filetype() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceRequest.FileType)
  return filetype_;
}
inline void UploadInputVoiceRequest::set_filetype(::google::protobuf::uint32 value) {
  set_has_filetype();
  filetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UploadInputVoiceRequest.FileType)
}

// -------------------------------------------------------------------

// UploadInputVoiceResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool UploadInputVoiceResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UploadInputVoiceResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UploadInputVoiceResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UploadInputVoiceResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& UploadInputVoiceResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* UploadInputVoiceResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.UploadInputVoiceResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* UploadInputVoiceResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.UploadInputVoiceResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void UploadInputVoiceResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.UploadInputVoiceResponse.BaseResponse)
}

// required uint32 EndFlag = 2;
inline bool UploadInputVoiceResponse::has_endflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UploadInputVoiceResponse::set_has_endflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UploadInputVoiceResponse::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UploadInputVoiceResponse::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 UploadInputVoiceResponse::endflag() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceResponse.EndFlag)
  return endflag_;
}
inline void UploadInputVoiceResponse::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UploadInputVoiceResponse.EndFlag)
}

// required .micromsg.SKBuiltinBuffer_t Text = 3;
inline bool UploadInputVoiceResponse::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UploadInputVoiceResponse::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UploadInputVoiceResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UploadInputVoiceResponse::clear_text() {
  if (text_ != NULL) text_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_text();
}
inline const ::micromsg::SKBuiltinBuffer_t& UploadInputVoiceResponse::text() const {
  // @@protoc_insertion_point(field_get:micromsg.UploadInputVoiceResponse.Text)
  return text_ != NULL ? *text_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* UploadInputVoiceResponse::mutable_text() {
  set_has_text();
  if (text_ == NULL) {
    text_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.UploadInputVoiceResponse.Text)
  return text_;
}
inline ::micromsg::SKBuiltinBuffer_t* UploadInputVoiceResponse::release_text() {
  // @@protoc_insertion_point(field_release:micromsg.UploadInputVoiceResponse.Text)
  clear_has_text();
  ::micromsg::SKBuiltinBuffer_t* temp = text_;
  text_ = NULL;
  return temp;
}
inline void UploadInputVoiceResponse::set_allocated_text(::micromsg::SKBuiltinBuffer_t* text) {
  delete text_;
  text_ = text;
  if (text) {
    set_has_text();
  } else {
    clear_has_text();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.UploadInputVoiceResponse.Text)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmvoiceaddr_2eproto__INCLUDED
