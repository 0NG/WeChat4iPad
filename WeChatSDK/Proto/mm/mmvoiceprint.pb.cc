// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmvoiceprint.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mmvoiceprint.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace micromsg {
class VoicePieceCtxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VoicePieceCtx> {
} _VoicePieceCtx_default_instance_;
class ResourceCtxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResourceCtx> {
} _ResourceCtx_default_instance_;
class GetVoicePrintResourceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetVoicePrintResourceRequest> {
} _GetVoicePrintResourceRequest_default_instance_;
class GetVoicePrintResourceResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetVoicePrintResourceResponse> {
} _GetVoicePrintResourceResponse_default_instance_;
class GetVoicePrintResourceRsaRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetVoicePrintResourceRsaRequest> {
} _GetVoicePrintResourceRsaRequest_default_instance_;
class GetVoicePrintResourceRsaResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetVoicePrintResourceRsaResponse> {
} _GetVoicePrintResourceRsaResponse_default_instance_;
class RegisterVoicePrintRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterVoicePrintRequest> {
} _RegisterVoicePrintRequest_default_instance_;
class RegisterVoicePrintResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterVoicePrintResponse> {
} _RegisterVoicePrintResponse_default_instance_;
class VerifyVoicePrintRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyVoicePrintRequest> {
} _VerifyVoicePrintRequest_default_instance_;
class VerifyVoicePrintResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyVoicePrintResponse> {
} _VerifyVoicePrintResponse_default_instance_;
class VerifyVoicePrintRsaRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyVoicePrintRsaRequest> {
} _VerifyVoicePrintRsaRequest_default_instance_;
class VerifyVoicePrintRsaResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyVoicePrintRsaResponse> {
} _VerifyVoicePrintRsaResponse_default_instance_;
class SwitchOpVoicePrintRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SwitchOpVoicePrintRequest> {
} _SwitchOpVoicePrintRequest_default_instance_;
class SwitchOpVoicePrintResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SwitchOpVoicePrintResponse> {
} _SwitchOpVoicePrintResponse_default_instance_;
class GetVoiceprintTicketRsaRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetVoiceprintTicketRsaRequest> {
} _GetVoiceprintTicketRsaRequest_default_instance_;
class GetVoiceprintTicketRsaResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetVoiceprintTicketRsaResponse> {
} _GetVoiceprintTicketRsaResponse_default_instance_;

namespace protobuf_mmvoiceprint_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoicePieceCtx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoicePieceCtx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoicePieceCtx, startpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoicePieceCtx, piecelen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoicePieceCtx, pieceflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoicePieceCtx, piecedata_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCtx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCtx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCtx, resid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceCtx, resdata_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRequest, resscence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRequest, verifyticket_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceResponse, resourcedata_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRsaRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRsaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRsaRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRsaRequest, resscence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRsaRequest, verifyticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRsaRequest, randomencrykey_),
  1,
  3,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRsaResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRsaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRsaResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoicePrintResourceRsaResponse, resourcedata_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintRequest, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintRequest, voiceticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintRequest, piecedata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintRequest, resid_),
  0,
  2,
  3,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintResponse, resgisterret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintResponse, nextstep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintResponse, nextpiece_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterVoicePrintResponse, voiceticket_),
  0,
  2,
  3,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRequest, piece_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRequest, voiceticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRequest, resid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRequest, verifyticket_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintResponse, nextpiece_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintResponse, voiceticket_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaRequest, piece_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaRequest, voiceticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaRequest, resid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaRequest, verifyticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaRequest, randomencrykey_),
  1,
  2,
  4,
  5,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaResponse, nextpiece_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaResponse, voiceticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyVoicePrintRsaResponse, authpwd_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchOpVoicePrintRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchOpVoicePrintRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchOpVoicePrintRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchOpVoicePrintRequest, opcode_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchOpVoicePrintResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchOpVoicePrintResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchOpVoicePrintResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchOpVoicePrintResponse, userswitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchOpVoicePrintResponse, userstatus_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaRequest, getscence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaRequest, randomencrykey_),
  1,
  0,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaResponse, voiceprintticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaResponse, builtiniplist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaResponse, newhostlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVoiceprintTicketRsaResponse, networkcontrol_),
  1,
  0,
  2,
  3,
  4,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(VoicePieceCtx)},
  { 13, 20, sizeof(ResourceCtx)},
  { 22, 30, sizeof(GetVoicePrintResourceRequest)},
  { 33, 40, sizeof(GetVoicePrintResourceResponse)},
  { 42, 51, sizeof(GetVoicePrintResourceRsaRequest)},
  { 55, 62, sizeof(GetVoicePrintResourceRsaResponse)},
  { 64, 74, sizeof(RegisterVoicePrintRequest)},
  { 79, 89, sizeof(RegisterVoicePrintResponse)},
  { 94, 104, sizeof(VerifyVoicePrintRequest)},
  { 109, 118, sizeof(VerifyVoicePrintResponse)},
  { 122, 133, sizeof(VerifyVoicePrintRsaRequest)},
  { 139, 149, sizeof(VerifyVoicePrintRsaResponse)},
  { 154, 161, sizeof(SwitchOpVoicePrintRequest)},
  { 163, 171, sizeof(SwitchOpVoicePrintResponse)},
  { 174, 183, sizeof(GetVoiceprintTicketRsaRequest)},
  { 187, 197, sizeof(GetVoiceprintTicketRsaResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_VoicePieceCtx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResourceCtx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetVoicePrintResourceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetVoicePrintResourceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetVoicePrintResourceRsaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetVoicePrintResourceRsaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterVoicePrintRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterVoicePrintResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyVoicePrintRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyVoicePrintResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyVoicePrintRsaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyVoicePrintRsaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SwitchOpVoicePrintRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SwitchOpVoicePrintResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetVoiceprintTicketRsaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetVoiceprintTicketRsaResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mmvoiceprint.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace

void TableStruct::Shutdown() {
  _VoicePieceCtx_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ResourceCtx_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GetVoicePrintResourceRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _GetVoicePrintResourceResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _GetVoicePrintResourceRsaRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _GetVoicePrintResourceRsaResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _RegisterVoicePrintRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _RegisterVoicePrintResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _VerifyVoicePrintRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _VerifyVoicePrintResponse_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _VerifyVoicePrintRsaRequest_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _VerifyVoicePrintRsaResponse_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _SwitchOpVoicePrintRequest_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _SwitchOpVoicePrintResponse_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _GetVoiceprintTicketRsaRequest_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _GetVoiceprintTicketRsaResponse_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::micromsg::protobuf_mmbuiltintype_2eproto::InitDefaults();
  ::micromsg::protobuf_mmbase_2eproto::InitDefaults();
  _VoicePieceCtx_default_instance_.DefaultConstruct();
  _ResourceCtx_default_instance_.DefaultConstruct();
  _GetVoicePrintResourceRequest_default_instance_.DefaultConstruct();
  _GetVoicePrintResourceResponse_default_instance_.DefaultConstruct();
  _GetVoicePrintResourceRsaRequest_default_instance_.DefaultConstruct();
  _GetVoicePrintResourceRsaResponse_default_instance_.DefaultConstruct();
  _RegisterVoicePrintRequest_default_instance_.DefaultConstruct();
  _RegisterVoicePrintResponse_default_instance_.DefaultConstruct();
  _VerifyVoicePrintRequest_default_instance_.DefaultConstruct();
  _VerifyVoicePrintResponse_default_instance_.DefaultConstruct();
  _VerifyVoicePrintRsaRequest_default_instance_.DefaultConstruct();
  _VerifyVoicePrintRsaResponse_default_instance_.DefaultConstruct();
  _SwitchOpVoicePrintRequest_default_instance_.DefaultConstruct();
  _SwitchOpVoicePrintResponse_default_instance_.DefaultConstruct();
  _GetVoiceprintTicketRsaRequest_default_instance_.DefaultConstruct();
  _GetVoiceprintTicketRsaResponse_default_instance_.DefaultConstruct();
  _VoicePieceCtx_default_instance_.get_mutable()->piecedata_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _ResourceCtx_default_instance_.get_mutable()->resdata_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _GetVoicePrintResourceRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetVoicePrintResourceResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetVoicePrintResourceResponse_default_instance_.get_mutable()->resourcedata_ = const_cast< ::micromsg::ResourceCtx*>(
      ::micromsg::ResourceCtx::internal_default_instance());
  _GetVoicePrintResourceRsaRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetVoicePrintResourceRsaRequest_default_instance_.get_mutable()->randomencrykey_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _GetVoicePrintResourceRsaResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetVoicePrintResourceRsaResponse_default_instance_.get_mutable()->resourcedata_ = const_cast< ::micromsg::ResourceCtx*>(
      ::micromsg::ResourceCtx::internal_default_instance());
  _RegisterVoicePrintRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RegisterVoicePrintRequest_default_instance_.get_mutable()->piecedata_ = const_cast< ::micromsg::VoicePieceCtx*>(
      ::micromsg::VoicePieceCtx::internal_default_instance());
  _RegisterVoicePrintResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _RegisterVoicePrintResponse_default_instance_.get_mutable()->nextpiece_ = const_cast< ::micromsg::VoicePieceCtx*>(
      ::micromsg::VoicePieceCtx::internal_default_instance());
  _VerifyVoicePrintRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _VerifyVoicePrintRequest_default_instance_.get_mutable()->piece_ = const_cast< ::micromsg::VoicePieceCtx*>(
      ::micromsg::VoicePieceCtx::internal_default_instance());
  _VerifyVoicePrintResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _VerifyVoicePrintResponse_default_instance_.get_mutable()->nextpiece_ = const_cast< ::micromsg::VoicePieceCtx*>(
      ::micromsg::VoicePieceCtx::internal_default_instance());
  _VerifyVoicePrintRsaRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _VerifyVoicePrintRsaRequest_default_instance_.get_mutable()->piece_ = const_cast< ::micromsg::VoicePieceCtx*>(
      ::micromsg::VoicePieceCtx::internal_default_instance());
  _VerifyVoicePrintRsaRequest_default_instance_.get_mutable()->randomencrykey_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _VerifyVoicePrintRsaResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _VerifyVoicePrintRsaResponse_default_instance_.get_mutable()->nextpiece_ = const_cast< ::micromsg::VoicePieceCtx*>(
      ::micromsg::VoicePieceCtx::internal_default_instance());
  _SwitchOpVoicePrintRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _SwitchOpVoicePrintResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetVoiceprintTicketRsaRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetVoiceprintTicketRsaRequest_default_instance_.get_mutable()->randomencrykey_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _GetVoiceprintTicketRsaResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetVoiceprintTicketRsaResponse_default_instance_.get_mutable()->builtiniplist_ = const_cast< ::micromsg::BuiltinIPList*>(
      ::micromsg::BuiltinIPList::internal_default_instance());
  _GetVoiceprintTicketRsaResponse_default_instance_.get_mutable()->newhostlist_ = const_cast< ::micromsg::HostList*>(
      ::micromsg::HostList::internal_default_instance());
  _GetVoiceprintTicketRsaResponse_default_instance_.get_mutable()->networkcontrol_ = const_cast< ::micromsg::NetworkControl*>(
      ::micromsg::NetworkControl::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022mmvoiceprint.proto\022\010micromsg\032\023mmbuilti"
      "ntype.proto\032\014mmbase.proto\"v\n\rVoicePieceC"
      "tx\022\020\n\010StartPos\030\001 \002(\r\022\020\n\010PieceLen\030\002 \002(\r\022\021"
      "\n\tPieceFlag\030\003 \002(\r\022.\n\tPieceData\030\004 \002(\0132\033.m"
      "icromsg.SKBuiltinBuffer_t\"J\n\013ResourceCtx"
      "\022\r\n\005ResId\030\001 \002(\r\022,\n\007ResData\030\002 \002(\0132\033.micro"
      "msg.SKBuiltinBuffer_t\"s\n\034GetVoicePrintRe"
      "sourceRequest\022*\n\013BaseRequest\030\001 \002(\0132\025.mic"
      "romsg.BaseRequest\022\021\n\tResScence\030\002 \002(\r\022\024\n\014"
      "VerifyTicket\030\003 \001(\t\"z\n\035GetVoicePrintResou"
      "rceResponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micr"
      "omsg.BaseResponse\022+\n\014ResourceData\030\002 \002(\0132"
      "\025.micromsg.ResourceCtx\"\253\001\n\037GetVoicePrint"
      "ResourceRsaRequest\022*\n\013BaseRequest\030\001 \002(\0132"
      "\025.micromsg.BaseRequest\022\021\n\tResScence\030\002 \002("
      "\r\022\024\n\014VerifyTicket\030\003 \001(\t\0223\n\016RandomEncryKe"
      "y\030\004 \002(\0132\033.micromsg.SKBuiltinBuffer_t\"}\n "
      "GetVoicePrintResourceRsaResponse\022,\n\014Base"
      "Response\030\001 \002(\0132\026.micromsg.BaseResponse\022+"
      "\n\014ResourceData\030\002 \002(\0132\025.micromsg.Resource"
      "Ctx\"\245\001\n\031RegisterVoicePrintRequest\022*\n\013Bas"
      "eRequest\030\001 \002(\0132\025.micromsg.BaseRequest\022\014\n"
      "\004Step\030\002 \002(\r\022\023\n\013VoiceTicket\030\003 \002(\r\022*\n\tPiec"
      "eData\030\004 \002(\0132\027.micromsg.VoicePieceCtx\022\r\n\005"
      "ResId\030\005 \002(\r\"\263\001\n\032RegisterVoicePrintRespon"
      "se\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.Base"
      "Response\022\024\n\014ResgisterRet\030\002 \002(\005\022\020\n\010NextSt"
      "ep\030\003 \002(\r\022*\n\tNextPiece\030\004 \002(\0132\027.micromsg.V"
      "oicePieceCtx\022\023\n\013VoiceTicket\030\005 \002(\r\"\247\001\n\027Ve"
      "rifyVoicePrintRequest\022*\n\013BaseRequest\030\001 \002"
      "(\0132\025.micromsg.BaseRequest\022&\n\005Piece\030\002 \002(\013"
      "2\027.micromsg.VoicePieceCtx\022\023\n\013VoiceTicket"
      "\030\003 \002(\r\022\r\n\005ResId\030\004 \002(\r\022\024\n\014VerifyTicket\030\005 "
      "\001(\t\"\231\001\n\030VerifyVoicePrintResponse\022,\n\014Base"
      "Response\030\001 \002(\0132\026.micromsg.BaseResponse\022*"
      "\n\tNextPiece\030\002 \002(\0132\027.micromsg.VoicePieceC"
      "tx\022\016\n\006Result\030\003 \002(\r\022\023\n\013VoiceTicket\030\004 \002(\r\""
      "\337\001\n\032VerifyVoicePrintRsaRequest\022*\n\013BaseRe"
      "quest\030\001 \002(\0132\025.micromsg.BaseRequest\022&\n\005Pi"
      "ece\030\002 \002(\0132\027.micromsg.VoicePieceCtx\022\023\n\013Vo"
      "iceTicket\030\003 \002(\r\022\r\n\005ResId\030\004 \002(\r\022\024\n\014Verify"
      "Ticket\030\005 \001(\t\0223\n\016RandomEncryKey\030\006 \002(\0132\033.m"
      "icromsg.SKBuiltinBuffer_t\"\255\001\n\033VerifyVoic"
      "ePrintRsaResponse\022,\n\014BaseResponse\030\001 \002(\0132"
      "\026.micromsg.BaseResponse\022*\n\tNextPiece\030\002 \002"
      "(\0132\027.micromsg.VoicePieceCtx\022\016\n\006Result\030\003 "
      "\002(\r\022\023\n\013VoiceTicket\030\004 \002(\r\022\017\n\007AuthPwd\030\005 \001("
      "\t\"W\n\031SwitchOpVoicePrintRequest\022*\n\013BaseRe"
      "quest\030\001 \002(\0132\025.micromsg.BaseRequest\022\016\n\006op"
      "code\030\002 \002(\r\"r\n\032SwitchOpVoicePrintResponse"
      "\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.BaseRe"
      "sponse\022\022\n\nUserSwitch\030\002 \002(\r\022\022\n\nUserStatus"
      "\030\003 \002(\r\"\245\001\n\035GetVoiceprintTicketRsaRequest"
      "\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseReq"
      "uest\022\020\n\010UserName\030\002 \001(\t\022\021\n\tGetScence\030\003 \002("
      "\r\0223\n\016RandomEncryKey\030\004 \002(\0132\033.micromsg.SKB"
      "uiltinBuffer_t\"\363\001\n\036GetVoiceprintTicketRs"
      "aResponse\022,\n\014BaseResponse\030\001 \002(\0132\026.microm"
      "sg.BaseResponse\022\030\n\020VoiceprintTicket\030\002 \001("
      "\t\022.\n\rBuiltinIPList\030\003 \001(\0132\027.micromsg.Buil"
      "tinIPList\022\'\n\013NewHostList\030\004 \001(\0132\022.microms"
      "g.HostList\0220\n\016NetworkControl\030\005 \001(\0132\030.mic"
      "romsg.NetworkControl"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2500);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mmvoiceprint.proto", &protobuf_RegisterTypes);
  ::micromsg::protobuf_mmbuiltintype_2eproto::AddDescriptors();
  ::micromsg::protobuf_mmbase_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mmvoiceprint_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoicePieceCtx::kStartPosFieldNumber;
const int VoicePieceCtx::kPieceLenFieldNumber;
const int VoicePieceCtx::kPieceFlagFieldNumber;
const int VoicePieceCtx::kPieceDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoicePieceCtx::VoicePieceCtx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.VoicePieceCtx)
}
VoicePieceCtx::VoicePieceCtx(const VoicePieceCtx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_piecedata()) {
    piecedata_ = new ::micromsg::SKBuiltinBuffer_t(*from.piecedata_);
  } else {
    piecedata_ = NULL;
  }
  ::memcpy(&startpos_, &from.startpos_,
    reinterpret_cast<char*>(&pieceflag_) -
    reinterpret_cast<char*>(&startpos_) + sizeof(pieceflag_));
  // @@protoc_insertion_point(copy_constructor:micromsg.VoicePieceCtx)
}

void VoicePieceCtx::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&piecedata_, 0, reinterpret_cast<char*>(&pieceflag_) -
    reinterpret_cast<char*>(&piecedata_) + sizeof(pieceflag_));
}

VoicePieceCtx::~VoicePieceCtx() {
  // @@protoc_insertion_point(destructor:micromsg.VoicePieceCtx)
  SharedDtor();
}

void VoicePieceCtx::SharedDtor() {
  if (this != internal_default_instance()) {
    delete piecedata_;
  }
}

void VoicePieceCtx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoicePieceCtx::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoicePieceCtx& VoicePieceCtx::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

VoicePieceCtx* VoicePieceCtx::New(::google::protobuf::Arena* arena) const {
  VoicePieceCtx* n = new VoicePieceCtx;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoicePieceCtx::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.VoicePieceCtx)
  if (has_piecedata()) {
    GOOGLE_DCHECK(piecedata_ != NULL);
    piecedata_->::micromsg::SKBuiltinBuffer_t::Clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&startpos_, 0, reinterpret_cast<char*>(&pieceflag_) -
      reinterpret_cast<char*>(&startpos_) + sizeof(pieceflag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VoicePieceCtx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.VoicePieceCtx)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 StartPos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_startpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 PieceLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_piecelen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &piecelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 PieceFlag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_pieceflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pieceflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t PieceData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_piecedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.VoicePieceCtx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.VoicePieceCtx)
  return false;
#undef DO_
}

void VoicePieceCtx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.VoicePieceCtx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 StartPos = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->startpos(), output);
  }

  // required uint32 PieceLen = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->piecelen(), output);
  }

  // required uint32 PieceFlag = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pieceflag(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t PieceData = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->piecedata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.VoicePieceCtx)
}

::google::protobuf::uint8* VoicePieceCtx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.VoicePieceCtx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 StartPos = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->startpos(), target);
  }

  // required uint32 PieceLen = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->piecelen(), target);
  }

  // required uint32 PieceFlag = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pieceflag(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t PieceData = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->piecedata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.VoicePieceCtx)
  return target;
}

size_t VoicePieceCtx::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.VoicePieceCtx)
  size_t total_size = 0;

  if (has_piecedata()) {
    // required .micromsg.SKBuiltinBuffer_t PieceData = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->piecedata_);
  }

  if (has_startpos()) {
    // required uint32 StartPos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startpos());
  }

  if (has_piecelen()) {
    // required uint32 PieceLen = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->piecelen());
  }

  if (has_pieceflag()) {
    // required uint32 PieceFlag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pieceflag());
  }

  return total_size;
}
size_t VoicePieceCtx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.VoicePieceCtx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .micromsg.SKBuiltinBuffer_t PieceData = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->piecedata_);

    // required uint32 StartPos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startpos());

    // required uint32 PieceLen = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->piecelen());

    // required uint32 PieceFlag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pieceflag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoicePieceCtx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.VoicePieceCtx)
  GOOGLE_DCHECK_NE(&from, this);
  const VoicePieceCtx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoicePieceCtx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.VoicePieceCtx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.VoicePieceCtx)
    MergeFrom(*source);
  }
}

void VoicePieceCtx::MergeFrom(const VoicePieceCtx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.VoicePieceCtx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_piecedata()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.piecedata());
    }
    if (cached_has_bits & 0x00000002u) {
      startpos_ = from.startpos_;
    }
    if (cached_has_bits & 0x00000004u) {
      piecelen_ = from.piecelen_;
    }
    if (cached_has_bits & 0x00000008u) {
      pieceflag_ = from.pieceflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VoicePieceCtx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.VoicePieceCtx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoicePieceCtx::CopyFrom(const VoicePieceCtx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.VoicePieceCtx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoicePieceCtx::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_piecedata()) {
    if (!this->piecedata_->IsInitialized()) return false;
  }
  return true;
}

void VoicePieceCtx::Swap(VoicePieceCtx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoicePieceCtx::InternalSwap(VoicePieceCtx* other) {
  std::swap(piecedata_, other->piecedata_);
  std::swap(startpos_, other->startpos_);
  std::swap(piecelen_, other->piecelen_);
  std::swap(pieceflag_, other->pieceflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoicePieceCtx::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VoicePieceCtx

// required uint32 StartPos = 1;
bool VoicePieceCtx::has_startpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VoicePieceCtx::set_has_startpos() {
  _has_bits_[0] |= 0x00000002u;
}
void VoicePieceCtx::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000002u;
}
void VoicePieceCtx::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
::google::protobuf::uint32 VoicePieceCtx::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.VoicePieceCtx.StartPos)
  return startpos_;
}
void VoicePieceCtx::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoicePieceCtx.StartPos)
}

// required uint32 PieceLen = 2;
bool VoicePieceCtx::has_piecelen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VoicePieceCtx::set_has_piecelen() {
  _has_bits_[0] |= 0x00000004u;
}
void VoicePieceCtx::clear_has_piecelen() {
  _has_bits_[0] &= ~0x00000004u;
}
void VoicePieceCtx::clear_piecelen() {
  piecelen_ = 0u;
  clear_has_piecelen();
}
::google::protobuf::uint32 VoicePieceCtx::piecelen() const {
  // @@protoc_insertion_point(field_get:micromsg.VoicePieceCtx.PieceLen)
  return piecelen_;
}
void VoicePieceCtx::set_piecelen(::google::protobuf::uint32 value) {
  set_has_piecelen();
  piecelen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoicePieceCtx.PieceLen)
}

// required uint32 PieceFlag = 3;
bool VoicePieceCtx::has_pieceflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VoicePieceCtx::set_has_pieceflag() {
  _has_bits_[0] |= 0x00000008u;
}
void VoicePieceCtx::clear_has_pieceflag() {
  _has_bits_[0] &= ~0x00000008u;
}
void VoicePieceCtx::clear_pieceflag() {
  pieceflag_ = 0u;
  clear_has_pieceflag();
}
::google::protobuf::uint32 VoicePieceCtx::pieceflag() const {
  // @@protoc_insertion_point(field_get:micromsg.VoicePieceCtx.PieceFlag)
  return pieceflag_;
}
void VoicePieceCtx::set_pieceflag(::google::protobuf::uint32 value) {
  set_has_pieceflag();
  pieceflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoicePieceCtx.PieceFlag)
}

// required .micromsg.SKBuiltinBuffer_t PieceData = 4;
bool VoicePieceCtx::has_piecedata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VoicePieceCtx::set_has_piecedata() {
  _has_bits_[0] |= 0x00000001u;
}
void VoicePieceCtx::clear_has_piecedata() {
  _has_bits_[0] &= ~0x00000001u;
}
void VoicePieceCtx::clear_piecedata() {
  if (piecedata_ != NULL) piecedata_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_piecedata();
}
const ::micromsg::SKBuiltinBuffer_t& VoicePieceCtx::piecedata() const {
  // @@protoc_insertion_point(field_get:micromsg.VoicePieceCtx.PieceData)
  return piecedata_ != NULL ? *piecedata_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* VoicePieceCtx::mutable_piecedata() {
  set_has_piecedata();
  if (piecedata_ == NULL) {
    piecedata_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VoicePieceCtx.PieceData)
  return piecedata_;
}
::micromsg::SKBuiltinBuffer_t* VoicePieceCtx::release_piecedata() {
  // @@protoc_insertion_point(field_release:micromsg.VoicePieceCtx.PieceData)
  clear_has_piecedata();
  ::micromsg::SKBuiltinBuffer_t* temp = piecedata_;
  piecedata_ = NULL;
  return temp;
}
void VoicePieceCtx::set_allocated_piecedata(::micromsg::SKBuiltinBuffer_t* piecedata) {
  delete piecedata_;
  piecedata_ = piecedata;
  if (piecedata) {
    set_has_piecedata();
  } else {
    clear_has_piecedata();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoicePieceCtx.PieceData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceCtx::kResIdFieldNumber;
const int ResourceCtx::kResDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceCtx::ResourceCtx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ResourceCtx)
}
ResourceCtx::ResourceCtx(const ResourceCtx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resdata()) {
    resdata_ = new ::micromsg::SKBuiltinBuffer_t(*from.resdata_);
  } else {
    resdata_ = NULL;
  }
  resid_ = from.resid_;
  // @@protoc_insertion_point(copy_constructor:micromsg.ResourceCtx)
}

void ResourceCtx::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&resdata_, 0, reinterpret_cast<char*>(&resid_) -
    reinterpret_cast<char*>(&resdata_) + sizeof(resid_));
}

ResourceCtx::~ResourceCtx() {
  // @@protoc_insertion_point(destructor:micromsg.ResourceCtx)
  SharedDtor();
}

void ResourceCtx::SharedDtor() {
  if (this != internal_default_instance()) {
    delete resdata_;
  }
}

void ResourceCtx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceCtx::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceCtx& ResourceCtx::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResourceCtx* ResourceCtx::New(::google::protobuf::Arena* arena) const {
  ResourceCtx* n = new ResourceCtx;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResourceCtx::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ResourceCtx)
  if (has_resdata()) {
    GOOGLE_DCHECK(resdata_ != NULL);
    resdata_->::micromsg::SKBuiltinBuffer_t::Clear();
  }
  resid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResourceCtx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ResourceCtx)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ResId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_resid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t ResData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ResourceCtx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ResourceCtx)
  return false;
#undef DO_
}

void ResourceCtx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ResourceCtx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 ResId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->resid(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t ResData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ResourceCtx)
}

::google::protobuf::uint8* ResourceCtx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ResourceCtx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 ResId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->resid(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t ResData = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->resdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ResourceCtx)
  return target;
}

size_t ResourceCtx::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ResourceCtx)
  size_t total_size = 0;

  if (has_resdata()) {
    // required .micromsg.SKBuiltinBuffer_t ResData = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resdata_);
  }

  if (has_resid()) {
    // required uint32 ResId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resid());
  }

  return total_size;
}
size_t ResourceCtx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ResourceCtx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.SKBuiltinBuffer_t ResData = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resdata_);

    // required uint32 ResId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceCtx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ResourceCtx)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceCtx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceCtx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ResourceCtx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ResourceCtx)
    MergeFrom(*source);
  }
}

void ResourceCtx::MergeFrom(const ResourceCtx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ResourceCtx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_resdata()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.resdata());
    }
    if (cached_has_bits & 0x00000002u) {
      resid_ = from.resid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResourceCtx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ResourceCtx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceCtx::CopyFrom(const ResourceCtx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ResourceCtx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceCtx::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_resdata()) {
    if (!this->resdata_->IsInitialized()) return false;
  }
  return true;
}

void ResourceCtx::Swap(ResourceCtx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceCtx::InternalSwap(ResourceCtx* other) {
  std::swap(resdata_, other->resdata_);
  std::swap(resid_, other->resid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResourceCtx::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceCtx

// required uint32 ResId = 1;
bool ResourceCtx::has_resid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ResourceCtx::set_has_resid() {
  _has_bits_[0] |= 0x00000002u;
}
void ResourceCtx::clear_has_resid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ResourceCtx::clear_resid() {
  resid_ = 0u;
  clear_has_resid();
}
::google::protobuf::uint32 ResourceCtx::resid() const {
  // @@protoc_insertion_point(field_get:micromsg.ResourceCtx.ResId)
  return resid_;
}
void ResourceCtx::set_resid(::google::protobuf::uint32 value) {
  set_has_resid();
  resid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ResourceCtx.ResId)
}

// required .micromsg.SKBuiltinBuffer_t ResData = 2;
bool ResourceCtx::has_resdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResourceCtx::set_has_resdata() {
  _has_bits_[0] |= 0x00000001u;
}
void ResourceCtx::clear_has_resdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResourceCtx::clear_resdata() {
  if (resdata_ != NULL) resdata_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_resdata();
}
const ::micromsg::SKBuiltinBuffer_t& ResourceCtx::resdata() const {
  // @@protoc_insertion_point(field_get:micromsg.ResourceCtx.ResData)
  return resdata_ != NULL ? *resdata_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* ResourceCtx::mutable_resdata() {
  set_has_resdata();
  if (resdata_ == NULL) {
    resdata_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ResourceCtx.ResData)
  return resdata_;
}
::micromsg::SKBuiltinBuffer_t* ResourceCtx::release_resdata() {
  // @@protoc_insertion_point(field_release:micromsg.ResourceCtx.ResData)
  clear_has_resdata();
  ::micromsg::SKBuiltinBuffer_t* temp = resdata_;
  resdata_ = NULL;
  return temp;
}
void ResourceCtx::set_allocated_resdata(::micromsg::SKBuiltinBuffer_t* resdata) {
  delete resdata_;
  resdata_ = resdata;
  if (resdata) {
    set_has_resdata();
  } else {
    clear_has_resdata();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ResourceCtx.ResData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVoicePrintResourceRequest::kBaseRequestFieldNumber;
const int GetVoicePrintResourceRequest::kResScenceFieldNumber;
const int GetVoicePrintResourceRequest::kVerifyTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVoicePrintResourceRequest::GetVoicePrintResourceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetVoicePrintResourceRequest)
}
GetVoicePrintResourceRequest::GetVoicePrintResourceRequest(const GetVoicePrintResourceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  verifyticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verifyticket()) {
    verifyticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyticket_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  resscence_ = from.resscence_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetVoicePrintResourceRequest)
}

void GetVoicePrintResourceRequest::SharedCtor() {
  _cached_size_ = 0;
  verifyticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&resscence_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(resscence_));
}

GetVoicePrintResourceRequest::~GetVoicePrintResourceRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetVoicePrintResourceRequest)
  SharedDtor();
}

void GetVoicePrintResourceRequest::SharedDtor() {
  verifyticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetVoicePrintResourceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVoicePrintResourceRequest::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVoicePrintResourceRequest& GetVoicePrintResourceRequest::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetVoicePrintResourceRequest* GetVoicePrintResourceRequest::New(::google::protobuf::Arena* arena) const {
  GetVoicePrintResourceRequest* n = new GetVoicePrintResourceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVoicePrintResourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetVoicePrintResourceRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_verifyticket()) {
      GOOGLE_DCHECK(!verifyticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*verifyticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  resscence_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetVoicePrintResourceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetVoicePrintResourceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ResScence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_resscence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resscence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string VerifyTicket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifyticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verifyticket().data(), this->verifyticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetVoicePrintResourceRequest.VerifyTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetVoicePrintResourceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetVoicePrintResourceRequest)
  return false;
#undef DO_
}

void GetVoicePrintResourceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetVoicePrintResourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 ResScence = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->resscence(), output);
  }

  // optional string VerifyTicket = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyticket().data(), this->verifyticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetVoicePrintResourceRequest.VerifyTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->verifyticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetVoicePrintResourceRequest)
}

::google::protobuf::uint8* GetVoicePrintResourceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetVoicePrintResourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 ResScence = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->resscence(), target);
  }

  // optional string VerifyTicket = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyticket().data(), this->verifyticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetVoicePrintResourceRequest.VerifyTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->verifyticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetVoicePrintResourceRequest)
  return target;
}

size_t GetVoicePrintResourceRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetVoicePrintResourceRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_resscence()) {
    // required uint32 ResScence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resscence());
  }

  return total_size;
}
size_t GetVoicePrintResourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetVoicePrintResourceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 ResScence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resscence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string VerifyTicket = 3;
  if (has_verifyticket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verifyticket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVoicePrintResourceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetVoicePrintResourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVoicePrintResourceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVoicePrintResourceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetVoicePrintResourceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetVoicePrintResourceRequest)
    MergeFrom(*source);
  }
}

void GetVoicePrintResourceRequest::MergeFrom(const GetVoicePrintResourceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetVoicePrintResourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_verifyticket();
      verifyticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      resscence_ = from.resscence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetVoicePrintResourceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetVoicePrintResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVoicePrintResourceRequest::CopyFrom(const GetVoicePrintResourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetVoicePrintResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoicePrintResourceRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetVoicePrintResourceRequest::Swap(GetVoicePrintResourceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVoicePrintResourceRequest::InternalSwap(GetVoicePrintResourceRequest* other) {
  verifyticket_.Swap(&other->verifyticket_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(resscence_, other->resscence_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVoicePrintResourceRequest::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVoicePrintResourceRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetVoicePrintResourceRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetVoicePrintResourceRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetVoicePrintResourceRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetVoicePrintResourceRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetVoicePrintResourceRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetVoicePrintResourceRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetVoicePrintResourceRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetVoicePrintResourceRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRequest.BaseRequest)
}

// required uint32 ResScence = 2;
bool GetVoicePrintResourceRequest::has_resscence() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetVoicePrintResourceRequest::set_has_resscence() {
  _has_bits_[0] |= 0x00000004u;
}
void GetVoicePrintResourceRequest::clear_has_resscence() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetVoicePrintResourceRequest::clear_resscence() {
  resscence_ = 0u;
  clear_has_resscence();
}
::google::protobuf::uint32 GetVoicePrintResourceRequest::resscence() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRequest.ResScence)
  return resscence_;
}
void GetVoicePrintResourceRequest::set_resscence(::google::protobuf::uint32 value) {
  set_has_resscence();
  resscence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetVoicePrintResourceRequest.ResScence)
}

// optional string VerifyTicket = 3;
bool GetVoicePrintResourceRequest::has_verifyticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetVoicePrintResourceRequest::set_has_verifyticket() {
  _has_bits_[0] |= 0x00000001u;
}
void GetVoicePrintResourceRequest::clear_has_verifyticket() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetVoicePrintResourceRequest::clear_verifyticket() {
  verifyticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyticket();
}
const ::std::string& GetVoicePrintResourceRequest::verifyticket() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
  return verifyticket_.GetNoArena();
}
void GetVoicePrintResourceRequest::set_verifyticket(const ::std::string& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
}
#if LANG_CXX11
void GetVoicePrintResourceRequest::set_verifyticket(::std::string&& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
}
#endif
void GetVoicePrintResourceRequest::set_verifyticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
}
void GetVoicePrintResourceRequest::set_verifyticket(const char* value, size_t size) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
}
::std::string* GetVoicePrintResourceRequest::mutable_verifyticket() {
  set_has_verifyticket();
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
  return verifyticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetVoicePrintResourceRequest::release_verifyticket() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
  clear_has_verifyticket();
  return verifyticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetVoicePrintResourceRequest::set_allocated_verifyticket(::std::string* verifyticket) {
  if (verifyticket != NULL) {
    set_has_verifyticket();
  } else {
    clear_has_verifyticket();
  }
  verifyticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVoicePrintResourceResponse::kBaseResponseFieldNumber;
const int GetVoicePrintResourceResponse::kResourceDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVoicePrintResourceResponse::GetVoicePrintResourceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetVoicePrintResourceResponse)
}
GetVoicePrintResourceResponse::GetVoicePrintResourceResponse(const GetVoicePrintResourceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_resourcedata()) {
    resourcedata_ = new ::micromsg::ResourceCtx(*from.resourcedata_);
  } else {
    resourcedata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetVoicePrintResourceResponse)
}

void GetVoicePrintResourceResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&resourcedata_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(resourcedata_));
}

GetVoicePrintResourceResponse::~GetVoicePrintResourceResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetVoicePrintResourceResponse)
  SharedDtor();
}

void GetVoicePrintResourceResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete resourcedata_;
  }
}

void GetVoicePrintResourceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVoicePrintResourceResponse::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVoicePrintResourceResponse& GetVoicePrintResourceResponse::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetVoicePrintResourceResponse* GetVoicePrintResourceResponse::New(::google::protobuf::Arena* arena) const {
  GetVoicePrintResourceResponse* n = new GetVoicePrintResourceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVoicePrintResourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetVoicePrintResourceResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_resourcedata()) {
      GOOGLE_DCHECK(resourcedata_ != NULL);
      resourcedata_->::micromsg::ResourceCtx::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetVoicePrintResourceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetVoicePrintResourceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.ResourceCtx ResourceData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resourcedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetVoicePrintResourceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetVoicePrintResourceResponse)
  return false;
#undef DO_
}

void GetVoicePrintResourceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetVoicePrintResourceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.ResourceCtx ResourceData = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resourcedata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetVoicePrintResourceResponse)
}

::google::protobuf::uint8* GetVoicePrintResourceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetVoicePrintResourceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.ResourceCtx ResourceData = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->resourcedata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetVoicePrintResourceResponse)
  return target;
}

size_t GetVoicePrintResourceResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetVoicePrintResourceResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_resourcedata()) {
    // required .micromsg.ResourceCtx ResourceData = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resourcedata_);
  }

  return total_size;
}
size_t GetVoicePrintResourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetVoicePrintResourceResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.ResourceCtx ResourceData = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resourcedata_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVoicePrintResourceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetVoicePrintResourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVoicePrintResourceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVoicePrintResourceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetVoicePrintResourceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetVoicePrintResourceResponse)
    MergeFrom(*source);
  }
}

void GetVoicePrintResourceResponse::MergeFrom(const GetVoicePrintResourceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetVoicePrintResourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resourcedata()->::micromsg::ResourceCtx::MergeFrom(from.resourcedata());
    }
  }
}

void GetVoicePrintResourceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetVoicePrintResourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVoicePrintResourceResponse::CopyFrom(const GetVoicePrintResourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetVoicePrintResourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoicePrintResourceResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_resourcedata()) {
    if (!this->resourcedata_->IsInitialized()) return false;
  }
  return true;
}

void GetVoicePrintResourceResponse::Swap(GetVoicePrintResourceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVoicePrintResourceResponse::InternalSwap(GetVoicePrintResourceResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(resourcedata_, other->resourcedata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVoicePrintResourceResponse::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVoicePrintResourceResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetVoicePrintResourceResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetVoicePrintResourceResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetVoicePrintResourceResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetVoicePrintResourceResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetVoicePrintResourceResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetVoicePrintResourceResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetVoicePrintResourceResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetVoicePrintResourceResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceResponse.BaseResponse)
}

// required .micromsg.ResourceCtx ResourceData = 2;
bool GetVoicePrintResourceResponse::has_resourcedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetVoicePrintResourceResponse::set_has_resourcedata() {
  _has_bits_[0] |= 0x00000002u;
}
void GetVoicePrintResourceResponse::clear_has_resourcedata() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetVoicePrintResourceResponse::clear_resourcedata() {
  if (resourcedata_ != NULL) resourcedata_->::micromsg::ResourceCtx::Clear();
  clear_has_resourcedata();
}
const ::micromsg::ResourceCtx& GetVoicePrintResourceResponse::resourcedata() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceResponse.ResourceData)
  return resourcedata_ != NULL ? *resourcedata_
                         : *::micromsg::ResourceCtx::internal_default_instance();
}
::micromsg::ResourceCtx* GetVoicePrintResourceResponse::mutable_resourcedata() {
  set_has_resourcedata();
  if (resourcedata_ == NULL) {
    resourcedata_ = new ::micromsg::ResourceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceResponse.ResourceData)
  return resourcedata_;
}
::micromsg::ResourceCtx* GetVoicePrintResourceResponse::release_resourcedata() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceResponse.ResourceData)
  clear_has_resourcedata();
  ::micromsg::ResourceCtx* temp = resourcedata_;
  resourcedata_ = NULL;
  return temp;
}
void GetVoicePrintResourceResponse::set_allocated_resourcedata(::micromsg::ResourceCtx* resourcedata) {
  delete resourcedata_;
  resourcedata_ = resourcedata;
  if (resourcedata) {
    set_has_resourcedata();
  } else {
    clear_has_resourcedata();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceResponse.ResourceData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVoicePrintResourceRsaRequest::kBaseRequestFieldNumber;
const int GetVoicePrintResourceRsaRequest::kResScenceFieldNumber;
const int GetVoicePrintResourceRsaRequest::kVerifyTicketFieldNumber;
const int GetVoicePrintResourceRsaRequest::kRandomEncryKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVoicePrintResourceRsaRequest::GetVoicePrintResourceRsaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetVoicePrintResourceRsaRequest)
}
GetVoicePrintResourceRsaRequest::GetVoicePrintResourceRsaRequest(const GetVoicePrintResourceRsaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  verifyticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verifyticket()) {
    verifyticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyticket_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_randomencrykey()) {
    randomencrykey_ = new ::micromsg::SKBuiltinBuffer_t(*from.randomencrykey_);
  } else {
    randomencrykey_ = NULL;
  }
  resscence_ = from.resscence_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetVoicePrintResourceRsaRequest)
}

void GetVoicePrintResourceRsaRequest::SharedCtor() {
  _cached_size_ = 0;
  verifyticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&resscence_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(resscence_));
}

GetVoicePrintResourceRsaRequest::~GetVoicePrintResourceRsaRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetVoicePrintResourceRsaRequest)
  SharedDtor();
}

void GetVoicePrintResourceRsaRequest::SharedDtor() {
  verifyticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete randomencrykey_;
  }
}

void GetVoicePrintResourceRsaRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVoicePrintResourceRsaRequest::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVoicePrintResourceRsaRequest& GetVoicePrintResourceRsaRequest::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetVoicePrintResourceRsaRequest* GetVoicePrintResourceRsaRequest::New(::google::protobuf::Arena* arena) const {
  GetVoicePrintResourceRsaRequest* n = new GetVoicePrintResourceRsaRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVoicePrintResourceRsaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetVoicePrintResourceRsaRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_verifyticket()) {
      GOOGLE_DCHECK(!verifyticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*verifyticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_randomencrykey()) {
      GOOGLE_DCHECK(randomencrykey_ != NULL);
      randomencrykey_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  resscence_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetVoicePrintResourceRsaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetVoicePrintResourceRsaRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ResScence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_resscence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resscence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string VerifyTicket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifyticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verifyticket().data(), this->verifyticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_randomencrykey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetVoicePrintResourceRsaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetVoicePrintResourceRsaRequest)
  return false;
#undef DO_
}

void GetVoicePrintResourceRsaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetVoicePrintResourceRsaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 ResScence = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->resscence(), output);
  }

  // optional string VerifyTicket = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyticket().data(), this->verifyticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->verifyticket(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->randomencrykey_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetVoicePrintResourceRsaRequest)
}

::google::protobuf::uint8* GetVoicePrintResourceRsaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetVoicePrintResourceRsaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 ResScence = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->resscence(), target);
  }

  // optional string VerifyTicket = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyticket().data(), this->verifyticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->verifyticket(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->randomencrykey_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetVoicePrintResourceRsaRequest)
  return target;
}

size_t GetVoicePrintResourceRsaRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetVoicePrintResourceRsaRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_randomencrykey()) {
    // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->randomencrykey_);
  }

  if (has_resscence()) {
    // required uint32 ResScence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resscence());
  }

  return total_size;
}
size_t GetVoicePrintResourceRsaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetVoicePrintResourceRsaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->randomencrykey_);

    // required uint32 ResScence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resscence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string VerifyTicket = 3;
  if (has_verifyticket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verifyticket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVoicePrintResourceRsaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetVoicePrintResourceRsaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVoicePrintResourceRsaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVoicePrintResourceRsaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetVoicePrintResourceRsaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetVoicePrintResourceRsaRequest)
    MergeFrom(*source);
  }
}

void GetVoicePrintResourceRsaRequest::MergeFrom(const GetVoicePrintResourceRsaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetVoicePrintResourceRsaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_verifyticket();
      verifyticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_randomencrykey()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.randomencrykey());
    }
    if (cached_has_bits & 0x00000008u) {
      resscence_ = from.resscence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetVoicePrintResourceRsaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetVoicePrintResourceRsaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVoicePrintResourceRsaRequest::CopyFrom(const GetVoicePrintResourceRsaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetVoicePrintResourceRsaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoicePrintResourceRsaRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_randomencrykey()) {
    if (!this->randomencrykey_->IsInitialized()) return false;
  }
  return true;
}

void GetVoicePrintResourceRsaRequest::Swap(GetVoicePrintResourceRsaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVoicePrintResourceRsaRequest::InternalSwap(GetVoicePrintResourceRsaRequest* other) {
  verifyticket_.Swap(&other->verifyticket_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(randomencrykey_, other->randomencrykey_);
  std::swap(resscence_, other->resscence_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVoicePrintResourceRsaRequest::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVoicePrintResourceRsaRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetVoicePrintResourceRsaRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetVoicePrintResourceRsaRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetVoicePrintResourceRsaRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetVoicePrintResourceRsaRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetVoicePrintResourceRsaRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetVoicePrintResourceRsaRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRsaRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetVoicePrintResourceRsaRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRsaRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetVoicePrintResourceRsaRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRsaRequest.BaseRequest)
}

// required uint32 ResScence = 2;
bool GetVoicePrintResourceRsaRequest::has_resscence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetVoicePrintResourceRsaRequest::set_has_resscence() {
  _has_bits_[0] |= 0x00000008u;
}
void GetVoicePrintResourceRsaRequest::clear_has_resscence() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetVoicePrintResourceRsaRequest::clear_resscence() {
  resscence_ = 0u;
  clear_has_resscence();
}
::google::protobuf::uint32 GetVoicePrintResourceRsaRequest::resscence() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaRequest.ResScence)
  return resscence_;
}
void GetVoicePrintResourceRsaRequest::set_resscence(::google::protobuf::uint32 value) {
  set_has_resscence();
  resscence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetVoicePrintResourceRsaRequest.ResScence)
}

// optional string VerifyTicket = 3;
bool GetVoicePrintResourceRsaRequest::has_verifyticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetVoicePrintResourceRsaRequest::set_has_verifyticket() {
  _has_bits_[0] |= 0x00000001u;
}
void GetVoicePrintResourceRsaRequest::clear_has_verifyticket() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetVoicePrintResourceRsaRequest::clear_verifyticket() {
  verifyticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyticket();
}
const ::std::string& GetVoicePrintResourceRsaRequest::verifyticket() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
  return verifyticket_.GetNoArena();
}
void GetVoicePrintResourceRsaRequest::set_verifyticket(const ::std::string& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
}
#if LANG_CXX11
void GetVoicePrintResourceRsaRequest::set_verifyticket(::std::string&& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
}
#endif
void GetVoicePrintResourceRsaRequest::set_verifyticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
}
void GetVoicePrintResourceRsaRequest::set_verifyticket(const char* value, size_t size) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
}
::std::string* GetVoicePrintResourceRsaRequest::mutable_verifyticket() {
  set_has_verifyticket();
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
  return verifyticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetVoicePrintResourceRsaRequest::release_verifyticket() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
  clear_has_verifyticket();
  return verifyticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetVoicePrintResourceRsaRequest::set_allocated_verifyticket(::std::string* verifyticket) {
  if (verifyticket != NULL) {
    set_has_verifyticket();
  } else {
    clear_has_verifyticket();
  }
  verifyticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
}

// required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
bool GetVoicePrintResourceRsaRequest::has_randomencrykey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetVoicePrintResourceRsaRequest::set_has_randomencrykey() {
  _has_bits_[0] |= 0x00000004u;
}
void GetVoicePrintResourceRsaRequest::clear_has_randomencrykey() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetVoicePrintResourceRsaRequest::clear_randomencrykey() {
  if (randomencrykey_ != NULL) randomencrykey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_randomencrykey();
}
const ::micromsg::SKBuiltinBuffer_t& GetVoicePrintResourceRsaRequest::randomencrykey() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaRequest.RandomEncryKey)
  return randomencrykey_ != NULL ? *randomencrykey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* GetVoicePrintResourceRsaRequest::mutable_randomencrykey() {
  set_has_randomencrykey();
  if (randomencrykey_ == NULL) {
    randomencrykey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRsaRequest.RandomEncryKey)
  return randomencrykey_;
}
::micromsg::SKBuiltinBuffer_t* GetVoicePrintResourceRsaRequest::release_randomencrykey() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRsaRequest.RandomEncryKey)
  clear_has_randomencrykey();
  ::micromsg::SKBuiltinBuffer_t* temp = randomencrykey_;
  randomencrykey_ = NULL;
  return temp;
}
void GetVoicePrintResourceRsaRequest::set_allocated_randomencrykey(::micromsg::SKBuiltinBuffer_t* randomencrykey) {
  delete randomencrykey_;
  randomencrykey_ = randomencrykey;
  if (randomencrykey) {
    set_has_randomencrykey();
  } else {
    clear_has_randomencrykey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRsaRequest.RandomEncryKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVoicePrintResourceRsaResponse::kBaseResponseFieldNumber;
const int GetVoicePrintResourceRsaResponse::kResourceDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVoicePrintResourceRsaResponse::GetVoicePrintResourceRsaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetVoicePrintResourceRsaResponse)
}
GetVoicePrintResourceRsaResponse::GetVoicePrintResourceRsaResponse(const GetVoicePrintResourceRsaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_resourcedata()) {
    resourcedata_ = new ::micromsg::ResourceCtx(*from.resourcedata_);
  } else {
    resourcedata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetVoicePrintResourceRsaResponse)
}

void GetVoicePrintResourceRsaResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&resourcedata_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(resourcedata_));
}

GetVoicePrintResourceRsaResponse::~GetVoicePrintResourceRsaResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetVoicePrintResourceRsaResponse)
  SharedDtor();
}

void GetVoicePrintResourceRsaResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete resourcedata_;
  }
}

void GetVoicePrintResourceRsaResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVoicePrintResourceRsaResponse::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVoicePrintResourceRsaResponse& GetVoicePrintResourceRsaResponse::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetVoicePrintResourceRsaResponse* GetVoicePrintResourceRsaResponse::New(::google::protobuf::Arena* arena) const {
  GetVoicePrintResourceRsaResponse* n = new GetVoicePrintResourceRsaResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVoicePrintResourceRsaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetVoicePrintResourceRsaResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_resourcedata()) {
      GOOGLE_DCHECK(resourcedata_ != NULL);
      resourcedata_->::micromsg::ResourceCtx::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetVoicePrintResourceRsaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetVoicePrintResourceRsaResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.ResourceCtx ResourceData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resourcedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetVoicePrintResourceRsaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetVoicePrintResourceRsaResponse)
  return false;
#undef DO_
}

void GetVoicePrintResourceRsaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetVoicePrintResourceRsaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.ResourceCtx ResourceData = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resourcedata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetVoicePrintResourceRsaResponse)
}

::google::protobuf::uint8* GetVoicePrintResourceRsaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetVoicePrintResourceRsaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.ResourceCtx ResourceData = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->resourcedata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetVoicePrintResourceRsaResponse)
  return target;
}

size_t GetVoicePrintResourceRsaResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetVoicePrintResourceRsaResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_resourcedata()) {
    // required .micromsg.ResourceCtx ResourceData = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resourcedata_);
  }

  return total_size;
}
size_t GetVoicePrintResourceRsaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetVoicePrintResourceRsaResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.ResourceCtx ResourceData = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resourcedata_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVoicePrintResourceRsaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetVoicePrintResourceRsaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVoicePrintResourceRsaResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVoicePrintResourceRsaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetVoicePrintResourceRsaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetVoicePrintResourceRsaResponse)
    MergeFrom(*source);
  }
}

void GetVoicePrintResourceRsaResponse::MergeFrom(const GetVoicePrintResourceRsaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetVoicePrintResourceRsaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resourcedata()->::micromsg::ResourceCtx::MergeFrom(from.resourcedata());
    }
  }
}

void GetVoicePrintResourceRsaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetVoicePrintResourceRsaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVoicePrintResourceRsaResponse::CopyFrom(const GetVoicePrintResourceRsaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetVoicePrintResourceRsaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoicePrintResourceRsaResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_resourcedata()) {
    if (!this->resourcedata_->IsInitialized()) return false;
  }
  return true;
}

void GetVoicePrintResourceRsaResponse::Swap(GetVoicePrintResourceRsaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVoicePrintResourceRsaResponse::InternalSwap(GetVoicePrintResourceRsaResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(resourcedata_, other->resourcedata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVoicePrintResourceRsaResponse::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVoicePrintResourceRsaResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetVoicePrintResourceRsaResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetVoicePrintResourceRsaResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetVoicePrintResourceRsaResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetVoicePrintResourceRsaResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetVoicePrintResourceRsaResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetVoicePrintResourceRsaResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRsaResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetVoicePrintResourceRsaResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRsaResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetVoicePrintResourceRsaResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRsaResponse.BaseResponse)
}

// required .micromsg.ResourceCtx ResourceData = 2;
bool GetVoicePrintResourceRsaResponse::has_resourcedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetVoicePrintResourceRsaResponse::set_has_resourcedata() {
  _has_bits_[0] |= 0x00000002u;
}
void GetVoicePrintResourceRsaResponse::clear_has_resourcedata() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetVoicePrintResourceRsaResponse::clear_resourcedata() {
  if (resourcedata_ != NULL) resourcedata_->::micromsg::ResourceCtx::Clear();
  clear_has_resourcedata();
}
const ::micromsg::ResourceCtx& GetVoicePrintResourceRsaResponse::resourcedata() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaResponse.ResourceData)
  return resourcedata_ != NULL ? *resourcedata_
                         : *::micromsg::ResourceCtx::internal_default_instance();
}
::micromsg::ResourceCtx* GetVoicePrintResourceRsaResponse::mutable_resourcedata() {
  set_has_resourcedata();
  if (resourcedata_ == NULL) {
    resourcedata_ = new ::micromsg::ResourceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRsaResponse.ResourceData)
  return resourcedata_;
}
::micromsg::ResourceCtx* GetVoicePrintResourceRsaResponse::release_resourcedata() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRsaResponse.ResourceData)
  clear_has_resourcedata();
  ::micromsg::ResourceCtx* temp = resourcedata_;
  resourcedata_ = NULL;
  return temp;
}
void GetVoicePrintResourceRsaResponse::set_allocated_resourcedata(::micromsg::ResourceCtx* resourcedata) {
  delete resourcedata_;
  resourcedata_ = resourcedata;
  if (resourcedata) {
    set_has_resourcedata();
  } else {
    clear_has_resourcedata();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRsaResponse.ResourceData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterVoicePrintRequest::kBaseRequestFieldNumber;
const int RegisterVoicePrintRequest::kStepFieldNumber;
const int RegisterVoicePrintRequest::kVoiceTicketFieldNumber;
const int RegisterVoicePrintRequest::kPieceDataFieldNumber;
const int RegisterVoicePrintRequest::kResIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterVoicePrintRequest::RegisterVoicePrintRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RegisterVoicePrintRequest)
}
RegisterVoicePrintRequest::RegisterVoicePrintRequest(const RegisterVoicePrintRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_piecedata()) {
    piecedata_ = new ::micromsg::VoicePieceCtx(*from.piecedata_);
  } else {
    piecedata_ = NULL;
  }
  ::memcpy(&step_, &from.step_,
    reinterpret_cast<char*>(&resid_) -
    reinterpret_cast<char*>(&step_) + sizeof(resid_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RegisterVoicePrintRequest)
}

void RegisterVoicePrintRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&resid_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(resid_));
}

RegisterVoicePrintRequest::~RegisterVoicePrintRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RegisterVoicePrintRequest)
  SharedDtor();
}

void RegisterVoicePrintRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete piecedata_;
  }
}

void RegisterVoicePrintRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterVoicePrintRequest::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterVoicePrintRequest& RegisterVoicePrintRequest::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterVoicePrintRequest* RegisterVoicePrintRequest::New(::google::protobuf::Arena* arena) const {
  RegisterVoicePrintRequest* n = new RegisterVoicePrintRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterVoicePrintRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RegisterVoicePrintRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_piecedata()) {
      GOOGLE_DCHECK(piecedata_ != NULL);
      piecedata_->::micromsg::VoicePieceCtx::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&step_, 0, reinterpret_cast<char*>(&resid_) -
      reinterpret_cast<char*>(&step_) + sizeof(resid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterVoicePrintRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RegisterVoicePrintRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Step = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_step();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 VoiceTicket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_voiceticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &voiceticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.VoicePieceCtx PieceData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_piecedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ResId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_resid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RegisterVoicePrintRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RegisterVoicePrintRequest)
  return false;
#undef DO_
}

void RegisterVoicePrintRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RegisterVoicePrintRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 Step = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->step(), output);
  }

  // required uint32 VoiceTicket = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->voiceticket(), output);
  }

  // required .micromsg.VoicePieceCtx PieceData = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->piecedata_, output);
  }

  // required uint32 ResId = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->resid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RegisterVoicePrintRequest)
}

::google::protobuf::uint8* RegisterVoicePrintRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RegisterVoicePrintRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 Step = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->step(), target);
  }

  // required uint32 VoiceTicket = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->voiceticket(), target);
  }

  // required .micromsg.VoicePieceCtx PieceData = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->piecedata_, deterministic, target);
  }

  // required uint32 ResId = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->resid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RegisterVoicePrintRequest)
  return target;
}

size_t RegisterVoicePrintRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RegisterVoicePrintRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_piecedata()) {
    // required .micromsg.VoicePieceCtx PieceData = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->piecedata_);
  }

  if (has_step()) {
    // required uint32 Step = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->step());
  }

  if (has_voiceticket()) {
    // required uint32 VoiceTicket = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());
  }

  if (has_resid()) {
    // required uint32 ResId = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resid());
  }

  return total_size;
}
size_t RegisterVoicePrintRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RegisterVoicePrintRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.VoicePieceCtx PieceData = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->piecedata_);

    // required uint32 Step = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->step());

    // required uint32 VoiceTicket = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());

    // required uint32 ResId = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterVoicePrintRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RegisterVoicePrintRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterVoicePrintRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterVoicePrintRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RegisterVoicePrintRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RegisterVoicePrintRequest)
    MergeFrom(*source);
  }
}

void RegisterVoicePrintRequest::MergeFrom(const RegisterVoicePrintRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RegisterVoicePrintRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_piecedata()->::micromsg::VoicePieceCtx::MergeFrom(from.piecedata());
    }
    if (cached_has_bits & 0x00000004u) {
      step_ = from.step_;
    }
    if (cached_has_bits & 0x00000008u) {
      voiceticket_ = from.voiceticket_;
    }
    if (cached_has_bits & 0x00000010u) {
      resid_ = from.resid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RegisterVoicePrintRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RegisterVoicePrintRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterVoicePrintRequest::CopyFrom(const RegisterVoicePrintRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RegisterVoicePrintRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterVoicePrintRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_piecedata()) {
    if (!this->piecedata_->IsInitialized()) return false;
  }
  return true;
}

void RegisterVoicePrintRequest::Swap(RegisterVoicePrintRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterVoicePrintRequest::InternalSwap(RegisterVoicePrintRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(piecedata_, other->piecedata_);
  std::swap(step_, other->step_);
  std::swap(voiceticket_, other->voiceticket_);
  std::swap(resid_, other->resid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterVoicePrintRequest::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterVoicePrintRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RegisterVoicePrintRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegisterVoicePrintRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void RegisterVoicePrintRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegisterVoicePrintRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RegisterVoicePrintRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RegisterVoicePrintRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RegisterVoicePrintRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RegisterVoicePrintRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RegisterVoicePrintRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RegisterVoicePrintRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RegisterVoicePrintRequest.BaseRequest)
}

// required uint32 Step = 2;
bool RegisterVoicePrintRequest::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RegisterVoicePrintRequest::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
void RegisterVoicePrintRequest::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
void RegisterVoicePrintRequest::clear_step() {
  step_ = 0u;
  clear_has_step();
}
::google::protobuf::uint32 RegisterVoicePrintRequest::step() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintRequest.Step)
  return step_;
}
void RegisterVoicePrintRequest::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintRequest.Step)
}

// required uint32 VoiceTicket = 3;
bool RegisterVoicePrintRequest::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RegisterVoicePrintRequest::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000008u;
}
void RegisterVoicePrintRequest::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000008u;
}
void RegisterVoicePrintRequest::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
::google::protobuf::uint32 RegisterVoicePrintRequest::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintRequest.VoiceTicket)
  return voiceticket_;
}
void RegisterVoicePrintRequest::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintRequest.VoiceTicket)
}

// required .micromsg.VoicePieceCtx PieceData = 4;
bool RegisterVoicePrintRequest::has_piecedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RegisterVoicePrintRequest::set_has_piecedata() {
  _has_bits_[0] |= 0x00000002u;
}
void RegisterVoicePrintRequest::clear_has_piecedata() {
  _has_bits_[0] &= ~0x00000002u;
}
void RegisterVoicePrintRequest::clear_piecedata() {
  if (piecedata_ != NULL) piecedata_->::micromsg::VoicePieceCtx::Clear();
  clear_has_piecedata();
}
const ::micromsg::VoicePieceCtx& RegisterVoicePrintRequest::piecedata() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintRequest.PieceData)
  return piecedata_ != NULL ? *piecedata_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
::micromsg::VoicePieceCtx* RegisterVoicePrintRequest::mutable_piecedata() {
  set_has_piecedata();
  if (piecedata_ == NULL) {
    piecedata_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RegisterVoicePrintRequest.PieceData)
  return piecedata_;
}
::micromsg::VoicePieceCtx* RegisterVoicePrintRequest::release_piecedata() {
  // @@protoc_insertion_point(field_release:micromsg.RegisterVoicePrintRequest.PieceData)
  clear_has_piecedata();
  ::micromsg::VoicePieceCtx* temp = piecedata_;
  piecedata_ = NULL;
  return temp;
}
void RegisterVoicePrintRequest::set_allocated_piecedata(::micromsg::VoicePieceCtx* piecedata) {
  delete piecedata_;
  piecedata_ = piecedata;
  if (piecedata) {
    set_has_piecedata();
  } else {
    clear_has_piecedata();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RegisterVoicePrintRequest.PieceData)
}

// required uint32 ResId = 5;
bool RegisterVoicePrintRequest::has_resid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RegisterVoicePrintRequest::set_has_resid() {
  _has_bits_[0] |= 0x00000010u;
}
void RegisterVoicePrintRequest::clear_has_resid() {
  _has_bits_[0] &= ~0x00000010u;
}
void RegisterVoicePrintRequest::clear_resid() {
  resid_ = 0u;
  clear_has_resid();
}
::google::protobuf::uint32 RegisterVoicePrintRequest::resid() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintRequest.ResId)
  return resid_;
}
void RegisterVoicePrintRequest::set_resid(::google::protobuf::uint32 value) {
  set_has_resid();
  resid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintRequest.ResId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterVoicePrintResponse::kBaseResponseFieldNumber;
const int RegisterVoicePrintResponse::kResgisterRetFieldNumber;
const int RegisterVoicePrintResponse::kNextStepFieldNumber;
const int RegisterVoicePrintResponse::kNextPieceFieldNumber;
const int RegisterVoicePrintResponse::kVoiceTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterVoicePrintResponse::RegisterVoicePrintResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RegisterVoicePrintResponse)
}
RegisterVoicePrintResponse::RegisterVoicePrintResponse(const RegisterVoicePrintResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_nextpiece()) {
    nextpiece_ = new ::micromsg::VoicePieceCtx(*from.nextpiece_);
  } else {
    nextpiece_ = NULL;
  }
  ::memcpy(&resgisterret_, &from.resgisterret_,
    reinterpret_cast<char*>(&voiceticket_) -
    reinterpret_cast<char*>(&resgisterret_) + sizeof(voiceticket_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RegisterVoicePrintResponse)
}

void RegisterVoicePrintResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&voiceticket_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(voiceticket_));
}

RegisterVoicePrintResponse::~RegisterVoicePrintResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RegisterVoicePrintResponse)
  SharedDtor();
}

void RegisterVoicePrintResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete nextpiece_;
  }
}

void RegisterVoicePrintResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterVoicePrintResponse::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterVoicePrintResponse& RegisterVoicePrintResponse::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterVoicePrintResponse* RegisterVoicePrintResponse::New(::google::protobuf::Arena* arena) const {
  RegisterVoicePrintResponse* n = new RegisterVoicePrintResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterVoicePrintResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RegisterVoicePrintResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_nextpiece()) {
      GOOGLE_DCHECK(nextpiece_ != NULL);
      nextpiece_->::micromsg::VoicePieceCtx::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&resgisterret_, 0, reinterpret_cast<char*>(&voiceticket_) -
      reinterpret_cast<char*>(&resgisterret_) + sizeof(voiceticket_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterVoicePrintResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RegisterVoicePrintResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ResgisterRet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_resgisterret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resgisterret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 NextStep = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_nextstep();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextstep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.VoicePieceCtx NextPiece = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nextpiece()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 VoiceTicket = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_voiceticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &voiceticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RegisterVoicePrintResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RegisterVoicePrintResponse)
  return false;
#undef DO_
}

void RegisterVoicePrintResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RegisterVoicePrintResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required int32 ResgisterRet = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->resgisterret(), output);
  }

  // required uint32 NextStep = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nextstep(), output);
  }

  // required .micromsg.VoicePieceCtx NextPiece = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->nextpiece_, output);
  }

  // required uint32 VoiceTicket = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->voiceticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RegisterVoicePrintResponse)
}

::google::protobuf::uint8* RegisterVoicePrintResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RegisterVoicePrintResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required int32 ResgisterRet = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->resgisterret(), target);
  }

  // required uint32 NextStep = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->nextstep(), target);
  }

  // required .micromsg.VoicePieceCtx NextPiece = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->nextpiece_, deterministic, target);
  }

  // required uint32 VoiceTicket = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->voiceticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RegisterVoicePrintResponse)
  return target;
}

size_t RegisterVoicePrintResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RegisterVoicePrintResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_nextpiece()) {
    // required .micromsg.VoicePieceCtx NextPiece = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nextpiece_);
  }

  if (has_resgisterret()) {
    // required int32 ResgisterRet = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resgisterret());
  }

  if (has_nextstep()) {
    // required uint32 NextStep = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nextstep());
  }

  if (has_voiceticket()) {
    // required uint32 VoiceTicket = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());
  }

  return total_size;
}
size_t RegisterVoicePrintResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RegisterVoicePrintResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.VoicePieceCtx NextPiece = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nextpiece_);

    // required int32 ResgisterRet = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resgisterret());

    // required uint32 NextStep = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nextstep());

    // required uint32 VoiceTicket = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterVoicePrintResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RegisterVoicePrintResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterVoicePrintResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterVoicePrintResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RegisterVoicePrintResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RegisterVoicePrintResponse)
    MergeFrom(*source);
  }
}

void RegisterVoicePrintResponse::MergeFrom(const RegisterVoicePrintResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RegisterVoicePrintResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_nextpiece()->::micromsg::VoicePieceCtx::MergeFrom(from.nextpiece());
    }
    if (cached_has_bits & 0x00000004u) {
      resgisterret_ = from.resgisterret_;
    }
    if (cached_has_bits & 0x00000008u) {
      nextstep_ = from.nextstep_;
    }
    if (cached_has_bits & 0x00000010u) {
      voiceticket_ = from.voiceticket_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RegisterVoicePrintResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RegisterVoicePrintResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterVoicePrintResponse::CopyFrom(const RegisterVoicePrintResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RegisterVoicePrintResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterVoicePrintResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_nextpiece()) {
    if (!this->nextpiece_->IsInitialized()) return false;
  }
  return true;
}

void RegisterVoicePrintResponse::Swap(RegisterVoicePrintResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterVoicePrintResponse::InternalSwap(RegisterVoicePrintResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(nextpiece_, other->nextpiece_);
  std::swap(resgisterret_, other->resgisterret_);
  std::swap(nextstep_, other->nextstep_);
  std::swap(voiceticket_, other->voiceticket_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterVoicePrintResponse::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterVoicePrintResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool RegisterVoicePrintResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegisterVoicePrintResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void RegisterVoicePrintResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegisterVoicePrintResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RegisterVoicePrintResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RegisterVoicePrintResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RegisterVoicePrintResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RegisterVoicePrintResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RegisterVoicePrintResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RegisterVoicePrintResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RegisterVoicePrintResponse.BaseResponse)
}

// required int32 ResgisterRet = 2;
bool RegisterVoicePrintResponse::has_resgisterret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RegisterVoicePrintResponse::set_has_resgisterret() {
  _has_bits_[0] |= 0x00000004u;
}
void RegisterVoicePrintResponse::clear_has_resgisterret() {
  _has_bits_[0] &= ~0x00000004u;
}
void RegisterVoicePrintResponse::clear_resgisterret() {
  resgisterret_ = 0;
  clear_has_resgisterret();
}
::google::protobuf::int32 RegisterVoicePrintResponse::resgisterret() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintResponse.ResgisterRet)
  return resgisterret_;
}
void RegisterVoicePrintResponse::set_resgisterret(::google::protobuf::int32 value) {
  set_has_resgisterret();
  resgisterret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintResponse.ResgisterRet)
}

// required uint32 NextStep = 3;
bool RegisterVoicePrintResponse::has_nextstep() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RegisterVoicePrintResponse::set_has_nextstep() {
  _has_bits_[0] |= 0x00000008u;
}
void RegisterVoicePrintResponse::clear_has_nextstep() {
  _has_bits_[0] &= ~0x00000008u;
}
void RegisterVoicePrintResponse::clear_nextstep() {
  nextstep_ = 0u;
  clear_has_nextstep();
}
::google::protobuf::uint32 RegisterVoicePrintResponse::nextstep() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintResponse.NextStep)
  return nextstep_;
}
void RegisterVoicePrintResponse::set_nextstep(::google::protobuf::uint32 value) {
  set_has_nextstep();
  nextstep_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintResponse.NextStep)
}

// required .micromsg.VoicePieceCtx NextPiece = 4;
bool RegisterVoicePrintResponse::has_nextpiece() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RegisterVoicePrintResponse::set_has_nextpiece() {
  _has_bits_[0] |= 0x00000002u;
}
void RegisterVoicePrintResponse::clear_has_nextpiece() {
  _has_bits_[0] &= ~0x00000002u;
}
void RegisterVoicePrintResponse::clear_nextpiece() {
  if (nextpiece_ != NULL) nextpiece_->::micromsg::VoicePieceCtx::Clear();
  clear_has_nextpiece();
}
const ::micromsg::VoicePieceCtx& RegisterVoicePrintResponse::nextpiece() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintResponse.NextPiece)
  return nextpiece_ != NULL ? *nextpiece_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
::micromsg::VoicePieceCtx* RegisterVoicePrintResponse::mutable_nextpiece() {
  set_has_nextpiece();
  if (nextpiece_ == NULL) {
    nextpiece_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RegisterVoicePrintResponse.NextPiece)
  return nextpiece_;
}
::micromsg::VoicePieceCtx* RegisterVoicePrintResponse::release_nextpiece() {
  // @@protoc_insertion_point(field_release:micromsg.RegisterVoicePrintResponse.NextPiece)
  clear_has_nextpiece();
  ::micromsg::VoicePieceCtx* temp = nextpiece_;
  nextpiece_ = NULL;
  return temp;
}
void RegisterVoicePrintResponse::set_allocated_nextpiece(::micromsg::VoicePieceCtx* nextpiece) {
  delete nextpiece_;
  nextpiece_ = nextpiece;
  if (nextpiece) {
    set_has_nextpiece();
  } else {
    clear_has_nextpiece();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RegisterVoicePrintResponse.NextPiece)
}

// required uint32 VoiceTicket = 5;
bool RegisterVoicePrintResponse::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RegisterVoicePrintResponse::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000010u;
}
void RegisterVoicePrintResponse::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000010u;
}
void RegisterVoicePrintResponse::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
::google::protobuf::uint32 RegisterVoicePrintResponse::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintResponse.VoiceTicket)
  return voiceticket_;
}
void RegisterVoicePrintResponse::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintResponse.VoiceTicket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVoicePrintRequest::kBaseRequestFieldNumber;
const int VerifyVoicePrintRequest::kPieceFieldNumber;
const int VerifyVoicePrintRequest::kVoiceTicketFieldNumber;
const int VerifyVoicePrintRequest::kResIdFieldNumber;
const int VerifyVoicePrintRequest::kVerifyTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVoicePrintRequest::VerifyVoicePrintRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.VerifyVoicePrintRequest)
}
VerifyVoicePrintRequest::VerifyVoicePrintRequest(const VerifyVoicePrintRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  verifyticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verifyticket()) {
    verifyticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyticket_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_piece()) {
    piece_ = new ::micromsg::VoicePieceCtx(*from.piece_);
  } else {
    piece_ = NULL;
  }
  ::memcpy(&voiceticket_, &from.voiceticket_,
    reinterpret_cast<char*>(&resid_) -
    reinterpret_cast<char*>(&voiceticket_) + sizeof(resid_));
  // @@protoc_insertion_point(copy_constructor:micromsg.VerifyVoicePrintRequest)
}

void VerifyVoicePrintRequest::SharedCtor() {
  _cached_size_ = 0;
  verifyticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&resid_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(resid_));
}

VerifyVoicePrintRequest::~VerifyVoicePrintRequest() {
  // @@protoc_insertion_point(destructor:micromsg.VerifyVoicePrintRequest)
  SharedDtor();
}

void VerifyVoicePrintRequest::SharedDtor() {
  verifyticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete piece_;
  }
}

void VerifyVoicePrintRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyVoicePrintRequest::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVoicePrintRequest& VerifyVoicePrintRequest::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyVoicePrintRequest* VerifyVoicePrintRequest::New(::google::protobuf::Arena* arena) const {
  VerifyVoicePrintRequest* n = new VerifyVoicePrintRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyVoicePrintRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.VerifyVoicePrintRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_verifyticket()) {
      GOOGLE_DCHECK(!verifyticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*verifyticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_piece()) {
      GOOGLE_DCHECK(piece_ != NULL);
      piece_->::micromsg::VoicePieceCtx::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&voiceticket_, 0, reinterpret_cast<char*>(&resid_) -
      reinterpret_cast<char*>(&voiceticket_) + sizeof(resid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVoicePrintRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.VerifyVoicePrintRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.VoicePieceCtx Piece = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_piece()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 VoiceTicket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_voiceticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &voiceticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ResId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_resid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string VerifyTicket = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifyticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verifyticket().data(), this->verifyticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.VerifyVoicePrintRequest.VerifyTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.VerifyVoicePrintRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.VerifyVoicePrintRequest)
  return false;
#undef DO_
}

void VerifyVoicePrintRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.VerifyVoicePrintRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required .micromsg.VoicePieceCtx Piece = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->piece_, output);
  }

  // required uint32 VoiceTicket = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->voiceticket(), output);
  }

  // required uint32 ResId = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->resid(), output);
  }

  // optional string VerifyTicket = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyticket().data(), this->verifyticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.VerifyVoicePrintRequest.VerifyTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->verifyticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.VerifyVoicePrintRequest)
}

::google::protobuf::uint8* VerifyVoicePrintRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.VerifyVoicePrintRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required .micromsg.VoicePieceCtx Piece = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->piece_, deterministic, target);
  }

  // required uint32 VoiceTicket = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->voiceticket(), target);
  }

  // required uint32 ResId = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->resid(), target);
  }

  // optional string VerifyTicket = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyticket().data(), this->verifyticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.VerifyVoicePrintRequest.VerifyTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->verifyticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.VerifyVoicePrintRequest)
  return target;
}

size_t VerifyVoicePrintRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.VerifyVoicePrintRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_piece()) {
    // required .micromsg.VoicePieceCtx Piece = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->piece_);
  }

  if (has_voiceticket()) {
    // required uint32 VoiceTicket = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());
  }

  if (has_resid()) {
    // required uint32 ResId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resid());
  }

  return total_size;
}
size_t VerifyVoicePrintRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.VerifyVoicePrintRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001e) ^ 0x0000001e) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.VoicePieceCtx Piece = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->piece_);

    // required uint32 VoiceTicket = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());

    // required uint32 ResId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string VerifyTicket = 5;
  if (has_verifyticket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verifyticket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyVoicePrintRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.VerifyVoicePrintRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVoicePrintRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVoicePrintRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.VerifyVoicePrintRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.VerifyVoicePrintRequest)
    MergeFrom(*source);
  }
}

void VerifyVoicePrintRequest::MergeFrom(const VerifyVoicePrintRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.VerifyVoicePrintRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_verifyticket();
      verifyticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_piece()->::micromsg::VoicePieceCtx::MergeFrom(from.piece());
    }
    if (cached_has_bits & 0x00000008u) {
      voiceticket_ = from.voiceticket_;
    }
    if (cached_has_bits & 0x00000010u) {
      resid_ = from.resid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyVoicePrintRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.VerifyVoicePrintRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVoicePrintRequest::CopyFrom(const VerifyVoicePrintRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.VerifyVoicePrintRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVoicePrintRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_piece()) {
    if (!this->piece_->IsInitialized()) return false;
  }
  return true;
}

void VerifyVoicePrintRequest::Swap(VerifyVoicePrintRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVoicePrintRequest::InternalSwap(VerifyVoicePrintRequest* other) {
  verifyticket_.Swap(&other->verifyticket_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(piece_, other->piece_);
  std::swap(voiceticket_, other->voiceticket_);
  std::swap(resid_, other->resid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyVoicePrintRequest::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyVoicePrintRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool VerifyVoicePrintRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyVoicePrintRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyVoicePrintRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyVoicePrintRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& VerifyVoicePrintRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* VerifyVoicePrintRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* VerifyVoicePrintRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void VerifyVoicePrintRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRequest.BaseRequest)
}

// required .micromsg.VoicePieceCtx Piece = 2;
bool VerifyVoicePrintRequest::has_piece() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VerifyVoicePrintRequest::set_has_piece() {
  _has_bits_[0] |= 0x00000004u;
}
void VerifyVoicePrintRequest::clear_has_piece() {
  _has_bits_[0] &= ~0x00000004u;
}
void VerifyVoicePrintRequest::clear_piece() {
  if (piece_ != NULL) piece_->::micromsg::VoicePieceCtx::Clear();
  clear_has_piece();
}
const ::micromsg::VoicePieceCtx& VerifyVoicePrintRequest::piece() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRequest.Piece)
  return piece_ != NULL ? *piece_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
::micromsg::VoicePieceCtx* VerifyVoicePrintRequest::mutable_piece() {
  set_has_piece();
  if (piece_ == NULL) {
    piece_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRequest.Piece)
  return piece_;
}
::micromsg::VoicePieceCtx* VerifyVoicePrintRequest::release_piece() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRequest.Piece)
  clear_has_piece();
  ::micromsg::VoicePieceCtx* temp = piece_;
  piece_ = NULL;
  return temp;
}
void VerifyVoicePrintRequest::set_allocated_piece(::micromsg::VoicePieceCtx* piece) {
  delete piece_;
  piece_ = piece;
  if (piece) {
    set_has_piece();
  } else {
    clear_has_piece();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRequest.Piece)
}

// required uint32 VoiceTicket = 3;
bool VerifyVoicePrintRequest::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VerifyVoicePrintRequest::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000008u;
}
void VerifyVoicePrintRequest::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000008u;
}
void VerifyVoicePrintRequest::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
::google::protobuf::uint32 VerifyVoicePrintRequest::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRequest.VoiceTicket)
  return voiceticket_;
}
void VerifyVoicePrintRequest::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRequest.VoiceTicket)
}

// required uint32 ResId = 4;
bool VerifyVoicePrintRequest::has_resid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void VerifyVoicePrintRequest::set_has_resid() {
  _has_bits_[0] |= 0x00000010u;
}
void VerifyVoicePrintRequest::clear_has_resid() {
  _has_bits_[0] &= ~0x00000010u;
}
void VerifyVoicePrintRequest::clear_resid() {
  resid_ = 0u;
  clear_has_resid();
}
::google::protobuf::uint32 VerifyVoicePrintRequest::resid() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRequest.ResId)
  return resid_;
}
void VerifyVoicePrintRequest::set_resid(::google::protobuf::uint32 value) {
  set_has_resid();
  resid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRequest.ResId)
}

// optional string VerifyTicket = 5;
bool VerifyVoicePrintRequest::has_verifyticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyVoicePrintRequest::set_has_verifyticket() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyVoicePrintRequest::clear_has_verifyticket() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyVoicePrintRequest::clear_verifyticket() {
  verifyticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyticket();
}
const ::std::string& VerifyVoicePrintRequest::verifyticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRequest.VerifyTicket)
  return verifyticket_.GetNoArena();
}
void VerifyVoicePrintRequest::set_verifyticket(const ::std::string& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRequest.VerifyTicket)
}
#if LANG_CXX11
void VerifyVoicePrintRequest::set_verifyticket(::std::string&& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VerifyVoicePrintRequest.VerifyTicket)
}
#endif
void VerifyVoicePrintRequest::set_verifyticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VerifyVoicePrintRequest.VerifyTicket)
}
void VerifyVoicePrintRequest::set_verifyticket(const char* value, size_t size) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VerifyVoicePrintRequest.VerifyTicket)
}
::std::string* VerifyVoicePrintRequest::mutable_verifyticket() {
  set_has_verifyticket();
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRequest.VerifyTicket)
  return verifyticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyVoicePrintRequest::release_verifyticket() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRequest.VerifyTicket)
  clear_has_verifyticket();
  return verifyticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyVoicePrintRequest::set_allocated_verifyticket(::std::string* verifyticket) {
  if (verifyticket != NULL) {
    set_has_verifyticket();
  } else {
    clear_has_verifyticket();
  }
  verifyticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRequest.VerifyTicket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVoicePrintResponse::kBaseResponseFieldNumber;
const int VerifyVoicePrintResponse::kNextPieceFieldNumber;
const int VerifyVoicePrintResponse::kResultFieldNumber;
const int VerifyVoicePrintResponse::kVoiceTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVoicePrintResponse::VerifyVoicePrintResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.VerifyVoicePrintResponse)
}
VerifyVoicePrintResponse::VerifyVoicePrintResponse(const VerifyVoicePrintResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_nextpiece()) {
    nextpiece_ = new ::micromsg::VoicePieceCtx(*from.nextpiece_);
  } else {
    nextpiece_ = NULL;
  }
  ::memcpy(&result_, &from.result_,
    reinterpret_cast<char*>(&voiceticket_) -
    reinterpret_cast<char*>(&result_) + sizeof(voiceticket_));
  // @@protoc_insertion_point(copy_constructor:micromsg.VerifyVoicePrintResponse)
}

void VerifyVoicePrintResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&voiceticket_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(voiceticket_));
}

VerifyVoicePrintResponse::~VerifyVoicePrintResponse() {
  // @@protoc_insertion_point(destructor:micromsg.VerifyVoicePrintResponse)
  SharedDtor();
}

void VerifyVoicePrintResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete nextpiece_;
  }
}

void VerifyVoicePrintResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyVoicePrintResponse::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVoicePrintResponse& VerifyVoicePrintResponse::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyVoicePrintResponse* VerifyVoicePrintResponse::New(::google::protobuf::Arena* arena) const {
  VerifyVoicePrintResponse* n = new VerifyVoicePrintResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyVoicePrintResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.VerifyVoicePrintResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_nextpiece()) {
      GOOGLE_DCHECK(nextpiece_ != NULL);
      nextpiece_->::micromsg::VoicePieceCtx::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&result_, 0, reinterpret_cast<char*>(&voiceticket_) -
      reinterpret_cast<char*>(&result_) + sizeof(voiceticket_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVoicePrintResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.VerifyVoicePrintResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.VoicePieceCtx NextPiece = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nextpiece()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 VoiceTicket = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_voiceticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &voiceticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.VerifyVoicePrintResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.VerifyVoicePrintResponse)
  return false;
#undef DO_
}

void VerifyVoicePrintResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.VerifyVoicePrintResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.VoicePieceCtx NextPiece = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->nextpiece_, output);
  }

  // required uint32 Result = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->result(), output);
  }

  // required uint32 VoiceTicket = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->voiceticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.VerifyVoicePrintResponse)
}

::google::protobuf::uint8* VerifyVoicePrintResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.VerifyVoicePrintResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.VoicePieceCtx NextPiece = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->nextpiece_, deterministic, target);
  }

  // required uint32 Result = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->result(), target);
  }

  // required uint32 VoiceTicket = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->voiceticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.VerifyVoicePrintResponse)
  return target;
}

size_t VerifyVoicePrintResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.VerifyVoicePrintResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_nextpiece()) {
    // required .micromsg.VoicePieceCtx NextPiece = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nextpiece_);
  }

  if (has_result()) {
    // required uint32 Result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  if (has_voiceticket()) {
    // required uint32 VoiceTicket = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());
  }

  return total_size;
}
size_t VerifyVoicePrintResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.VerifyVoicePrintResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.VoicePieceCtx NextPiece = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nextpiece_);

    // required uint32 Result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());

    // required uint32 VoiceTicket = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyVoicePrintResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.VerifyVoicePrintResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVoicePrintResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVoicePrintResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.VerifyVoicePrintResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.VerifyVoicePrintResponse)
    MergeFrom(*source);
  }
}

void VerifyVoicePrintResponse::MergeFrom(const VerifyVoicePrintResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.VerifyVoicePrintResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_nextpiece()->::micromsg::VoicePieceCtx::MergeFrom(from.nextpiece());
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000008u) {
      voiceticket_ = from.voiceticket_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyVoicePrintResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.VerifyVoicePrintResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVoicePrintResponse::CopyFrom(const VerifyVoicePrintResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.VerifyVoicePrintResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVoicePrintResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_nextpiece()) {
    if (!this->nextpiece_->IsInitialized()) return false;
  }
  return true;
}

void VerifyVoicePrintResponse::Swap(VerifyVoicePrintResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVoicePrintResponse::InternalSwap(VerifyVoicePrintResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(nextpiece_, other->nextpiece_);
  std::swap(result_, other->result_);
  std::swap(voiceticket_, other->voiceticket_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyVoicePrintResponse::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyVoicePrintResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool VerifyVoicePrintResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyVoicePrintResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyVoicePrintResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyVoicePrintResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& VerifyVoicePrintResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* VerifyVoicePrintResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* VerifyVoicePrintResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void VerifyVoicePrintResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintResponse.BaseResponse)
}

// required .micromsg.VoicePieceCtx NextPiece = 2;
bool VerifyVoicePrintResponse::has_nextpiece() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyVoicePrintResponse::set_has_nextpiece() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyVoicePrintResponse::clear_has_nextpiece() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyVoicePrintResponse::clear_nextpiece() {
  if (nextpiece_ != NULL) nextpiece_->::micromsg::VoicePieceCtx::Clear();
  clear_has_nextpiece();
}
const ::micromsg::VoicePieceCtx& VerifyVoicePrintResponse::nextpiece() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintResponse.NextPiece)
  return nextpiece_ != NULL ? *nextpiece_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
::micromsg::VoicePieceCtx* VerifyVoicePrintResponse::mutable_nextpiece() {
  set_has_nextpiece();
  if (nextpiece_ == NULL) {
    nextpiece_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintResponse.NextPiece)
  return nextpiece_;
}
::micromsg::VoicePieceCtx* VerifyVoicePrintResponse::release_nextpiece() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintResponse.NextPiece)
  clear_has_nextpiece();
  ::micromsg::VoicePieceCtx* temp = nextpiece_;
  nextpiece_ = NULL;
  return temp;
}
void VerifyVoicePrintResponse::set_allocated_nextpiece(::micromsg::VoicePieceCtx* nextpiece) {
  delete nextpiece_;
  nextpiece_ = nextpiece;
  if (nextpiece) {
    set_has_nextpiece();
  } else {
    clear_has_nextpiece();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintResponse.NextPiece)
}

// required uint32 Result = 3;
bool VerifyVoicePrintResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VerifyVoicePrintResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void VerifyVoicePrintResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void VerifyVoicePrintResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
::google::protobuf::uint32 VerifyVoicePrintResponse::result() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintResponse.Result)
  return result_;
}
void VerifyVoicePrintResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintResponse.Result)
}

// required uint32 VoiceTicket = 4;
bool VerifyVoicePrintResponse::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VerifyVoicePrintResponse::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000008u;
}
void VerifyVoicePrintResponse::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000008u;
}
void VerifyVoicePrintResponse::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
::google::protobuf::uint32 VerifyVoicePrintResponse::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintResponse.VoiceTicket)
  return voiceticket_;
}
void VerifyVoicePrintResponse::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintResponse.VoiceTicket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVoicePrintRsaRequest::kBaseRequestFieldNumber;
const int VerifyVoicePrintRsaRequest::kPieceFieldNumber;
const int VerifyVoicePrintRsaRequest::kVoiceTicketFieldNumber;
const int VerifyVoicePrintRsaRequest::kResIdFieldNumber;
const int VerifyVoicePrintRsaRequest::kVerifyTicketFieldNumber;
const int VerifyVoicePrintRsaRequest::kRandomEncryKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVoicePrintRsaRequest::VerifyVoicePrintRsaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.VerifyVoicePrintRsaRequest)
}
VerifyVoicePrintRsaRequest::VerifyVoicePrintRsaRequest(const VerifyVoicePrintRsaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  verifyticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verifyticket()) {
    verifyticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyticket_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_piece()) {
    piece_ = new ::micromsg::VoicePieceCtx(*from.piece_);
  } else {
    piece_ = NULL;
  }
  if (from.has_randomencrykey()) {
    randomencrykey_ = new ::micromsg::SKBuiltinBuffer_t(*from.randomencrykey_);
  } else {
    randomencrykey_ = NULL;
  }
  ::memcpy(&voiceticket_, &from.voiceticket_,
    reinterpret_cast<char*>(&resid_) -
    reinterpret_cast<char*>(&voiceticket_) + sizeof(resid_));
  // @@protoc_insertion_point(copy_constructor:micromsg.VerifyVoicePrintRsaRequest)
}

void VerifyVoicePrintRsaRequest::SharedCtor() {
  _cached_size_ = 0;
  verifyticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&resid_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(resid_));
}

VerifyVoicePrintRsaRequest::~VerifyVoicePrintRsaRequest() {
  // @@protoc_insertion_point(destructor:micromsg.VerifyVoicePrintRsaRequest)
  SharedDtor();
}

void VerifyVoicePrintRsaRequest::SharedDtor() {
  verifyticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete piece_;
  }
  if (this != internal_default_instance()) {
    delete randomencrykey_;
  }
}

void VerifyVoicePrintRsaRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyVoicePrintRsaRequest::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVoicePrintRsaRequest& VerifyVoicePrintRsaRequest::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyVoicePrintRsaRequest* VerifyVoicePrintRsaRequest::New(::google::protobuf::Arena* arena) const {
  VerifyVoicePrintRsaRequest* n = new VerifyVoicePrintRsaRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyVoicePrintRsaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.VerifyVoicePrintRsaRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_verifyticket()) {
      GOOGLE_DCHECK(!verifyticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*verifyticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_piece()) {
      GOOGLE_DCHECK(piece_ != NULL);
      piece_->::micromsg::VoicePieceCtx::Clear();
    }
    if (has_randomencrykey()) {
      GOOGLE_DCHECK(randomencrykey_ != NULL);
      randomencrykey_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 48u) {
    ::memset(&voiceticket_, 0, reinterpret_cast<char*>(&resid_) -
      reinterpret_cast<char*>(&voiceticket_) + sizeof(resid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVoicePrintRsaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.VerifyVoicePrintRsaRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.VoicePieceCtx Piece = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_piece()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 VoiceTicket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_voiceticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &voiceticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ResId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_resid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string VerifyTicket = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifyticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verifyticket().data(), this->verifyticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.VerifyVoicePrintRsaRequest.VerifyTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_randomencrykey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.VerifyVoicePrintRsaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.VerifyVoicePrintRsaRequest)
  return false;
#undef DO_
}

void VerifyVoicePrintRsaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.VerifyVoicePrintRsaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required .micromsg.VoicePieceCtx Piece = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->piece_, output);
  }

  // required uint32 VoiceTicket = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->voiceticket(), output);
  }

  // required uint32 ResId = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->resid(), output);
  }

  // optional string VerifyTicket = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyticket().data(), this->verifyticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.VerifyVoicePrintRsaRequest.VerifyTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->verifyticket(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->randomencrykey_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.VerifyVoicePrintRsaRequest)
}

::google::protobuf::uint8* VerifyVoicePrintRsaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.VerifyVoicePrintRsaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required .micromsg.VoicePieceCtx Piece = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->piece_, deterministic, target);
  }

  // required uint32 VoiceTicket = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->voiceticket(), target);
  }

  // required uint32 ResId = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->resid(), target);
  }

  // optional string VerifyTicket = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyticket().data(), this->verifyticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.VerifyVoicePrintRsaRequest.VerifyTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->verifyticket(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->randomencrykey_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.VerifyVoicePrintRsaRequest)
  return target;
}

size_t VerifyVoicePrintRsaRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.VerifyVoicePrintRsaRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_piece()) {
    // required .micromsg.VoicePieceCtx Piece = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->piece_);
  }

  if (has_randomencrykey()) {
    // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->randomencrykey_);
  }

  if (has_voiceticket()) {
    // required uint32 VoiceTicket = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());
  }

  if (has_resid()) {
    // required uint32 ResId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resid());
  }

  return total_size;
}
size_t VerifyVoicePrintRsaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.VerifyVoicePrintRsaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003e) ^ 0x0000003e) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.VoicePieceCtx Piece = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->piece_);

    // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->randomencrykey_);

    // required uint32 VoiceTicket = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());

    // required uint32 ResId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string VerifyTicket = 5;
  if (has_verifyticket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verifyticket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyVoicePrintRsaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.VerifyVoicePrintRsaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVoicePrintRsaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVoicePrintRsaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.VerifyVoicePrintRsaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.VerifyVoicePrintRsaRequest)
    MergeFrom(*source);
  }
}

void VerifyVoicePrintRsaRequest::MergeFrom(const VerifyVoicePrintRsaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.VerifyVoicePrintRsaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_verifyticket();
      verifyticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_piece()->::micromsg::VoicePieceCtx::MergeFrom(from.piece());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_randomencrykey()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.randomencrykey());
    }
    if (cached_has_bits & 0x00000010u) {
      voiceticket_ = from.voiceticket_;
    }
    if (cached_has_bits & 0x00000020u) {
      resid_ = from.resid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyVoicePrintRsaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.VerifyVoicePrintRsaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVoicePrintRsaRequest::CopyFrom(const VerifyVoicePrintRsaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.VerifyVoicePrintRsaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVoicePrintRsaRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003e) != 0x0000003e) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_piece()) {
    if (!this->piece_->IsInitialized()) return false;
  }
  if (has_randomencrykey()) {
    if (!this->randomencrykey_->IsInitialized()) return false;
  }
  return true;
}

void VerifyVoicePrintRsaRequest::Swap(VerifyVoicePrintRsaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVoicePrintRsaRequest::InternalSwap(VerifyVoicePrintRsaRequest* other) {
  verifyticket_.Swap(&other->verifyticket_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(piece_, other->piece_);
  std::swap(randomencrykey_, other->randomencrykey_);
  std::swap(voiceticket_, other->voiceticket_);
  std::swap(resid_, other->resid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyVoicePrintRsaRequest::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyVoicePrintRsaRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool VerifyVoicePrintRsaRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyVoicePrintRsaRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyVoicePrintRsaRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyVoicePrintRsaRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& VerifyVoicePrintRsaRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* VerifyVoicePrintRsaRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* VerifyVoicePrintRsaRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void VerifyVoicePrintRsaRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaRequest.BaseRequest)
}

// required .micromsg.VoicePieceCtx Piece = 2;
bool VerifyVoicePrintRsaRequest::has_piece() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VerifyVoicePrintRsaRequest::set_has_piece() {
  _has_bits_[0] |= 0x00000004u;
}
void VerifyVoicePrintRsaRequest::clear_has_piece() {
  _has_bits_[0] &= ~0x00000004u;
}
void VerifyVoicePrintRsaRequest::clear_piece() {
  if (piece_ != NULL) piece_->::micromsg::VoicePieceCtx::Clear();
  clear_has_piece();
}
const ::micromsg::VoicePieceCtx& VerifyVoicePrintRsaRequest::piece() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.Piece)
  return piece_ != NULL ? *piece_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
::micromsg::VoicePieceCtx* VerifyVoicePrintRsaRequest::mutable_piece() {
  set_has_piece();
  if (piece_ == NULL) {
    piece_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaRequest.Piece)
  return piece_;
}
::micromsg::VoicePieceCtx* VerifyVoicePrintRsaRequest::release_piece() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaRequest.Piece)
  clear_has_piece();
  ::micromsg::VoicePieceCtx* temp = piece_;
  piece_ = NULL;
  return temp;
}
void VerifyVoicePrintRsaRequest::set_allocated_piece(::micromsg::VoicePieceCtx* piece) {
  delete piece_;
  piece_ = piece;
  if (piece) {
    set_has_piece();
  } else {
    clear_has_piece();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaRequest.Piece)
}

// required uint32 VoiceTicket = 3;
bool VerifyVoicePrintRsaRequest::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void VerifyVoicePrintRsaRequest::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000010u;
}
void VerifyVoicePrintRsaRequest::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000010u;
}
void VerifyVoicePrintRsaRequest::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
::google::protobuf::uint32 VerifyVoicePrintRsaRequest::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.VoiceTicket)
  return voiceticket_;
}
void VerifyVoicePrintRsaRequest::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaRequest.VoiceTicket)
}

// required uint32 ResId = 4;
bool VerifyVoicePrintRsaRequest::has_resid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void VerifyVoicePrintRsaRequest::set_has_resid() {
  _has_bits_[0] |= 0x00000020u;
}
void VerifyVoicePrintRsaRequest::clear_has_resid() {
  _has_bits_[0] &= ~0x00000020u;
}
void VerifyVoicePrintRsaRequest::clear_resid() {
  resid_ = 0u;
  clear_has_resid();
}
::google::protobuf::uint32 VerifyVoicePrintRsaRequest::resid() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.ResId)
  return resid_;
}
void VerifyVoicePrintRsaRequest::set_resid(::google::protobuf::uint32 value) {
  set_has_resid();
  resid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaRequest.ResId)
}

// optional string VerifyTicket = 5;
bool VerifyVoicePrintRsaRequest::has_verifyticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyVoicePrintRsaRequest::set_has_verifyticket() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyVoicePrintRsaRequest::clear_has_verifyticket() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyVoicePrintRsaRequest::clear_verifyticket() {
  verifyticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyticket();
}
const ::std::string& VerifyVoicePrintRsaRequest::verifyticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
  return verifyticket_.GetNoArena();
}
void VerifyVoicePrintRsaRequest::set_verifyticket(const ::std::string& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
}
#if LANG_CXX11
void VerifyVoicePrintRsaRequest::set_verifyticket(::std::string&& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
}
#endif
void VerifyVoicePrintRsaRequest::set_verifyticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
}
void VerifyVoicePrintRsaRequest::set_verifyticket(const char* value, size_t size) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
}
::std::string* VerifyVoicePrintRsaRequest::mutable_verifyticket() {
  set_has_verifyticket();
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
  return verifyticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyVoicePrintRsaRequest::release_verifyticket() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
  clear_has_verifyticket();
  return verifyticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyVoicePrintRsaRequest::set_allocated_verifyticket(::std::string* verifyticket) {
  if (verifyticket != NULL) {
    set_has_verifyticket();
  } else {
    clear_has_verifyticket();
  }
  verifyticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
}

// required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 6;
bool VerifyVoicePrintRsaRequest::has_randomencrykey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VerifyVoicePrintRsaRequest::set_has_randomencrykey() {
  _has_bits_[0] |= 0x00000008u;
}
void VerifyVoicePrintRsaRequest::clear_has_randomencrykey() {
  _has_bits_[0] &= ~0x00000008u;
}
void VerifyVoicePrintRsaRequest::clear_randomencrykey() {
  if (randomencrykey_ != NULL) randomencrykey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_randomencrykey();
}
const ::micromsg::SKBuiltinBuffer_t& VerifyVoicePrintRsaRequest::randomencrykey() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.RandomEncryKey)
  return randomencrykey_ != NULL ? *randomencrykey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* VerifyVoicePrintRsaRequest::mutable_randomencrykey() {
  set_has_randomencrykey();
  if (randomencrykey_ == NULL) {
    randomencrykey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaRequest.RandomEncryKey)
  return randomencrykey_;
}
::micromsg::SKBuiltinBuffer_t* VerifyVoicePrintRsaRequest::release_randomencrykey() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaRequest.RandomEncryKey)
  clear_has_randomencrykey();
  ::micromsg::SKBuiltinBuffer_t* temp = randomencrykey_;
  randomencrykey_ = NULL;
  return temp;
}
void VerifyVoicePrintRsaRequest::set_allocated_randomencrykey(::micromsg::SKBuiltinBuffer_t* randomencrykey) {
  delete randomencrykey_;
  randomencrykey_ = randomencrykey;
  if (randomencrykey) {
    set_has_randomencrykey();
  } else {
    clear_has_randomencrykey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaRequest.RandomEncryKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVoicePrintRsaResponse::kBaseResponseFieldNumber;
const int VerifyVoicePrintRsaResponse::kNextPieceFieldNumber;
const int VerifyVoicePrintRsaResponse::kResultFieldNumber;
const int VerifyVoicePrintRsaResponse::kVoiceTicketFieldNumber;
const int VerifyVoicePrintRsaResponse::kAuthPwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVoicePrintRsaResponse::VerifyVoicePrintRsaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.VerifyVoicePrintRsaResponse)
}
VerifyVoicePrintRsaResponse::VerifyVoicePrintRsaResponse(const VerifyVoicePrintRsaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  authpwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_authpwd()) {
    authpwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authpwd_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_nextpiece()) {
    nextpiece_ = new ::micromsg::VoicePieceCtx(*from.nextpiece_);
  } else {
    nextpiece_ = NULL;
  }
  ::memcpy(&result_, &from.result_,
    reinterpret_cast<char*>(&voiceticket_) -
    reinterpret_cast<char*>(&result_) + sizeof(voiceticket_));
  // @@protoc_insertion_point(copy_constructor:micromsg.VerifyVoicePrintRsaResponse)
}

void VerifyVoicePrintRsaResponse::SharedCtor() {
  _cached_size_ = 0;
  authpwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&voiceticket_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(voiceticket_));
}

VerifyVoicePrintRsaResponse::~VerifyVoicePrintRsaResponse() {
  // @@protoc_insertion_point(destructor:micromsg.VerifyVoicePrintRsaResponse)
  SharedDtor();
}

void VerifyVoicePrintRsaResponse::SharedDtor() {
  authpwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete nextpiece_;
  }
}

void VerifyVoicePrintRsaResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyVoicePrintRsaResponse::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVoicePrintRsaResponse& VerifyVoicePrintRsaResponse::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyVoicePrintRsaResponse* VerifyVoicePrintRsaResponse::New(::google::protobuf::Arena* arena) const {
  VerifyVoicePrintRsaResponse* n = new VerifyVoicePrintRsaResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyVoicePrintRsaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.VerifyVoicePrintRsaResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_authpwd()) {
      GOOGLE_DCHECK(!authpwd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*authpwd_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_nextpiece()) {
      GOOGLE_DCHECK(nextpiece_ != NULL);
      nextpiece_->::micromsg::VoicePieceCtx::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&result_, 0, reinterpret_cast<char*>(&voiceticket_) -
      reinterpret_cast<char*>(&result_) + sizeof(voiceticket_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVoicePrintRsaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.VerifyVoicePrintRsaResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.VoicePieceCtx NextPiece = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nextpiece()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 VoiceTicket = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_voiceticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &voiceticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AuthPwd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authpwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authpwd().data(), this->authpwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.VerifyVoicePrintRsaResponse.AuthPwd");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.VerifyVoicePrintRsaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.VerifyVoicePrintRsaResponse)
  return false;
#undef DO_
}

void VerifyVoicePrintRsaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.VerifyVoicePrintRsaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.VoicePieceCtx NextPiece = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->nextpiece_, output);
  }

  // required uint32 Result = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->result(), output);
  }

  // required uint32 VoiceTicket = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->voiceticket(), output);
  }

  // optional string AuthPwd = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authpwd().data(), this->authpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.VerifyVoicePrintRsaResponse.AuthPwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->authpwd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.VerifyVoicePrintRsaResponse)
}

::google::protobuf::uint8* VerifyVoicePrintRsaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.VerifyVoicePrintRsaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.VoicePieceCtx NextPiece = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->nextpiece_, deterministic, target);
  }

  // required uint32 Result = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->result(), target);
  }

  // required uint32 VoiceTicket = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->voiceticket(), target);
  }

  // optional string AuthPwd = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authpwd().data(), this->authpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.VerifyVoicePrintRsaResponse.AuthPwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->authpwd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.VerifyVoicePrintRsaResponse)
  return target;
}

size_t VerifyVoicePrintRsaResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.VerifyVoicePrintRsaResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_nextpiece()) {
    // required .micromsg.VoicePieceCtx NextPiece = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nextpiece_);
  }

  if (has_result()) {
    // required uint32 Result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  if (has_voiceticket()) {
    // required uint32 VoiceTicket = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());
  }

  return total_size;
}
size_t VerifyVoicePrintRsaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.VerifyVoicePrintRsaResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001e) ^ 0x0000001e) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.VoicePieceCtx NextPiece = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nextpiece_);

    // required uint32 Result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());

    // required uint32 VoiceTicket = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voiceticket());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string AuthPwd = 5;
  if (has_authpwd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authpwd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyVoicePrintRsaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.VerifyVoicePrintRsaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVoicePrintRsaResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVoicePrintRsaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.VerifyVoicePrintRsaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.VerifyVoicePrintRsaResponse)
    MergeFrom(*source);
  }
}

void VerifyVoicePrintRsaResponse::MergeFrom(const VerifyVoicePrintRsaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.VerifyVoicePrintRsaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_authpwd();
      authpwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authpwd_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_nextpiece()->::micromsg::VoicePieceCtx::MergeFrom(from.nextpiece());
    }
    if (cached_has_bits & 0x00000008u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000010u) {
      voiceticket_ = from.voiceticket_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyVoicePrintRsaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.VerifyVoicePrintRsaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVoicePrintRsaResponse::CopyFrom(const VerifyVoicePrintRsaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.VerifyVoicePrintRsaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVoicePrintRsaResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_nextpiece()) {
    if (!this->nextpiece_->IsInitialized()) return false;
  }
  return true;
}

void VerifyVoicePrintRsaResponse::Swap(VerifyVoicePrintRsaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVoicePrintRsaResponse::InternalSwap(VerifyVoicePrintRsaResponse* other) {
  authpwd_.Swap(&other->authpwd_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(nextpiece_, other->nextpiece_);
  std::swap(result_, other->result_);
  std::swap(voiceticket_, other->voiceticket_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyVoicePrintRsaResponse::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyVoicePrintRsaResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool VerifyVoicePrintRsaResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyVoicePrintRsaResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyVoicePrintRsaResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyVoicePrintRsaResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& VerifyVoicePrintRsaResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* VerifyVoicePrintRsaResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* VerifyVoicePrintRsaResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void VerifyVoicePrintRsaResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaResponse.BaseResponse)
}

// required .micromsg.VoicePieceCtx NextPiece = 2;
bool VerifyVoicePrintRsaResponse::has_nextpiece() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VerifyVoicePrintRsaResponse::set_has_nextpiece() {
  _has_bits_[0] |= 0x00000004u;
}
void VerifyVoicePrintRsaResponse::clear_has_nextpiece() {
  _has_bits_[0] &= ~0x00000004u;
}
void VerifyVoicePrintRsaResponse::clear_nextpiece() {
  if (nextpiece_ != NULL) nextpiece_->::micromsg::VoicePieceCtx::Clear();
  clear_has_nextpiece();
}
const ::micromsg::VoicePieceCtx& VerifyVoicePrintRsaResponse::nextpiece() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaResponse.NextPiece)
  return nextpiece_ != NULL ? *nextpiece_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
::micromsg::VoicePieceCtx* VerifyVoicePrintRsaResponse::mutable_nextpiece() {
  set_has_nextpiece();
  if (nextpiece_ == NULL) {
    nextpiece_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaResponse.NextPiece)
  return nextpiece_;
}
::micromsg::VoicePieceCtx* VerifyVoicePrintRsaResponse::release_nextpiece() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaResponse.NextPiece)
  clear_has_nextpiece();
  ::micromsg::VoicePieceCtx* temp = nextpiece_;
  nextpiece_ = NULL;
  return temp;
}
void VerifyVoicePrintRsaResponse::set_allocated_nextpiece(::micromsg::VoicePieceCtx* nextpiece) {
  delete nextpiece_;
  nextpiece_ = nextpiece;
  if (nextpiece) {
    set_has_nextpiece();
  } else {
    clear_has_nextpiece();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaResponse.NextPiece)
}

// required uint32 Result = 3;
bool VerifyVoicePrintRsaResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VerifyVoicePrintRsaResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
void VerifyVoicePrintRsaResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
void VerifyVoicePrintRsaResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
::google::protobuf::uint32 VerifyVoicePrintRsaResponse::result() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaResponse.Result)
  return result_;
}
void VerifyVoicePrintRsaResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaResponse.Result)
}

// required uint32 VoiceTicket = 4;
bool VerifyVoicePrintRsaResponse::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void VerifyVoicePrintRsaResponse::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000010u;
}
void VerifyVoicePrintRsaResponse::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000010u;
}
void VerifyVoicePrintRsaResponse::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
::google::protobuf::uint32 VerifyVoicePrintRsaResponse::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaResponse.VoiceTicket)
  return voiceticket_;
}
void VerifyVoicePrintRsaResponse::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaResponse.VoiceTicket)
}

// optional string AuthPwd = 5;
bool VerifyVoicePrintRsaResponse::has_authpwd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyVoicePrintRsaResponse::set_has_authpwd() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyVoicePrintRsaResponse::clear_has_authpwd() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyVoicePrintRsaResponse::clear_authpwd() {
  authpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authpwd();
}
const ::std::string& VerifyVoicePrintRsaResponse::authpwd() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
  return authpwd_.GetNoArena();
}
void VerifyVoicePrintRsaResponse::set_authpwd(const ::std::string& value) {
  set_has_authpwd();
  authpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
}
#if LANG_CXX11
void VerifyVoicePrintRsaResponse::set_authpwd(::std::string&& value) {
  set_has_authpwd();
  authpwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
}
#endif
void VerifyVoicePrintRsaResponse::set_authpwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_authpwd();
  authpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
}
void VerifyVoicePrintRsaResponse::set_authpwd(const char* value, size_t size) {
  set_has_authpwd();
  authpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
}
::std::string* VerifyVoicePrintRsaResponse::mutable_authpwd() {
  set_has_authpwd();
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
  return authpwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyVoicePrintRsaResponse::release_authpwd() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
  clear_has_authpwd();
  return authpwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyVoicePrintRsaResponse::set_allocated_authpwd(::std::string* authpwd) {
  if (authpwd != NULL) {
    set_has_authpwd();
  } else {
    clear_has_authpwd();
  }
  authpwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authpwd);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchOpVoicePrintRequest::kBaseRequestFieldNumber;
const int SwitchOpVoicePrintRequest::kOpcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchOpVoicePrintRequest::SwitchOpVoicePrintRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SwitchOpVoicePrintRequest)
}
SwitchOpVoicePrintRequest::SwitchOpVoicePrintRequest(const SwitchOpVoicePrintRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  opcode_ = from.opcode_;
  // @@protoc_insertion_point(copy_constructor:micromsg.SwitchOpVoicePrintRequest)
}

void SwitchOpVoicePrintRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&opcode_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(opcode_));
}

SwitchOpVoicePrintRequest::~SwitchOpVoicePrintRequest() {
  // @@protoc_insertion_point(destructor:micromsg.SwitchOpVoicePrintRequest)
  SharedDtor();
}

void SwitchOpVoicePrintRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void SwitchOpVoicePrintRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchOpVoicePrintRequest::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SwitchOpVoicePrintRequest& SwitchOpVoicePrintRequest::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

SwitchOpVoicePrintRequest* SwitchOpVoicePrintRequest::New(::google::protobuf::Arena* arena) const {
  SwitchOpVoicePrintRequest* n = new SwitchOpVoicePrintRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwitchOpVoicePrintRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SwitchOpVoicePrintRequest)
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  opcode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SwitchOpVoicePrintRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SwitchOpVoicePrintRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 opcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SwitchOpVoicePrintRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SwitchOpVoicePrintRequest)
  return false;
#undef DO_
}

void SwitchOpVoicePrintRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SwitchOpVoicePrintRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 opcode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->opcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SwitchOpVoicePrintRequest)
}

::google::protobuf::uint8* SwitchOpVoicePrintRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SwitchOpVoicePrintRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 opcode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->opcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SwitchOpVoicePrintRequest)
  return target;
}

size_t SwitchOpVoicePrintRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.SwitchOpVoicePrintRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_opcode()) {
    // required uint32 opcode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  return total_size;
}
size_t SwitchOpVoicePrintRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SwitchOpVoicePrintRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 opcode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchOpVoicePrintRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SwitchOpVoicePrintRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchOpVoicePrintRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchOpVoicePrintRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SwitchOpVoicePrintRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SwitchOpVoicePrintRequest)
    MergeFrom(*source);
  }
}

void SwitchOpVoicePrintRequest::MergeFrom(const SwitchOpVoicePrintRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SwitchOpVoicePrintRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      opcode_ = from.opcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SwitchOpVoicePrintRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SwitchOpVoicePrintRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchOpVoicePrintRequest::CopyFrom(const SwitchOpVoicePrintRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SwitchOpVoicePrintRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchOpVoicePrintRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void SwitchOpVoicePrintRequest::Swap(SwitchOpVoicePrintRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchOpVoicePrintRequest::InternalSwap(SwitchOpVoicePrintRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(opcode_, other->opcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SwitchOpVoicePrintRequest::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchOpVoicePrintRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool SwitchOpVoicePrintRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SwitchOpVoicePrintRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void SwitchOpVoicePrintRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void SwitchOpVoicePrintRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& SwitchOpVoicePrintRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SwitchOpVoicePrintRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* SwitchOpVoicePrintRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SwitchOpVoicePrintRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* SwitchOpVoicePrintRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SwitchOpVoicePrintRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void SwitchOpVoicePrintRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SwitchOpVoicePrintRequest.BaseRequest)
}

// required uint32 opcode = 2;
bool SwitchOpVoicePrintRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SwitchOpVoicePrintRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000002u;
}
void SwitchOpVoicePrintRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000002u;
}
void SwitchOpVoicePrintRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 SwitchOpVoicePrintRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.SwitchOpVoicePrintRequest.opcode)
  return opcode_;
}
void SwitchOpVoicePrintRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SwitchOpVoicePrintRequest.opcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchOpVoicePrintResponse::kBaseResponseFieldNumber;
const int SwitchOpVoicePrintResponse::kUserSwitchFieldNumber;
const int SwitchOpVoicePrintResponse::kUserStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchOpVoicePrintResponse::SwitchOpVoicePrintResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SwitchOpVoicePrintResponse)
}
SwitchOpVoicePrintResponse::SwitchOpVoicePrintResponse(const SwitchOpVoicePrintResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ::memcpy(&userswitch_, &from.userswitch_,
    reinterpret_cast<char*>(&userstatus_) -
    reinterpret_cast<char*>(&userswitch_) + sizeof(userstatus_));
  // @@protoc_insertion_point(copy_constructor:micromsg.SwitchOpVoicePrintResponse)
}

void SwitchOpVoicePrintResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&userstatus_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(userstatus_));
}

SwitchOpVoicePrintResponse::~SwitchOpVoicePrintResponse() {
  // @@protoc_insertion_point(destructor:micromsg.SwitchOpVoicePrintResponse)
  SharedDtor();
}

void SwitchOpVoicePrintResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void SwitchOpVoicePrintResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchOpVoicePrintResponse::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SwitchOpVoicePrintResponse& SwitchOpVoicePrintResponse::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

SwitchOpVoicePrintResponse* SwitchOpVoicePrintResponse::New(::google::protobuf::Arena* arena) const {
  SwitchOpVoicePrintResponse* n = new SwitchOpVoicePrintResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwitchOpVoicePrintResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SwitchOpVoicePrintResponse)
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&userswitch_, 0, reinterpret_cast<char*>(&userstatus_) -
      reinterpret_cast<char*>(&userswitch_) + sizeof(userstatus_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SwitchOpVoicePrintResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SwitchOpVoicePrintResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 UserSwitch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_userswitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userswitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 UserStatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_userstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SwitchOpVoicePrintResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SwitchOpVoicePrintResponse)
  return false;
#undef DO_
}

void SwitchOpVoicePrintResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SwitchOpVoicePrintResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 UserSwitch = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userswitch(), output);
  }

  // required uint32 UserStatus = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userstatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SwitchOpVoicePrintResponse)
}

::google::protobuf::uint8* SwitchOpVoicePrintResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SwitchOpVoicePrintResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 UserSwitch = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userswitch(), target);
  }

  // required uint32 UserStatus = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->userstatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SwitchOpVoicePrintResponse)
  return target;
}

size_t SwitchOpVoicePrintResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.SwitchOpVoicePrintResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_userswitch()) {
    // required uint32 UserSwitch = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userswitch());
  }

  if (has_userstatus()) {
    // required uint32 UserStatus = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userstatus());
  }

  return total_size;
}
size_t SwitchOpVoicePrintResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SwitchOpVoicePrintResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 UserSwitch = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userswitch());

    // required uint32 UserStatus = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userstatus());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchOpVoicePrintResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SwitchOpVoicePrintResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchOpVoicePrintResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchOpVoicePrintResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SwitchOpVoicePrintResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SwitchOpVoicePrintResponse)
    MergeFrom(*source);
  }
}

void SwitchOpVoicePrintResponse::MergeFrom(const SwitchOpVoicePrintResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SwitchOpVoicePrintResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      userswitch_ = from.userswitch_;
    }
    if (cached_has_bits & 0x00000004u) {
      userstatus_ = from.userstatus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SwitchOpVoicePrintResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SwitchOpVoicePrintResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchOpVoicePrintResponse::CopyFrom(const SwitchOpVoicePrintResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SwitchOpVoicePrintResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchOpVoicePrintResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void SwitchOpVoicePrintResponse::Swap(SwitchOpVoicePrintResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchOpVoicePrintResponse::InternalSwap(SwitchOpVoicePrintResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(userswitch_, other->userswitch_);
  std::swap(userstatus_, other->userstatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SwitchOpVoicePrintResponse::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchOpVoicePrintResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool SwitchOpVoicePrintResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SwitchOpVoicePrintResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void SwitchOpVoicePrintResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void SwitchOpVoicePrintResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& SwitchOpVoicePrintResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SwitchOpVoicePrintResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* SwitchOpVoicePrintResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SwitchOpVoicePrintResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* SwitchOpVoicePrintResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SwitchOpVoicePrintResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void SwitchOpVoicePrintResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SwitchOpVoicePrintResponse.BaseResponse)
}

// required uint32 UserSwitch = 2;
bool SwitchOpVoicePrintResponse::has_userswitch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SwitchOpVoicePrintResponse::set_has_userswitch() {
  _has_bits_[0] |= 0x00000002u;
}
void SwitchOpVoicePrintResponse::clear_has_userswitch() {
  _has_bits_[0] &= ~0x00000002u;
}
void SwitchOpVoicePrintResponse::clear_userswitch() {
  userswitch_ = 0u;
  clear_has_userswitch();
}
::google::protobuf::uint32 SwitchOpVoicePrintResponse::userswitch() const {
  // @@protoc_insertion_point(field_get:micromsg.SwitchOpVoicePrintResponse.UserSwitch)
  return userswitch_;
}
void SwitchOpVoicePrintResponse::set_userswitch(::google::protobuf::uint32 value) {
  set_has_userswitch();
  userswitch_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SwitchOpVoicePrintResponse.UserSwitch)
}

// required uint32 UserStatus = 3;
bool SwitchOpVoicePrintResponse::has_userstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SwitchOpVoicePrintResponse::set_has_userstatus() {
  _has_bits_[0] |= 0x00000004u;
}
void SwitchOpVoicePrintResponse::clear_has_userstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void SwitchOpVoicePrintResponse::clear_userstatus() {
  userstatus_ = 0u;
  clear_has_userstatus();
}
::google::protobuf::uint32 SwitchOpVoicePrintResponse::userstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.SwitchOpVoicePrintResponse.UserStatus)
  return userstatus_;
}
void SwitchOpVoicePrintResponse::set_userstatus(::google::protobuf::uint32 value) {
  set_has_userstatus();
  userstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SwitchOpVoicePrintResponse.UserStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVoiceprintTicketRsaRequest::kBaseRequestFieldNumber;
const int GetVoiceprintTicketRsaRequest::kUserNameFieldNumber;
const int GetVoiceprintTicketRsaRequest::kGetScenceFieldNumber;
const int GetVoiceprintTicketRsaRequest::kRandomEncryKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVoiceprintTicketRsaRequest::GetVoiceprintTicketRsaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetVoiceprintTicketRsaRequest)
}
GetVoiceprintTicketRsaRequest::GetVoiceprintTicketRsaRequest(const GetVoiceprintTicketRsaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_randomencrykey()) {
    randomencrykey_ = new ::micromsg::SKBuiltinBuffer_t(*from.randomencrykey_);
  } else {
    randomencrykey_ = NULL;
  }
  getscence_ = from.getscence_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetVoiceprintTicketRsaRequest)
}

void GetVoiceprintTicketRsaRequest::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&getscence_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(getscence_));
}

GetVoiceprintTicketRsaRequest::~GetVoiceprintTicketRsaRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetVoiceprintTicketRsaRequest)
  SharedDtor();
}

void GetVoiceprintTicketRsaRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete randomencrykey_;
  }
}

void GetVoiceprintTicketRsaRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVoiceprintTicketRsaRequest::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVoiceprintTicketRsaRequest& GetVoiceprintTicketRsaRequest::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetVoiceprintTicketRsaRequest* GetVoiceprintTicketRsaRequest::New(::google::protobuf::Arena* arena) const {
  GetVoiceprintTicketRsaRequest* n = new GetVoiceprintTicketRsaRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVoiceprintTicketRsaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetVoiceprintTicketRsaRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_randomencrykey()) {
      GOOGLE_DCHECK(randomencrykey_ != NULL);
      randomencrykey_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  getscence_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetVoiceprintTicketRsaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetVoiceprintTicketRsaRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetVoiceprintTicketRsaRequest.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 GetScence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_getscence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getscence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_randomencrykey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetVoiceprintTicketRsaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetVoiceprintTicketRsaRequest)
  return false;
#undef DO_
}

void GetVoiceprintTicketRsaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetVoiceprintTicketRsaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetVoiceprintTicketRsaRequest.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // required uint32 GetScence = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->getscence(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->randomencrykey_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetVoiceprintTicketRsaRequest)
}

::google::protobuf::uint8* GetVoiceprintTicketRsaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetVoiceprintTicketRsaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetVoiceprintTicketRsaRequest.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // required uint32 GetScence = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->getscence(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->randomencrykey_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetVoiceprintTicketRsaRequest)
  return target;
}

size_t GetVoiceprintTicketRsaRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetVoiceprintTicketRsaRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_randomencrykey()) {
    // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->randomencrykey_);
  }

  if (has_getscence()) {
    // required uint32 GetScence = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->getscence());
  }

  return total_size;
}
size_t GetVoiceprintTicketRsaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetVoiceprintTicketRsaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->randomencrykey_);

    // required uint32 GetScence = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->getscence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string UserName = 2;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVoiceprintTicketRsaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetVoiceprintTicketRsaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVoiceprintTicketRsaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVoiceprintTicketRsaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetVoiceprintTicketRsaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetVoiceprintTicketRsaRequest)
    MergeFrom(*source);
  }
}

void GetVoiceprintTicketRsaRequest::MergeFrom(const GetVoiceprintTicketRsaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetVoiceprintTicketRsaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_randomencrykey()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.randomencrykey());
    }
    if (cached_has_bits & 0x00000008u) {
      getscence_ = from.getscence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetVoiceprintTicketRsaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetVoiceprintTicketRsaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVoiceprintTicketRsaRequest::CopyFrom(const GetVoiceprintTicketRsaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetVoiceprintTicketRsaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoiceprintTicketRsaRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_randomencrykey()) {
    if (!this->randomencrykey_->IsInitialized()) return false;
  }
  return true;
}

void GetVoiceprintTicketRsaRequest::Swap(GetVoiceprintTicketRsaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVoiceprintTicketRsaRequest::InternalSwap(GetVoiceprintTicketRsaRequest* other) {
  username_.Swap(&other->username_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(randomencrykey_, other->randomencrykey_);
  std::swap(getscence_, other->getscence_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVoiceprintTicketRsaRequest::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVoiceprintTicketRsaRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetVoiceprintTicketRsaRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetVoiceprintTicketRsaRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetVoiceprintTicketRsaRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetVoiceprintTicketRsaRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetVoiceprintTicketRsaRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetVoiceprintTicketRsaRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetVoiceprintTicketRsaRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetVoiceprintTicketRsaRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaRequest.BaseRequest)
}

// optional string UserName = 2;
bool GetVoiceprintTicketRsaRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetVoiceprintTicketRsaRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void GetVoiceprintTicketRsaRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetVoiceprintTicketRsaRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& GetVoiceprintTicketRsaRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaRequest.UserName)
  return username_.GetNoArena();
}
void GetVoiceprintTicketRsaRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetVoiceprintTicketRsaRequest.UserName)
}
#if LANG_CXX11
void GetVoiceprintTicketRsaRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetVoiceprintTicketRsaRequest.UserName)
}
#endif
void GetVoiceprintTicketRsaRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetVoiceprintTicketRsaRequest.UserName)
}
void GetVoiceprintTicketRsaRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetVoiceprintTicketRsaRequest.UserName)
}
::std::string* GetVoiceprintTicketRsaRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetVoiceprintTicketRsaRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaRequest.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetVoiceprintTicketRsaRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaRequest.UserName)
}

// required uint32 GetScence = 3;
bool GetVoiceprintTicketRsaRequest::has_getscence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetVoiceprintTicketRsaRequest::set_has_getscence() {
  _has_bits_[0] |= 0x00000008u;
}
void GetVoiceprintTicketRsaRequest::clear_has_getscence() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetVoiceprintTicketRsaRequest::clear_getscence() {
  getscence_ = 0u;
  clear_has_getscence();
}
::google::protobuf::uint32 GetVoiceprintTicketRsaRequest::getscence() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaRequest.GetScence)
  return getscence_;
}
void GetVoiceprintTicketRsaRequest::set_getscence(::google::protobuf::uint32 value) {
  set_has_getscence();
  getscence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetVoiceprintTicketRsaRequest.GetScence)
}

// required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
bool GetVoiceprintTicketRsaRequest::has_randomencrykey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetVoiceprintTicketRsaRequest::set_has_randomencrykey() {
  _has_bits_[0] |= 0x00000004u;
}
void GetVoiceprintTicketRsaRequest::clear_has_randomencrykey() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetVoiceprintTicketRsaRequest::clear_randomencrykey() {
  if (randomencrykey_ != NULL) randomencrykey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_randomencrykey();
}
const ::micromsg::SKBuiltinBuffer_t& GetVoiceprintTicketRsaRequest::randomencrykey() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaRequest.RandomEncryKey)
  return randomencrykey_ != NULL ? *randomencrykey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* GetVoiceprintTicketRsaRequest::mutable_randomencrykey() {
  set_has_randomencrykey();
  if (randomencrykey_ == NULL) {
    randomencrykey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaRequest.RandomEncryKey)
  return randomencrykey_;
}
::micromsg::SKBuiltinBuffer_t* GetVoiceprintTicketRsaRequest::release_randomencrykey() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaRequest.RandomEncryKey)
  clear_has_randomencrykey();
  ::micromsg::SKBuiltinBuffer_t* temp = randomencrykey_;
  randomencrykey_ = NULL;
  return temp;
}
void GetVoiceprintTicketRsaRequest::set_allocated_randomencrykey(::micromsg::SKBuiltinBuffer_t* randomencrykey) {
  delete randomencrykey_;
  randomencrykey_ = randomencrykey;
  if (randomencrykey) {
    set_has_randomencrykey();
  } else {
    clear_has_randomencrykey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaRequest.RandomEncryKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVoiceprintTicketRsaResponse::kBaseResponseFieldNumber;
const int GetVoiceprintTicketRsaResponse::kVoiceprintTicketFieldNumber;
const int GetVoiceprintTicketRsaResponse::kBuiltinIPListFieldNumber;
const int GetVoiceprintTicketRsaResponse::kNewHostListFieldNumber;
const int GetVoiceprintTicketRsaResponse::kNetworkControlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVoiceprintTicketRsaResponse::GetVoiceprintTicketRsaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmvoiceprint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetVoiceprintTicketRsaResponse)
}
GetVoiceprintTicketRsaResponse::GetVoiceprintTicketRsaResponse(const GetVoiceprintTicketRsaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  voiceprintticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_voiceprintticket()) {
    voiceprintticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voiceprintticket_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_builtiniplist()) {
    builtiniplist_ = new ::micromsg::BuiltinIPList(*from.builtiniplist_);
  } else {
    builtiniplist_ = NULL;
  }
  if (from.has_newhostlist()) {
    newhostlist_ = new ::micromsg::HostList(*from.newhostlist_);
  } else {
    newhostlist_ = NULL;
  }
  if (from.has_networkcontrol()) {
    networkcontrol_ = new ::micromsg::NetworkControl(*from.networkcontrol_);
  } else {
    networkcontrol_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetVoiceprintTicketRsaResponse)
}

void GetVoiceprintTicketRsaResponse::SharedCtor() {
  _cached_size_ = 0;
  voiceprintticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&networkcontrol_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(networkcontrol_));
}

GetVoiceprintTicketRsaResponse::~GetVoiceprintTicketRsaResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetVoiceprintTicketRsaResponse)
  SharedDtor();
}

void GetVoiceprintTicketRsaResponse::SharedDtor() {
  voiceprintticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete builtiniplist_;
  }
  if (this != internal_default_instance()) {
    delete newhostlist_;
  }
  if (this != internal_default_instance()) {
    delete networkcontrol_;
  }
}

void GetVoiceprintTicketRsaResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVoiceprintTicketRsaResponse::descriptor() {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVoiceprintTicketRsaResponse& GetVoiceprintTicketRsaResponse::default_instance() {
  protobuf_mmvoiceprint_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetVoiceprintTicketRsaResponse* GetVoiceprintTicketRsaResponse::New(::google::protobuf::Arena* arena) const {
  GetVoiceprintTicketRsaResponse* n = new GetVoiceprintTicketRsaResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVoiceprintTicketRsaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetVoiceprintTicketRsaResponse)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_voiceprintticket()) {
      GOOGLE_DCHECK(!voiceprintticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*voiceprintticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_builtiniplist()) {
      GOOGLE_DCHECK(builtiniplist_ != NULL);
      builtiniplist_->::micromsg::BuiltinIPList::Clear();
    }
    if (has_newhostlist()) {
      GOOGLE_DCHECK(newhostlist_ != NULL);
      newhostlist_->::micromsg::HostList::Clear();
    }
    if (has_networkcontrol()) {
      GOOGLE_DCHECK(networkcontrol_ != NULL);
      networkcontrol_->::micromsg::NetworkControl::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetVoiceprintTicketRsaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetVoiceprintTicketRsaResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string VoiceprintTicket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voiceprintticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voiceprintticket().data(), this->voiceprintticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.BuiltinIPList BuiltinIPList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_builtiniplist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.HostList NewHostList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newhostlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.NetworkControl NetworkControl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_networkcontrol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetVoiceprintTicketRsaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetVoiceprintTicketRsaResponse)
  return false;
#undef DO_
}

void GetVoiceprintTicketRsaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetVoiceprintTicketRsaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string VoiceprintTicket = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voiceprintticket().data(), this->voiceprintticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->voiceprintticket(), output);
  }

  // optional .micromsg.BuiltinIPList BuiltinIPList = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->builtiniplist_, output);
  }

  // optional .micromsg.HostList NewHostList = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->newhostlist_, output);
  }

  // optional .micromsg.NetworkControl NetworkControl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->networkcontrol_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetVoiceprintTicketRsaResponse)
}

::google::protobuf::uint8* GetVoiceprintTicketRsaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetVoiceprintTicketRsaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string VoiceprintTicket = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voiceprintticket().data(), this->voiceprintticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->voiceprintticket(), target);
  }

  // optional .micromsg.BuiltinIPList BuiltinIPList = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->builtiniplist_, deterministic, target);
  }

  // optional .micromsg.HostList NewHostList = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->newhostlist_, deterministic, target);
  }

  // optional .micromsg.NetworkControl NetworkControl = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->networkcontrol_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetVoiceprintTicketRsaResponse)
  return target;
}

size_t GetVoiceprintTicketRsaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetVoiceprintTicketRsaResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional string VoiceprintTicket = 2;
  if (has_voiceprintticket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voiceprintticket());
  }

  if (_has_bits_[0 / 32] & 28u) {
    // optional .micromsg.BuiltinIPList BuiltinIPList = 3;
    if (has_builtiniplist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->builtiniplist_);
    }

    // optional .micromsg.HostList NewHostList = 4;
    if (has_newhostlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->newhostlist_);
    }

    // optional .micromsg.NetworkControl NetworkControl = 5;
    if (has_networkcontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->networkcontrol_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVoiceprintTicketRsaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetVoiceprintTicketRsaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVoiceprintTicketRsaResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVoiceprintTicketRsaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetVoiceprintTicketRsaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetVoiceprintTicketRsaResponse)
    MergeFrom(*source);
  }
}

void GetVoiceprintTicketRsaResponse::MergeFrom(const GetVoiceprintTicketRsaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetVoiceprintTicketRsaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_voiceprintticket();
      voiceprintticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voiceprintticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_builtiniplist()->::micromsg::BuiltinIPList::MergeFrom(from.builtiniplist());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_newhostlist()->::micromsg::HostList::MergeFrom(from.newhostlist());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_networkcontrol()->::micromsg::NetworkControl::MergeFrom(from.networkcontrol());
    }
  }
}

void GetVoiceprintTicketRsaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetVoiceprintTicketRsaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVoiceprintTicketRsaResponse::CopyFrom(const GetVoiceprintTicketRsaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetVoiceprintTicketRsaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoiceprintTicketRsaResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_builtiniplist()) {
    if (!this->builtiniplist_->IsInitialized()) return false;
  }
  if (has_newhostlist()) {
    if (!this->newhostlist_->IsInitialized()) return false;
  }
  return true;
}

void GetVoiceprintTicketRsaResponse::Swap(GetVoiceprintTicketRsaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVoiceprintTicketRsaResponse::InternalSwap(GetVoiceprintTicketRsaResponse* other) {
  voiceprintticket_.Swap(&other->voiceprintticket_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(builtiniplist_, other->builtiniplist_);
  std::swap(newhostlist_, other->newhostlist_);
  std::swap(networkcontrol_, other->networkcontrol_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVoiceprintTicketRsaResponse::GetMetadata() const {
  protobuf_mmvoiceprint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmvoiceprint_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVoiceprintTicketRsaResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetVoiceprintTicketRsaResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetVoiceprintTicketRsaResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void GetVoiceprintTicketRsaResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetVoiceprintTicketRsaResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetVoiceprintTicketRsaResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetVoiceprintTicketRsaResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetVoiceprintTicketRsaResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetVoiceprintTicketRsaResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaResponse.BaseResponse)
}

// optional string VoiceprintTicket = 2;
bool GetVoiceprintTicketRsaResponse::has_voiceprintticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetVoiceprintTicketRsaResponse::set_has_voiceprintticket() {
  _has_bits_[0] |= 0x00000001u;
}
void GetVoiceprintTicketRsaResponse::clear_has_voiceprintticket() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetVoiceprintTicketRsaResponse::clear_voiceprintticket() {
  voiceprintticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voiceprintticket();
}
const ::std::string& GetVoiceprintTicketRsaResponse::voiceprintticket() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
  return voiceprintticket_.GetNoArena();
}
void GetVoiceprintTicketRsaResponse::set_voiceprintticket(const ::std::string& value) {
  set_has_voiceprintticket();
  voiceprintticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
}
#if LANG_CXX11
void GetVoiceprintTicketRsaResponse::set_voiceprintticket(::std::string&& value) {
  set_has_voiceprintticket();
  voiceprintticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
}
#endif
void GetVoiceprintTicketRsaResponse::set_voiceprintticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_voiceprintticket();
  voiceprintticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
}
void GetVoiceprintTicketRsaResponse::set_voiceprintticket(const char* value, size_t size) {
  set_has_voiceprintticket();
  voiceprintticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
}
::std::string* GetVoiceprintTicketRsaResponse::mutable_voiceprintticket() {
  set_has_voiceprintticket();
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
  return voiceprintticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetVoiceprintTicketRsaResponse::release_voiceprintticket() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
  clear_has_voiceprintticket();
  return voiceprintticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetVoiceprintTicketRsaResponse::set_allocated_voiceprintticket(::std::string* voiceprintticket) {
  if (voiceprintticket != NULL) {
    set_has_voiceprintticket();
  } else {
    clear_has_voiceprintticket();
  }
  voiceprintticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voiceprintticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
}

// optional .micromsg.BuiltinIPList BuiltinIPList = 3;
bool GetVoiceprintTicketRsaResponse::has_builtiniplist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetVoiceprintTicketRsaResponse::set_has_builtiniplist() {
  _has_bits_[0] |= 0x00000004u;
}
void GetVoiceprintTicketRsaResponse::clear_has_builtiniplist() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetVoiceprintTicketRsaResponse::clear_builtiniplist() {
  if (builtiniplist_ != NULL) builtiniplist_->::micromsg::BuiltinIPList::Clear();
  clear_has_builtiniplist();
}
const ::micromsg::BuiltinIPList& GetVoiceprintTicketRsaResponse::builtiniplist() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaResponse.BuiltinIPList)
  return builtiniplist_ != NULL ? *builtiniplist_
                         : *::micromsg::BuiltinIPList::internal_default_instance();
}
::micromsg::BuiltinIPList* GetVoiceprintTicketRsaResponse::mutable_builtiniplist() {
  set_has_builtiniplist();
  if (builtiniplist_ == NULL) {
    builtiniplist_ = new ::micromsg::BuiltinIPList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaResponse.BuiltinIPList)
  return builtiniplist_;
}
::micromsg::BuiltinIPList* GetVoiceprintTicketRsaResponse::release_builtiniplist() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaResponse.BuiltinIPList)
  clear_has_builtiniplist();
  ::micromsg::BuiltinIPList* temp = builtiniplist_;
  builtiniplist_ = NULL;
  return temp;
}
void GetVoiceprintTicketRsaResponse::set_allocated_builtiniplist(::micromsg::BuiltinIPList* builtiniplist) {
  delete builtiniplist_;
  builtiniplist_ = builtiniplist;
  if (builtiniplist) {
    set_has_builtiniplist();
  } else {
    clear_has_builtiniplist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaResponse.BuiltinIPList)
}

// optional .micromsg.HostList NewHostList = 4;
bool GetVoiceprintTicketRsaResponse::has_newhostlist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetVoiceprintTicketRsaResponse::set_has_newhostlist() {
  _has_bits_[0] |= 0x00000008u;
}
void GetVoiceprintTicketRsaResponse::clear_has_newhostlist() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetVoiceprintTicketRsaResponse::clear_newhostlist() {
  if (newhostlist_ != NULL) newhostlist_->::micromsg::HostList::Clear();
  clear_has_newhostlist();
}
const ::micromsg::HostList& GetVoiceprintTicketRsaResponse::newhostlist() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaResponse.NewHostList)
  return newhostlist_ != NULL ? *newhostlist_
                         : *::micromsg::HostList::internal_default_instance();
}
::micromsg::HostList* GetVoiceprintTicketRsaResponse::mutable_newhostlist() {
  set_has_newhostlist();
  if (newhostlist_ == NULL) {
    newhostlist_ = new ::micromsg::HostList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaResponse.NewHostList)
  return newhostlist_;
}
::micromsg::HostList* GetVoiceprintTicketRsaResponse::release_newhostlist() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaResponse.NewHostList)
  clear_has_newhostlist();
  ::micromsg::HostList* temp = newhostlist_;
  newhostlist_ = NULL;
  return temp;
}
void GetVoiceprintTicketRsaResponse::set_allocated_newhostlist(::micromsg::HostList* newhostlist) {
  delete newhostlist_;
  newhostlist_ = newhostlist;
  if (newhostlist) {
    set_has_newhostlist();
  } else {
    clear_has_newhostlist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaResponse.NewHostList)
}

// optional .micromsg.NetworkControl NetworkControl = 5;
bool GetVoiceprintTicketRsaResponse::has_networkcontrol() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetVoiceprintTicketRsaResponse::set_has_networkcontrol() {
  _has_bits_[0] |= 0x00000010u;
}
void GetVoiceprintTicketRsaResponse::clear_has_networkcontrol() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetVoiceprintTicketRsaResponse::clear_networkcontrol() {
  if (networkcontrol_ != NULL) networkcontrol_->::micromsg::NetworkControl::Clear();
  clear_has_networkcontrol();
}
const ::micromsg::NetworkControl& GetVoiceprintTicketRsaResponse::networkcontrol() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaResponse.NetworkControl)
  return networkcontrol_ != NULL ? *networkcontrol_
                         : *::micromsg::NetworkControl::internal_default_instance();
}
::micromsg::NetworkControl* GetVoiceprintTicketRsaResponse::mutable_networkcontrol() {
  set_has_networkcontrol();
  if (networkcontrol_ == NULL) {
    networkcontrol_ = new ::micromsg::NetworkControl;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaResponse.NetworkControl)
  return networkcontrol_;
}
::micromsg::NetworkControl* GetVoiceprintTicketRsaResponse::release_networkcontrol() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaResponse.NetworkControl)
  clear_has_networkcontrol();
  ::micromsg::NetworkControl* temp = networkcontrol_;
  networkcontrol_ = NULL;
  return temp;
}
void GetVoiceprintTicketRsaResponse::set_allocated_networkcontrol(::micromsg::NetworkControl* networkcontrol) {
  delete networkcontrol_;
  networkcontrol_ = networkcontrol;
  if (networkcontrol) {
    set_has_networkcontrol();
  } else {
    clear_has_networkcontrol();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaResponse.NetworkControl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg

// @@protoc_insertion_point(global_scope)
