// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmvoiceprint.proto

#ifndef PROTOBUF_mmvoiceprint_2eproto__INCLUDED
#define PROTOBUF_mmvoiceprint_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GetVoicePrintResourceRequest;
class GetVoicePrintResourceRequestDefaultTypeInternal;
extern GetVoicePrintResourceRequestDefaultTypeInternal _GetVoicePrintResourceRequest_default_instance_;
class GetVoicePrintResourceResponse;
class GetVoicePrintResourceResponseDefaultTypeInternal;
extern GetVoicePrintResourceResponseDefaultTypeInternal _GetVoicePrintResourceResponse_default_instance_;
class GetVoicePrintResourceRsaRequest;
class GetVoicePrintResourceRsaRequestDefaultTypeInternal;
extern GetVoicePrintResourceRsaRequestDefaultTypeInternal _GetVoicePrintResourceRsaRequest_default_instance_;
class GetVoicePrintResourceRsaResponse;
class GetVoicePrintResourceRsaResponseDefaultTypeInternal;
extern GetVoicePrintResourceRsaResponseDefaultTypeInternal _GetVoicePrintResourceRsaResponse_default_instance_;
class GetVoiceprintTicketRsaRequest;
class GetVoiceprintTicketRsaRequestDefaultTypeInternal;
extern GetVoiceprintTicketRsaRequestDefaultTypeInternal _GetVoiceprintTicketRsaRequest_default_instance_;
class GetVoiceprintTicketRsaResponse;
class GetVoiceprintTicketRsaResponseDefaultTypeInternal;
extern GetVoiceprintTicketRsaResponseDefaultTypeInternal _GetVoiceprintTicketRsaResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RegisterVoicePrintRequest;
class RegisterVoicePrintRequestDefaultTypeInternal;
extern RegisterVoicePrintRequestDefaultTypeInternal _RegisterVoicePrintRequest_default_instance_;
class RegisterVoicePrintResponse;
class RegisterVoicePrintResponseDefaultTypeInternal;
extern RegisterVoicePrintResponseDefaultTypeInternal _RegisterVoicePrintResponse_default_instance_;
class ResourceCtx;
class ResourceCtxDefaultTypeInternal;
extern ResourceCtxDefaultTypeInternal _ResourceCtx_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class SwitchOpVoicePrintRequest;
class SwitchOpVoicePrintRequestDefaultTypeInternal;
extern SwitchOpVoicePrintRequestDefaultTypeInternal _SwitchOpVoicePrintRequest_default_instance_;
class SwitchOpVoicePrintResponse;
class SwitchOpVoicePrintResponseDefaultTypeInternal;
extern SwitchOpVoicePrintResponseDefaultTypeInternal _SwitchOpVoicePrintResponse_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
class VerifyVoicePrintRequest;
class VerifyVoicePrintRequestDefaultTypeInternal;
extern VerifyVoicePrintRequestDefaultTypeInternal _VerifyVoicePrintRequest_default_instance_;
class VerifyVoicePrintResponse;
class VerifyVoicePrintResponseDefaultTypeInternal;
extern VerifyVoicePrintResponseDefaultTypeInternal _VerifyVoicePrintResponse_default_instance_;
class VerifyVoicePrintRsaRequest;
class VerifyVoicePrintRsaRequestDefaultTypeInternal;
extern VerifyVoicePrintRsaRequestDefaultTypeInternal _VerifyVoicePrintRsaRequest_default_instance_;
class VerifyVoicePrintRsaResponse;
class VerifyVoicePrintRsaResponseDefaultTypeInternal;
extern VerifyVoicePrintRsaResponseDefaultTypeInternal _VerifyVoicePrintRsaResponse_default_instance_;
class VoicePieceCtx;
class VoicePieceCtxDefaultTypeInternal;
extern VoicePieceCtxDefaultTypeInternal _VoicePieceCtx_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmvoiceprint_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmvoiceprint_2eproto

// ===================================================================

class VoicePieceCtx : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.VoicePieceCtx) */ {
 public:
  VoicePieceCtx();
  virtual ~VoicePieceCtx();

  VoicePieceCtx(const VoicePieceCtx& from);

  inline VoicePieceCtx& operator=(const VoicePieceCtx& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoicePieceCtx& default_instance();

  static inline const VoicePieceCtx* internal_default_instance() {
    return reinterpret_cast<const VoicePieceCtx*>(
               &_VoicePieceCtx_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VoicePieceCtx* other);

  // implements Message ----------------------------------------------

  inline VoicePieceCtx* New() const PROTOBUF_FINAL { return New(NULL); }

  VoicePieceCtx* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VoicePieceCtx& from);
  void MergeFrom(const VoicePieceCtx& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VoicePieceCtx* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinBuffer_t PieceData = 4;
  bool has_piecedata() const;
  void clear_piecedata();
  static const int kPieceDataFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& piecedata() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_piecedata();
  ::micromsg::SKBuiltinBuffer_t* release_piecedata();
  void set_allocated_piecedata(::micromsg::SKBuiltinBuffer_t* piecedata);

  // required uint32 StartPos = 1;
  bool has_startpos() const;
  void clear_startpos();
  static const int kStartPosFieldNumber = 1;
  ::google::protobuf::uint32 startpos() const;
  void set_startpos(::google::protobuf::uint32 value);

  // required uint32 PieceLen = 2;
  bool has_piecelen() const;
  void clear_piecelen();
  static const int kPieceLenFieldNumber = 2;
  ::google::protobuf::uint32 piecelen() const;
  void set_piecelen(::google::protobuf::uint32 value);

  // required uint32 PieceFlag = 3;
  bool has_pieceflag() const;
  void clear_pieceflag();
  static const int kPieceFlagFieldNumber = 3;
  ::google::protobuf::uint32 pieceflag() const;
  void set_pieceflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.VoicePieceCtx)
 private:
  void set_has_startpos();
  void clear_has_startpos();
  void set_has_piecelen();
  void clear_has_piecelen();
  void set_has_pieceflag();
  void clear_has_pieceflag();
  void set_has_piecedata();
  void clear_has_piecedata();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinBuffer_t* piecedata_;
  ::google::protobuf::uint32 startpos_;
  ::google::protobuf::uint32 piecelen_;
  ::google::protobuf::uint32 pieceflag_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResourceCtx : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ResourceCtx) */ {
 public:
  ResourceCtx();
  virtual ~ResourceCtx();

  ResourceCtx(const ResourceCtx& from);

  inline ResourceCtx& operator=(const ResourceCtx& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceCtx& default_instance();

  static inline const ResourceCtx* internal_default_instance() {
    return reinterpret_cast<const ResourceCtx*>(
               &_ResourceCtx_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ResourceCtx* other);

  // implements Message ----------------------------------------------

  inline ResourceCtx* New() const PROTOBUF_FINAL { return New(NULL); }

  ResourceCtx* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResourceCtx& from);
  void MergeFrom(const ResourceCtx& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResourceCtx* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinBuffer_t ResData = 2;
  bool has_resdata() const;
  void clear_resdata();
  static const int kResDataFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& resdata() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_resdata();
  ::micromsg::SKBuiltinBuffer_t* release_resdata();
  void set_allocated_resdata(::micromsg::SKBuiltinBuffer_t* resdata);

  // required uint32 ResId = 1;
  bool has_resid() const;
  void clear_resid();
  static const int kResIdFieldNumber = 1;
  ::google::protobuf::uint32 resid() const;
  void set_resid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ResourceCtx)
 private:
  void set_has_resid();
  void clear_has_resid();
  void set_has_resdata();
  void clear_has_resdata();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinBuffer_t* resdata_;
  ::google::protobuf::uint32 resid_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVoicePrintResourceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetVoicePrintResourceRequest) */ {
 public:
  GetVoicePrintResourceRequest();
  virtual ~GetVoicePrintResourceRequest();

  GetVoicePrintResourceRequest(const GetVoicePrintResourceRequest& from);

  inline GetVoicePrintResourceRequest& operator=(const GetVoicePrintResourceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVoicePrintResourceRequest& default_instance();

  static inline const GetVoicePrintResourceRequest* internal_default_instance() {
    return reinterpret_cast<const GetVoicePrintResourceRequest*>(
               &_GetVoicePrintResourceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GetVoicePrintResourceRequest* other);

  // implements Message ----------------------------------------------

  inline GetVoicePrintResourceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVoicePrintResourceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVoicePrintResourceRequest& from);
  void MergeFrom(const GetVoicePrintResourceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVoicePrintResourceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string VerifyTicket = 3;
  bool has_verifyticket() const;
  void clear_verifyticket();
  static const int kVerifyTicketFieldNumber = 3;
  const ::std::string& verifyticket() const;
  void set_verifyticket(const ::std::string& value);
  #if LANG_CXX11
  void set_verifyticket(::std::string&& value);
  #endif
  void set_verifyticket(const char* value);
  void set_verifyticket(const char* value, size_t size);
  ::std::string* mutable_verifyticket();
  ::std::string* release_verifyticket();
  void set_allocated_verifyticket(::std::string* verifyticket);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 ResScence = 2;
  bool has_resscence() const;
  void clear_resscence();
  static const int kResScenceFieldNumber = 2;
  ::google::protobuf::uint32 resscence() const;
  void set_resscence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetVoicePrintResourceRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_resscence();
  void clear_has_resscence();
  void set_has_verifyticket();
  void clear_has_verifyticket();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr verifyticket_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 resscence_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVoicePrintResourceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetVoicePrintResourceResponse) */ {
 public:
  GetVoicePrintResourceResponse();
  virtual ~GetVoicePrintResourceResponse();

  GetVoicePrintResourceResponse(const GetVoicePrintResourceResponse& from);

  inline GetVoicePrintResourceResponse& operator=(const GetVoicePrintResourceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVoicePrintResourceResponse& default_instance();

  static inline const GetVoicePrintResourceResponse* internal_default_instance() {
    return reinterpret_cast<const GetVoicePrintResourceResponse*>(
               &_GetVoicePrintResourceResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GetVoicePrintResourceResponse* other);

  // implements Message ----------------------------------------------

  inline GetVoicePrintResourceResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVoicePrintResourceResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVoicePrintResourceResponse& from);
  void MergeFrom(const GetVoicePrintResourceResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVoicePrintResourceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.ResourceCtx ResourceData = 2;
  bool has_resourcedata() const;
  void clear_resourcedata();
  static const int kResourceDataFieldNumber = 2;
  const ::micromsg::ResourceCtx& resourcedata() const;
  ::micromsg::ResourceCtx* mutable_resourcedata();
  ::micromsg::ResourceCtx* release_resourcedata();
  void set_allocated_resourcedata(::micromsg::ResourceCtx* resourcedata);

  // @@protoc_insertion_point(class_scope:micromsg.GetVoicePrintResourceResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_resourcedata();
  void clear_has_resourcedata();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::ResourceCtx* resourcedata_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVoicePrintResourceRsaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetVoicePrintResourceRsaRequest) */ {
 public:
  GetVoicePrintResourceRsaRequest();
  virtual ~GetVoicePrintResourceRsaRequest();

  GetVoicePrintResourceRsaRequest(const GetVoicePrintResourceRsaRequest& from);

  inline GetVoicePrintResourceRsaRequest& operator=(const GetVoicePrintResourceRsaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVoicePrintResourceRsaRequest& default_instance();

  static inline const GetVoicePrintResourceRsaRequest* internal_default_instance() {
    return reinterpret_cast<const GetVoicePrintResourceRsaRequest*>(
               &_GetVoicePrintResourceRsaRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetVoicePrintResourceRsaRequest* other);

  // implements Message ----------------------------------------------

  inline GetVoicePrintResourceRsaRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVoicePrintResourceRsaRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVoicePrintResourceRsaRequest& from);
  void MergeFrom(const GetVoicePrintResourceRsaRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVoicePrintResourceRsaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string VerifyTicket = 3;
  bool has_verifyticket() const;
  void clear_verifyticket();
  static const int kVerifyTicketFieldNumber = 3;
  const ::std::string& verifyticket() const;
  void set_verifyticket(const ::std::string& value);
  #if LANG_CXX11
  void set_verifyticket(::std::string&& value);
  #endif
  void set_verifyticket(const char* value);
  void set_verifyticket(const char* value, size_t size);
  ::std::string* mutable_verifyticket();
  ::std::string* release_verifyticket();
  void set_allocated_verifyticket(::std::string* verifyticket);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
  bool has_randomencrykey() const;
  void clear_randomencrykey();
  static const int kRandomEncryKeyFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& randomencrykey() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_randomencrykey();
  ::micromsg::SKBuiltinBuffer_t* release_randomencrykey();
  void set_allocated_randomencrykey(::micromsg::SKBuiltinBuffer_t* randomencrykey);

  // required uint32 ResScence = 2;
  bool has_resscence() const;
  void clear_resscence();
  static const int kResScenceFieldNumber = 2;
  ::google::protobuf::uint32 resscence() const;
  void set_resscence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetVoicePrintResourceRsaRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_resscence();
  void clear_has_resscence();
  void set_has_verifyticket();
  void clear_has_verifyticket();
  void set_has_randomencrykey();
  void clear_has_randomencrykey();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr verifyticket_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* randomencrykey_;
  ::google::protobuf::uint32 resscence_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVoicePrintResourceRsaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetVoicePrintResourceRsaResponse) */ {
 public:
  GetVoicePrintResourceRsaResponse();
  virtual ~GetVoicePrintResourceRsaResponse();

  GetVoicePrintResourceRsaResponse(const GetVoicePrintResourceRsaResponse& from);

  inline GetVoicePrintResourceRsaResponse& operator=(const GetVoicePrintResourceRsaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVoicePrintResourceRsaResponse& default_instance();

  static inline const GetVoicePrintResourceRsaResponse* internal_default_instance() {
    return reinterpret_cast<const GetVoicePrintResourceRsaResponse*>(
               &_GetVoicePrintResourceRsaResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetVoicePrintResourceRsaResponse* other);

  // implements Message ----------------------------------------------

  inline GetVoicePrintResourceRsaResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVoicePrintResourceRsaResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVoicePrintResourceRsaResponse& from);
  void MergeFrom(const GetVoicePrintResourceRsaResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVoicePrintResourceRsaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.ResourceCtx ResourceData = 2;
  bool has_resourcedata() const;
  void clear_resourcedata();
  static const int kResourceDataFieldNumber = 2;
  const ::micromsg::ResourceCtx& resourcedata() const;
  ::micromsg::ResourceCtx* mutable_resourcedata();
  ::micromsg::ResourceCtx* release_resourcedata();
  void set_allocated_resourcedata(::micromsg::ResourceCtx* resourcedata);

  // @@protoc_insertion_point(class_scope:micromsg.GetVoicePrintResourceRsaResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_resourcedata();
  void clear_has_resourcedata();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::ResourceCtx* resourcedata_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterVoicePrintRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RegisterVoicePrintRequest) */ {
 public:
  RegisterVoicePrintRequest();
  virtual ~RegisterVoicePrintRequest();

  RegisterVoicePrintRequest(const RegisterVoicePrintRequest& from);

  inline RegisterVoicePrintRequest& operator=(const RegisterVoicePrintRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterVoicePrintRequest& default_instance();

  static inline const RegisterVoicePrintRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterVoicePrintRequest*>(
               &_RegisterVoicePrintRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(RegisterVoicePrintRequest* other);

  // implements Message ----------------------------------------------

  inline RegisterVoicePrintRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterVoicePrintRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterVoicePrintRequest& from);
  void MergeFrom(const RegisterVoicePrintRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterVoicePrintRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.VoicePieceCtx PieceData = 4;
  bool has_piecedata() const;
  void clear_piecedata();
  static const int kPieceDataFieldNumber = 4;
  const ::micromsg::VoicePieceCtx& piecedata() const;
  ::micromsg::VoicePieceCtx* mutable_piecedata();
  ::micromsg::VoicePieceCtx* release_piecedata();
  void set_allocated_piecedata(::micromsg::VoicePieceCtx* piecedata);

  // required uint32 Step = 2;
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 2;
  ::google::protobuf::uint32 step() const;
  void set_step(::google::protobuf::uint32 value);

  // required uint32 VoiceTicket = 3;
  bool has_voiceticket() const;
  void clear_voiceticket();
  static const int kVoiceTicketFieldNumber = 3;
  ::google::protobuf::uint32 voiceticket() const;
  void set_voiceticket(::google::protobuf::uint32 value);

  // required uint32 ResId = 5;
  bool has_resid() const;
  void clear_resid();
  static const int kResIdFieldNumber = 5;
  ::google::protobuf::uint32 resid() const;
  void set_resid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RegisterVoicePrintRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_step();
  void clear_has_step();
  void set_has_voiceticket();
  void clear_has_voiceticket();
  void set_has_piecedata();
  void clear_has_piecedata();
  void set_has_resid();
  void clear_has_resid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::VoicePieceCtx* piecedata_;
  ::google::protobuf::uint32 step_;
  ::google::protobuf::uint32 voiceticket_;
  ::google::protobuf::uint32 resid_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterVoicePrintResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RegisterVoicePrintResponse) */ {
 public:
  RegisterVoicePrintResponse();
  virtual ~RegisterVoicePrintResponse();

  RegisterVoicePrintResponse(const RegisterVoicePrintResponse& from);

  inline RegisterVoicePrintResponse& operator=(const RegisterVoicePrintResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterVoicePrintResponse& default_instance();

  static inline const RegisterVoicePrintResponse* internal_default_instance() {
    return reinterpret_cast<const RegisterVoicePrintResponse*>(
               &_RegisterVoicePrintResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(RegisterVoicePrintResponse* other);

  // implements Message ----------------------------------------------

  inline RegisterVoicePrintResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterVoicePrintResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterVoicePrintResponse& from);
  void MergeFrom(const RegisterVoicePrintResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterVoicePrintResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.VoicePieceCtx NextPiece = 4;
  bool has_nextpiece() const;
  void clear_nextpiece();
  static const int kNextPieceFieldNumber = 4;
  const ::micromsg::VoicePieceCtx& nextpiece() const;
  ::micromsg::VoicePieceCtx* mutable_nextpiece();
  ::micromsg::VoicePieceCtx* release_nextpiece();
  void set_allocated_nextpiece(::micromsg::VoicePieceCtx* nextpiece);

  // required int32 ResgisterRet = 2;
  bool has_resgisterret() const;
  void clear_resgisterret();
  static const int kResgisterRetFieldNumber = 2;
  ::google::protobuf::int32 resgisterret() const;
  void set_resgisterret(::google::protobuf::int32 value);

  // required uint32 NextStep = 3;
  bool has_nextstep() const;
  void clear_nextstep();
  static const int kNextStepFieldNumber = 3;
  ::google::protobuf::uint32 nextstep() const;
  void set_nextstep(::google::protobuf::uint32 value);

  // required uint32 VoiceTicket = 5;
  bool has_voiceticket() const;
  void clear_voiceticket();
  static const int kVoiceTicketFieldNumber = 5;
  ::google::protobuf::uint32 voiceticket() const;
  void set_voiceticket(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RegisterVoicePrintResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_resgisterret();
  void clear_has_resgisterret();
  void set_has_nextstep();
  void clear_has_nextstep();
  void set_has_nextpiece();
  void clear_has_nextpiece();
  void set_has_voiceticket();
  void clear_has_voiceticket();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::VoicePieceCtx* nextpiece_;
  ::google::protobuf::int32 resgisterret_;
  ::google::protobuf::uint32 nextstep_;
  ::google::protobuf::uint32 voiceticket_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyVoicePrintRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.VerifyVoicePrintRequest) */ {
 public:
  VerifyVoicePrintRequest();
  virtual ~VerifyVoicePrintRequest();

  VerifyVoicePrintRequest(const VerifyVoicePrintRequest& from);

  inline VerifyVoicePrintRequest& operator=(const VerifyVoicePrintRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyVoicePrintRequest& default_instance();

  static inline const VerifyVoicePrintRequest* internal_default_instance() {
    return reinterpret_cast<const VerifyVoicePrintRequest*>(
               &_VerifyVoicePrintRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(VerifyVoicePrintRequest* other);

  // implements Message ----------------------------------------------

  inline VerifyVoicePrintRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyVoicePrintRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyVoicePrintRequest& from);
  void MergeFrom(const VerifyVoicePrintRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyVoicePrintRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string VerifyTicket = 5;
  bool has_verifyticket() const;
  void clear_verifyticket();
  static const int kVerifyTicketFieldNumber = 5;
  const ::std::string& verifyticket() const;
  void set_verifyticket(const ::std::string& value);
  #if LANG_CXX11
  void set_verifyticket(::std::string&& value);
  #endif
  void set_verifyticket(const char* value);
  void set_verifyticket(const char* value, size_t size);
  ::std::string* mutable_verifyticket();
  ::std::string* release_verifyticket();
  void set_allocated_verifyticket(::std::string* verifyticket);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.VoicePieceCtx Piece = 2;
  bool has_piece() const;
  void clear_piece();
  static const int kPieceFieldNumber = 2;
  const ::micromsg::VoicePieceCtx& piece() const;
  ::micromsg::VoicePieceCtx* mutable_piece();
  ::micromsg::VoicePieceCtx* release_piece();
  void set_allocated_piece(::micromsg::VoicePieceCtx* piece);

  // required uint32 VoiceTicket = 3;
  bool has_voiceticket() const;
  void clear_voiceticket();
  static const int kVoiceTicketFieldNumber = 3;
  ::google::protobuf::uint32 voiceticket() const;
  void set_voiceticket(::google::protobuf::uint32 value);

  // required uint32 ResId = 4;
  bool has_resid() const;
  void clear_resid();
  static const int kResIdFieldNumber = 4;
  ::google::protobuf::uint32 resid() const;
  void set_resid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.VerifyVoicePrintRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_piece();
  void clear_has_piece();
  void set_has_voiceticket();
  void clear_has_voiceticket();
  void set_has_resid();
  void clear_has_resid();
  void set_has_verifyticket();
  void clear_has_verifyticket();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr verifyticket_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::VoicePieceCtx* piece_;
  ::google::protobuf::uint32 voiceticket_;
  ::google::protobuf::uint32 resid_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyVoicePrintResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.VerifyVoicePrintResponse) */ {
 public:
  VerifyVoicePrintResponse();
  virtual ~VerifyVoicePrintResponse();

  VerifyVoicePrintResponse(const VerifyVoicePrintResponse& from);

  inline VerifyVoicePrintResponse& operator=(const VerifyVoicePrintResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyVoicePrintResponse& default_instance();

  static inline const VerifyVoicePrintResponse* internal_default_instance() {
    return reinterpret_cast<const VerifyVoicePrintResponse*>(
               &_VerifyVoicePrintResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(VerifyVoicePrintResponse* other);

  // implements Message ----------------------------------------------

  inline VerifyVoicePrintResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyVoicePrintResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyVoicePrintResponse& from);
  void MergeFrom(const VerifyVoicePrintResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyVoicePrintResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.VoicePieceCtx NextPiece = 2;
  bool has_nextpiece() const;
  void clear_nextpiece();
  static const int kNextPieceFieldNumber = 2;
  const ::micromsg::VoicePieceCtx& nextpiece() const;
  ::micromsg::VoicePieceCtx* mutable_nextpiece();
  ::micromsg::VoicePieceCtx* release_nextpiece();
  void set_allocated_nextpiece(::micromsg::VoicePieceCtx* nextpiece);

  // required uint32 Result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // required uint32 VoiceTicket = 4;
  bool has_voiceticket() const;
  void clear_voiceticket();
  static const int kVoiceTicketFieldNumber = 4;
  ::google::protobuf::uint32 voiceticket() const;
  void set_voiceticket(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.VerifyVoicePrintResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_nextpiece();
  void clear_has_nextpiece();
  void set_has_result();
  void clear_has_result();
  void set_has_voiceticket();
  void clear_has_voiceticket();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::VoicePieceCtx* nextpiece_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 voiceticket_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyVoicePrintRsaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.VerifyVoicePrintRsaRequest) */ {
 public:
  VerifyVoicePrintRsaRequest();
  virtual ~VerifyVoicePrintRsaRequest();

  VerifyVoicePrintRsaRequest(const VerifyVoicePrintRsaRequest& from);

  inline VerifyVoicePrintRsaRequest& operator=(const VerifyVoicePrintRsaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyVoicePrintRsaRequest& default_instance();

  static inline const VerifyVoicePrintRsaRequest* internal_default_instance() {
    return reinterpret_cast<const VerifyVoicePrintRsaRequest*>(
               &_VerifyVoicePrintRsaRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(VerifyVoicePrintRsaRequest* other);

  // implements Message ----------------------------------------------

  inline VerifyVoicePrintRsaRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyVoicePrintRsaRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyVoicePrintRsaRequest& from);
  void MergeFrom(const VerifyVoicePrintRsaRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyVoicePrintRsaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string VerifyTicket = 5;
  bool has_verifyticket() const;
  void clear_verifyticket();
  static const int kVerifyTicketFieldNumber = 5;
  const ::std::string& verifyticket() const;
  void set_verifyticket(const ::std::string& value);
  #if LANG_CXX11
  void set_verifyticket(::std::string&& value);
  #endif
  void set_verifyticket(const char* value);
  void set_verifyticket(const char* value, size_t size);
  ::std::string* mutable_verifyticket();
  ::std::string* release_verifyticket();
  void set_allocated_verifyticket(::std::string* verifyticket);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.VoicePieceCtx Piece = 2;
  bool has_piece() const;
  void clear_piece();
  static const int kPieceFieldNumber = 2;
  const ::micromsg::VoicePieceCtx& piece() const;
  ::micromsg::VoicePieceCtx* mutable_piece();
  ::micromsg::VoicePieceCtx* release_piece();
  void set_allocated_piece(::micromsg::VoicePieceCtx* piece);

  // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 6;
  bool has_randomencrykey() const;
  void clear_randomencrykey();
  static const int kRandomEncryKeyFieldNumber = 6;
  const ::micromsg::SKBuiltinBuffer_t& randomencrykey() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_randomencrykey();
  ::micromsg::SKBuiltinBuffer_t* release_randomencrykey();
  void set_allocated_randomencrykey(::micromsg::SKBuiltinBuffer_t* randomencrykey);

  // required uint32 VoiceTicket = 3;
  bool has_voiceticket() const;
  void clear_voiceticket();
  static const int kVoiceTicketFieldNumber = 3;
  ::google::protobuf::uint32 voiceticket() const;
  void set_voiceticket(::google::protobuf::uint32 value);

  // required uint32 ResId = 4;
  bool has_resid() const;
  void clear_resid();
  static const int kResIdFieldNumber = 4;
  ::google::protobuf::uint32 resid() const;
  void set_resid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.VerifyVoicePrintRsaRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_piece();
  void clear_has_piece();
  void set_has_voiceticket();
  void clear_has_voiceticket();
  void set_has_resid();
  void clear_has_resid();
  void set_has_verifyticket();
  void clear_has_verifyticket();
  void set_has_randomencrykey();
  void clear_has_randomencrykey();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr verifyticket_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::VoicePieceCtx* piece_;
  ::micromsg::SKBuiltinBuffer_t* randomencrykey_;
  ::google::protobuf::uint32 voiceticket_;
  ::google::protobuf::uint32 resid_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyVoicePrintRsaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.VerifyVoicePrintRsaResponse) */ {
 public:
  VerifyVoicePrintRsaResponse();
  virtual ~VerifyVoicePrintRsaResponse();

  VerifyVoicePrintRsaResponse(const VerifyVoicePrintRsaResponse& from);

  inline VerifyVoicePrintRsaResponse& operator=(const VerifyVoicePrintRsaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyVoicePrintRsaResponse& default_instance();

  static inline const VerifyVoicePrintRsaResponse* internal_default_instance() {
    return reinterpret_cast<const VerifyVoicePrintRsaResponse*>(
               &_VerifyVoicePrintRsaResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(VerifyVoicePrintRsaResponse* other);

  // implements Message ----------------------------------------------

  inline VerifyVoicePrintRsaResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyVoicePrintRsaResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyVoicePrintRsaResponse& from);
  void MergeFrom(const VerifyVoicePrintRsaResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyVoicePrintRsaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AuthPwd = 5;
  bool has_authpwd() const;
  void clear_authpwd();
  static const int kAuthPwdFieldNumber = 5;
  const ::std::string& authpwd() const;
  void set_authpwd(const ::std::string& value);
  #if LANG_CXX11
  void set_authpwd(::std::string&& value);
  #endif
  void set_authpwd(const char* value);
  void set_authpwd(const char* value, size_t size);
  ::std::string* mutable_authpwd();
  ::std::string* release_authpwd();
  void set_allocated_authpwd(::std::string* authpwd);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.VoicePieceCtx NextPiece = 2;
  bool has_nextpiece() const;
  void clear_nextpiece();
  static const int kNextPieceFieldNumber = 2;
  const ::micromsg::VoicePieceCtx& nextpiece() const;
  ::micromsg::VoicePieceCtx* mutable_nextpiece();
  ::micromsg::VoicePieceCtx* release_nextpiece();
  void set_allocated_nextpiece(::micromsg::VoicePieceCtx* nextpiece);

  // required uint32 Result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // required uint32 VoiceTicket = 4;
  bool has_voiceticket() const;
  void clear_voiceticket();
  static const int kVoiceTicketFieldNumber = 4;
  ::google::protobuf::uint32 voiceticket() const;
  void set_voiceticket(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.VerifyVoicePrintRsaResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_nextpiece();
  void clear_has_nextpiece();
  void set_has_result();
  void clear_has_result();
  void set_has_voiceticket();
  void clear_has_voiceticket();
  void set_has_authpwd();
  void clear_has_authpwd();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr authpwd_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::VoicePieceCtx* nextpiece_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 voiceticket_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwitchOpVoicePrintRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SwitchOpVoicePrintRequest) */ {
 public:
  SwitchOpVoicePrintRequest();
  virtual ~SwitchOpVoicePrintRequest();

  SwitchOpVoicePrintRequest(const SwitchOpVoicePrintRequest& from);

  inline SwitchOpVoicePrintRequest& operator=(const SwitchOpVoicePrintRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchOpVoicePrintRequest& default_instance();

  static inline const SwitchOpVoicePrintRequest* internal_default_instance() {
    return reinterpret_cast<const SwitchOpVoicePrintRequest*>(
               &_SwitchOpVoicePrintRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SwitchOpVoicePrintRequest* other);

  // implements Message ----------------------------------------------

  inline SwitchOpVoicePrintRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SwitchOpVoicePrintRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SwitchOpVoicePrintRequest& from);
  void MergeFrom(const SwitchOpVoicePrintRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SwitchOpVoicePrintRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 opcode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SwitchOpVoicePrintRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 opcode_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwitchOpVoicePrintResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SwitchOpVoicePrintResponse) */ {
 public:
  SwitchOpVoicePrintResponse();
  virtual ~SwitchOpVoicePrintResponse();

  SwitchOpVoicePrintResponse(const SwitchOpVoicePrintResponse& from);

  inline SwitchOpVoicePrintResponse& operator=(const SwitchOpVoicePrintResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchOpVoicePrintResponse& default_instance();

  static inline const SwitchOpVoicePrintResponse* internal_default_instance() {
    return reinterpret_cast<const SwitchOpVoicePrintResponse*>(
               &_SwitchOpVoicePrintResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SwitchOpVoicePrintResponse* other);

  // implements Message ----------------------------------------------

  inline SwitchOpVoicePrintResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SwitchOpVoicePrintResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SwitchOpVoicePrintResponse& from);
  void MergeFrom(const SwitchOpVoicePrintResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SwitchOpVoicePrintResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 UserSwitch = 2;
  bool has_userswitch() const;
  void clear_userswitch();
  static const int kUserSwitchFieldNumber = 2;
  ::google::protobuf::uint32 userswitch() const;
  void set_userswitch(::google::protobuf::uint32 value);

  // required uint32 UserStatus = 3;
  bool has_userstatus() const;
  void clear_userstatus();
  static const int kUserStatusFieldNumber = 3;
  ::google::protobuf::uint32 userstatus() const;
  void set_userstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SwitchOpVoicePrintResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_userswitch();
  void clear_has_userswitch();
  void set_has_userstatus();
  void clear_has_userstatus();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 userswitch_;
  ::google::protobuf::uint32 userstatus_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVoiceprintTicketRsaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetVoiceprintTicketRsaRequest) */ {
 public:
  GetVoiceprintTicketRsaRequest();
  virtual ~GetVoiceprintTicketRsaRequest();

  GetVoiceprintTicketRsaRequest(const GetVoiceprintTicketRsaRequest& from);

  inline GetVoiceprintTicketRsaRequest& operator=(const GetVoiceprintTicketRsaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVoiceprintTicketRsaRequest& default_instance();

  static inline const GetVoiceprintTicketRsaRequest* internal_default_instance() {
    return reinterpret_cast<const GetVoiceprintTicketRsaRequest*>(
               &_GetVoiceprintTicketRsaRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GetVoiceprintTicketRsaRequest* other);

  // implements Message ----------------------------------------------

  inline GetVoiceprintTicketRsaRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVoiceprintTicketRsaRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVoiceprintTicketRsaRequest& from);
  void MergeFrom(const GetVoiceprintTicketRsaRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVoiceprintTicketRsaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
  bool has_randomencrykey() const;
  void clear_randomencrykey();
  static const int kRandomEncryKeyFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& randomencrykey() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_randomencrykey();
  ::micromsg::SKBuiltinBuffer_t* release_randomencrykey();
  void set_allocated_randomencrykey(::micromsg::SKBuiltinBuffer_t* randomencrykey);

  // required uint32 GetScence = 3;
  bool has_getscence() const;
  void clear_getscence();
  static const int kGetScenceFieldNumber = 3;
  ::google::protobuf::uint32 getscence() const;
  void set_getscence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetVoiceprintTicketRsaRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_username();
  void clear_has_username();
  void set_has_getscence();
  void clear_has_getscence();
  void set_has_randomencrykey();
  void clear_has_randomencrykey();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* randomencrykey_;
  ::google::protobuf::uint32 getscence_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVoiceprintTicketRsaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetVoiceprintTicketRsaResponse) */ {
 public:
  GetVoiceprintTicketRsaResponse();
  virtual ~GetVoiceprintTicketRsaResponse();

  GetVoiceprintTicketRsaResponse(const GetVoiceprintTicketRsaResponse& from);

  inline GetVoiceprintTicketRsaResponse& operator=(const GetVoiceprintTicketRsaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVoiceprintTicketRsaResponse& default_instance();

  static inline const GetVoiceprintTicketRsaResponse* internal_default_instance() {
    return reinterpret_cast<const GetVoiceprintTicketRsaResponse*>(
               &_GetVoiceprintTicketRsaResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetVoiceprintTicketRsaResponse* other);

  // implements Message ----------------------------------------------

  inline GetVoiceprintTicketRsaResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVoiceprintTicketRsaResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVoiceprintTicketRsaResponse& from);
  void MergeFrom(const GetVoiceprintTicketRsaResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVoiceprintTicketRsaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string VoiceprintTicket = 2;
  bool has_voiceprintticket() const;
  void clear_voiceprintticket();
  static const int kVoiceprintTicketFieldNumber = 2;
  const ::std::string& voiceprintticket() const;
  void set_voiceprintticket(const ::std::string& value);
  #if LANG_CXX11
  void set_voiceprintticket(::std::string&& value);
  #endif
  void set_voiceprintticket(const char* value);
  void set_voiceprintticket(const char* value, size_t size);
  ::std::string* mutable_voiceprintticket();
  ::std::string* release_voiceprintticket();
  void set_allocated_voiceprintticket(::std::string* voiceprintticket);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional .micromsg.BuiltinIPList BuiltinIPList = 3;
  bool has_builtiniplist() const;
  void clear_builtiniplist();
  static const int kBuiltinIPListFieldNumber = 3;
  const ::micromsg::BuiltinIPList& builtiniplist() const;
  ::micromsg::BuiltinIPList* mutable_builtiniplist();
  ::micromsg::BuiltinIPList* release_builtiniplist();
  void set_allocated_builtiniplist(::micromsg::BuiltinIPList* builtiniplist);

  // optional .micromsg.HostList NewHostList = 4;
  bool has_newhostlist() const;
  void clear_newhostlist();
  static const int kNewHostListFieldNumber = 4;
  const ::micromsg::HostList& newhostlist() const;
  ::micromsg::HostList* mutable_newhostlist();
  ::micromsg::HostList* release_newhostlist();
  void set_allocated_newhostlist(::micromsg::HostList* newhostlist);

  // optional .micromsg.NetworkControl NetworkControl = 5;
  bool has_networkcontrol() const;
  void clear_networkcontrol();
  static const int kNetworkControlFieldNumber = 5;
  const ::micromsg::NetworkControl& networkcontrol() const;
  ::micromsg::NetworkControl* mutable_networkcontrol();
  ::micromsg::NetworkControl* release_networkcontrol();
  void set_allocated_networkcontrol(::micromsg::NetworkControl* networkcontrol);

  // @@protoc_insertion_point(class_scope:micromsg.GetVoiceprintTicketRsaResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_voiceprintticket();
  void clear_has_voiceprintticket();
  void set_has_builtiniplist();
  void clear_has_builtiniplist();
  void set_has_newhostlist();
  void clear_has_newhostlist();
  void set_has_networkcontrol();
  void clear_has_networkcontrol();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr voiceprintticket_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::BuiltinIPList* builtiniplist_;
  ::micromsg::HostList* newhostlist_;
  ::micromsg::NetworkControl* networkcontrol_;
  friend struct protobuf_mmvoiceprint_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VoicePieceCtx

// required uint32 StartPos = 1;
inline bool VoicePieceCtx::has_startpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoicePieceCtx::set_has_startpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoicePieceCtx::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoicePieceCtx::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
inline ::google::protobuf::uint32 VoicePieceCtx::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.VoicePieceCtx.StartPos)
  return startpos_;
}
inline void VoicePieceCtx::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoicePieceCtx.StartPos)
}

// required uint32 PieceLen = 2;
inline bool VoicePieceCtx::has_piecelen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VoicePieceCtx::set_has_piecelen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VoicePieceCtx::clear_has_piecelen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VoicePieceCtx::clear_piecelen() {
  piecelen_ = 0u;
  clear_has_piecelen();
}
inline ::google::protobuf::uint32 VoicePieceCtx::piecelen() const {
  // @@protoc_insertion_point(field_get:micromsg.VoicePieceCtx.PieceLen)
  return piecelen_;
}
inline void VoicePieceCtx::set_piecelen(::google::protobuf::uint32 value) {
  set_has_piecelen();
  piecelen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoicePieceCtx.PieceLen)
}

// required uint32 PieceFlag = 3;
inline bool VoicePieceCtx::has_pieceflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VoicePieceCtx::set_has_pieceflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VoicePieceCtx::clear_has_pieceflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VoicePieceCtx::clear_pieceflag() {
  pieceflag_ = 0u;
  clear_has_pieceflag();
}
inline ::google::protobuf::uint32 VoicePieceCtx::pieceflag() const {
  // @@protoc_insertion_point(field_get:micromsg.VoicePieceCtx.PieceFlag)
  return pieceflag_;
}
inline void VoicePieceCtx::set_pieceflag(::google::protobuf::uint32 value) {
  set_has_pieceflag();
  pieceflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VoicePieceCtx.PieceFlag)
}

// required .micromsg.SKBuiltinBuffer_t PieceData = 4;
inline bool VoicePieceCtx::has_piecedata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoicePieceCtx::set_has_piecedata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoicePieceCtx::clear_has_piecedata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoicePieceCtx::clear_piecedata() {
  if (piecedata_ != NULL) piecedata_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_piecedata();
}
inline const ::micromsg::SKBuiltinBuffer_t& VoicePieceCtx::piecedata() const {
  // @@protoc_insertion_point(field_get:micromsg.VoicePieceCtx.PieceData)
  return piecedata_ != NULL ? *piecedata_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* VoicePieceCtx::mutable_piecedata() {
  set_has_piecedata();
  if (piecedata_ == NULL) {
    piecedata_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VoicePieceCtx.PieceData)
  return piecedata_;
}
inline ::micromsg::SKBuiltinBuffer_t* VoicePieceCtx::release_piecedata() {
  // @@protoc_insertion_point(field_release:micromsg.VoicePieceCtx.PieceData)
  clear_has_piecedata();
  ::micromsg::SKBuiltinBuffer_t* temp = piecedata_;
  piecedata_ = NULL;
  return temp;
}
inline void VoicePieceCtx::set_allocated_piecedata(::micromsg::SKBuiltinBuffer_t* piecedata) {
  delete piecedata_;
  piecedata_ = piecedata;
  if (piecedata) {
    set_has_piecedata();
  } else {
    clear_has_piecedata();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VoicePieceCtx.PieceData)
}

// -------------------------------------------------------------------

// ResourceCtx

// required uint32 ResId = 1;
inline bool ResourceCtx::has_resid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResourceCtx::set_has_resid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResourceCtx::clear_has_resid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResourceCtx::clear_resid() {
  resid_ = 0u;
  clear_has_resid();
}
inline ::google::protobuf::uint32 ResourceCtx::resid() const {
  // @@protoc_insertion_point(field_get:micromsg.ResourceCtx.ResId)
  return resid_;
}
inline void ResourceCtx::set_resid(::google::protobuf::uint32 value) {
  set_has_resid();
  resid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ResourceCtx.ResId)
}

// required .micromsg.SKBuiltinBuffer_t ResData = 2;
inline bool ResourceCtx::has_resdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResourceCtx::set_has_resdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResourceCtx::clear_has_resdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResourceCtx::clear_resdata() {
  if (resdata_ != NULL) resdata_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_resdata();
}
inline const ::micromsg::SKBuiltinBuffer_t& ResourceCtx::resdata() const {
  // @@protoc_insertion_point(field_get:micromsg.ResourceCtx.ResData)
  return resdata_ != NULL ? *resdata_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ResourceCtx::mutable_resdata() {
  set_has_resdata();
  if (resdata_ == NULL) {
    resdata_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ResourceCtx.ResData)
  return resdata_;
}
inline ::micromsg::SKBuiltinBuffer_t* ResourceCtx::release_resdata() {
  // @@protoc_insertion_point(field_release:micromsg.ResourceCtx.ResData)
  clear_has_resdata();
  ::micromsg::SKBuiltinBuffer_t* temp = resdata_;
  resdata_ = NULL;
  return temp;
}
inline void ResourceCtx::set_allocated_resdata(::micromsg::SKBuiltinBuffer_t* resdata) {
  delete resdata_;
  resdata_ = resdata;
  if (resdata) {
    set_has_resdata();
  } else {
    clear_has_resdata();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ResourceCtx.ResData)
}

// -------------------------------------------------------------------

// GetVoicePrintResourceRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetVoicePrintResourceRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetVoicePrintResourceRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetVoicePrintResourceRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetVoicePrintResourceRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetVoicePrintResourceRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetVoicePrintResourceRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetVoicePrintResourceRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetVoicePrintResourceRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRequest.BaseRequest)
}

// required uint32 ResScence = 2;
inline bool GetVoicePrintResourceRequest::has_resscence() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetVoicePrintResourceRequest::set_has_resscence() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetVoicePrintResourceRequest::clear_has_resscence() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetVoicePrintResourceRequest::clear_resscence() {
  resscence_ = 0u;
  clear_has_resscence();
}
inline ::google::protobuf::uint32 GetVoicePrintResourceRequest::resscence() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRequest.ResScence)
  return resscence_;
}
inline void GetVoicePrintResourceRequest::set_resscence(::google::protobuf::uint32 value) {
  set_has_resscence();
  resscence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetVoicePrintResourceRequest.ResScence)
}

// optional string VerifyTicket = 3;
inline bool GetVoicePrintResourceRequest::has_verifyticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetVoicePrintResourceRequest::set_has_verifyticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetVoicePrintResourceRequest::clear_has_verifyticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetVoicePrintResourceRequest::clear_verifyticket() {
  verifyticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyticket();
}
inline const ::std::string& GetVoicePrintResourceRequest::verifyticket() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
  return verifyticket_.GetNoArena();
}
inline void GetVoicePrintResourceRequest::set_verifyticket(const ::std::string& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
}
#if LANG_CXX11
inline void GetVoicePrintResourceRequest::set_verifyticket(::std::string&& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
}
#endif
inline void GetVoicePrintResourceRequest::set_verifyticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
}
inline void GetVoicePrintResourceRequest::set_verifyticket(const char* value, size_t size) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
}
inline ::std::string* GetVoicePrintResourceRequest::mutable_verifyticket() {
  set_has_verifyticket();
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
  return verifyticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVoicePrintResourceRequest::release_verifyticket() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
  clear_has_verifyticket();
  return verifyticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVoicePrintResourceRequest::set_allocated_verifyticket(::std::string* verifyticket) {
  if (verifyticket != NULL) {
    set_has_verifyticket();
  } else {
    clear_has_verifyticket();
  }
  verifyticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRequest.VerifyTicket)
}

// -------------------------------------------------------------------

// GetVoicePrintResourceResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetVoicePrintResourceResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetVoicePrintResourceResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetVoicePrintResourceResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetVoicePrintResourceResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetVoicePrintResourceResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetVoicePrintResourceResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetVoicePrintResourceResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetVoicePrintResourceResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceResponse.BaseResponse)
}

// required .micromsg.ResourceCtx ResourceData = 2;
inline bool GetVoicePrintResourceResponse::has_resourcedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetVoicePrintResourceResponse::set_has_resourcedata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetVoicePrintResourceResponse::clear_has_resourcedata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetVoicePrintResourceResponse::clear_resourcedata() {
  if (resourcedata_ != NULL) resourcedata_->::micromsg::ResourceCtx::Clear();
  clear_has_resourcedata();
}
inline const ::micromsg::ResourceCtx& GetVoicePrintResourceResponse::resourcedata() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceResponse.ResourceData)
  return resourcedata_ != NULL ? *resourcedata_
                         : *::micromsg::ResourceCtx::internal_default_instance();
}
inline ::micromsg::ResourceCtx* GetVoicePrintResourceResponse::mutable_resourcedata() {
  set_has_resourcedata();
  if (resourcedata_ == NULL) {
    resourcedata_ = new ::micromsg::ResourceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceResponse.ResourceData)
  return resourcedata_;
}
inline ::micromsg::ResourceCtx* GetVoicePrintResourceResponse::release_resourcedata() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceResponse.ResourceData)
  clear_has_resourcedata();
  ::micromsg::ResourceCtx* temp = resourcedata_;
  resourcedata_ = NULL;
  return temp;
}
inline void GetVoicePrintResourceResponse::set_allocated_resourcedata(::micromsg::ResourceCtx* resourcedata) {
  delete resourcedata_;
  resourcedata_ = resourcedata;
  if (resourcedata) {
    set_has_resourcedata();
  } else {
    clear_has_resourcedata();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceResponse.ResourceData)
}

// -------------------------------------------------------------------

// GetVoicePrintResourceRsaRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetVoicePrintResourceRsaRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetVoicePrintResourceRsaRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetVoicePrintResourceRsaRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetVoicePrintResourceRsaRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetVoicePrintResourceRsaRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetVoicePrintResourceRsaRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRsaRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetVoicePrintResourceRsaRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRsaRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetVoicePrintResourceRsaRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRsaRequest.BaseRequest)
}

// required uint32 ResScence = 2;
inline bool GetVoicePrintResourceRsaRequest::has_resscence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetVoicePrintResourceRsaRequest::set_has_resscence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetVoicePrintResourceRsaRequest::clear_has_resscence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetVoicePrintResourceRsaRequest::clear_resscence() {
  resscence_ = 0u;
  clear_has_resscence();
}
inline ::google::protobuf::uint32 GetVoicePrintResourceRsaRequest::resscence() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaRequest.ResScence)
  return resscence_;
}
inline void GetVoicePrintResourceRsaRequest::set_resscence(::google::protobuf::uint32 value) {
  set_has_resscence();
  resscence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetVoicePrintResourceRsaRequest.ResScence)
}

// optional string VerifyTicket = 3;
inline bool GetVoicePrintResourceRsaRequest::has_verifyticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetVoicePrintResourceRsaRequest::set_has_verifyticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetVoicePrintResourceRsaRequest::clear_has_verifyticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetVoicePrintResourceRsaRequest::clear_verifyticket() {
  verifyticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyticket();
}
inline const ::std::string& GetVoicePrintResourceRsaRequest::verifyticket() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
  return verifyticket_.GetNoArena();
}
inline void GetVoicePrintResourceRsaRequest::set_verifyticket(const ::std::string& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
}
#if LANG_CXX11
inline void GetVoicePrintResourceRsaRequest::set_verifyticket(::std::string&& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
}
#endif
inline void GetVoicePrintResourceRsaRequest::set_verifyticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
}
inline void GetVoicePrintResourceRsaRequest::set_verifyticket(const char* value, size_t size) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
}
inline ::std::string* GetVoicePrintResourceRsaRequest::mutable_verifyticket() {
  set_has_verifyticket();
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
  return verifyticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVoicePrintResourceRsaRequest::release_verifyticket() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
  clear_has_verifyticket();
  return verifyticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVoicePrintResourceRsaRequest::set_allocated_verifyticket(::std::string* verifyticket) {
  if (verifyticket != NULL) {
    set_has_verifyticket();
  } else {
    clear_has_verifyticket();
  }
  verifyticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRsaRequest.VerifyTicket)
}

// required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
inline bool GetVoicePrintResourceRsaRequest::has_randomencrykey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetVoicePrintResourceRsaRequest::set_has_randomencrykey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetVoicePrintResourceRsaRequest::clear_has_randomencrykey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetVoicePrintResourceRsaRequest::clear_randomencrykey() {
  if (randomencrykey_ != NULL) randomencrykey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_randomencrykey();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetVoicePrintResourceRsaRequest::randomencrykey() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaRequest.RandomEncryKey)
  return randomencrykey_ != NULL ? *randomencrykey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetVoicePrintResourceRsaRequest::mutable_randomencrykey() {
  set_has_randomencrykey();
  if (randomencrykey_ == NULL) {
    randomencrykey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRsaRequest.RandomEncryKey)
  return randomencrykey_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetVoicePrintResourceRsaRequest::release_randomencrykey() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRsaRequest.RandomEncryKey)
  clear_has_randomencrykey();
  ::micromsg::SKBuiltinBuffer_t* temp = randomencrykey_;
  randomencrykey_ = NULL;
  return temp;
}
inline void GetVoicePrintResourceRsaRequest::set_allocated_randomencrykey(::micromsg::SKBuiltinBuffer_t* randomencrykey) {
  delete randomencrykey_;
  randomencrykey_ = randomencrykey;
  if (randomencrykey) {
    set_has_randomencrykey();
  } else {
    clear_has_randomencrykey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRsaRequest.RandomEncryKey)
}

// -------------------------------------------------------------------

// GetVoicePrintResourceRsaResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetVoicePrintResourceRsaResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetVoicePrintResourceRsaResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetVoicePrintResourceRsaResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetVoicePrintResourceRsaResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetVoicePrintResourceRsaResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetVoicePrintResourceRsaResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRsaResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetVoicePrintResourceRsaResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRsaResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetVoicePrintResourceRsaResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRsaResponse.BaseResponse)
}

// required .micromsg.ResourceCtx ResourceData = 2;
inline bool GetVoicePrintResourceRsaResponse::has_resourcedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetVoicePrintResourceRsaResponse::set_has_resourcedata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetVoicePrintResourceRsaResponse::clear_has_resourcedata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetVoicePrintResourceRsaResponse::clear_resourcedata() {
  if (resourcedata_ != NULL) resourcedata_->::micromsg::ResourceCtx::Clear();
  clear_has_resourcedata();
}
inline const ::micromsg::ResourceCtx& GetVoicePrintResourceRsaResponse::resourcedata() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoicePrintResourceRsaResponse.ResourceData)
  return resourcedata_ != NULL ? *resourcedata_
                         : *::micromsg::ResourceCtx::internal_default_instance();
}
inline ::micromsg::ResourceCtx* GetVoicePrintResourceRsaResponse::mutable_resourcedata() {
  set_has_resourcedata();
  if (resourcedata_ == NULL) {
    resourcedata_ = new ::micromsg::ResourceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoicePrintResourceRsaResponse.ResourceData)
  return resourcedata_;
}
inline ::micromsg::ResourceCtx* GetVoicePrintResourceRsaResponse::release_resourcedata() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoicePrintResourceRsaResponse.ResourceData)
  clear_has_resourcedata();
  ::micromsg::ResourceCtx* temp = resourcedata_;
  resourcedata_ = NULL;
  return temp;
}
inline void GetVoicePrintResourceRsaResponse::set_allocated_resourcedata(::micromsg::ResourceCtx* resourcedata) {
  delete resourcedata_;
  resourcedata_ = resourcedata;
  if (resourcedata) {
    set_has_resourcedata();
  } else {
    clear_has_resourcedata();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoicePrintResourceRsaResponse.ResourceData)
}

// -------------------------------------------------------------------

// RegisterVoicePrintRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RegisterVoicePrintRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterVoicePrintRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterVoicePrintRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterVoicePrintRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RegisterVoicePrintRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RegisterVoicePrintRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RegisterVoicePrintRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RegisterVoicePrintRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RegisterVoicePrintRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RegisterVoicePrintRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RegisterVoicePrintRequest.BaseRequest)
}

// required uint32 Step = 2;
inline bool RegisterVoicePrintRequest::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RegisterVoicePrintRequest::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RegisterVoicePrintRequest::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RegisterVoicePrintRequest::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 RegisterVoicePrintRequest::step() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintRequest.Step)
  return step_;
}
inline void RegisterVoicePrintRequest::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintRequest.Step)
}

// required uint32 VoiceTicket = 3;
inline bool RegisterVoicePrintRequest::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RegisterVoicePrintRequest::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RegisterVoicePrintRequest::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RegisterVoicePrintRequest::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
inline ::google::protobuf::uint32 RegisterVoicePrintRequest::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintRequest.VoiceTicket)
  return voiceticket_;
}
inline void RegisterVoicePrintRequest::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintRequest.VoiceTicket)
}

// required .micromsg.VoicePieceCtx PieceData = 4;
inline bool RegisterVoicePrintRequest::has_piecedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterVoicePrintRequest::set_has_piecedata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterVoicePrintRequest::clear_has_piecedata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterVoicePrintRequest::clear_piecedata() {
  if (piecedata_ != NULL) piecedata_->::micromsg::VoicePieceCtx::Clear();
  clear_has_piecedata();
}
inline const ::micromsg::VoicePieceCtx& RegisterVoicePrintRequest::piecedata() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintRequest.PieceData)
  return piecedata_ != NULL ? *piecedata_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
inline ::micromsg::VoicePieceCtx* RegisterVoicePrintRequest::mutable_piecedata() {
  set_has_piecedata();
  if (piecedata_ == NULL) {
    piecedata_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RegisterVoicePrintRequest.PieceData)
  return piecedata_;
}
inline ::micromsg::VoicePieceCtx* RegisterVoicePrintRequest::release_piecedata() {
  // @@protoc_insertion_point(field_release:micromsg.RegisterVoicePrintRequest.PieceData)
  clear_has_piecedata();
  ::micromsg::VoicePieceCtx* temp = piecedata_;
  piecedata_ = NULL;
  return temp;
}
inline void RegisterVoicePrintRequest::set_allocated_piecedata(::micromsg::VoicePieceCtx* piecedata) {
  delete piecedata_;
  piecedata_ = piecedata;
  if (piecedata) {
    set_has_piecedata();
  } else {
    clear_has_piecedata();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RegisterVoicePrintRequest.PieceData)
}

// required uint32 ResId = 5;
inline bool RegisterVoicePrintRequest::has_resid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RegisterVoicePrintRequest::set_has_resid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RegisterVoicePrintRequest::clear_has_resid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RegisterVoicePrintRequest::clear_resid() {
  resid_ = 0u;
  clear_has_resid();
}
inline ::google::protobuf::uint32 RegisterVoicePrintRequest::resid() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintRequest.ResId)
  return resid_;
}
inline void RegisterVoicePrintRequest::set_resid(::google::protobuf::uint32 value) {
  set_has_resid();
  resid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintRequest.ResId)
}

// -------------------------------------------------------------------

// RegisterVoicePrintResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool RegisterVoicePrintResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterVoicePrintResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterVoicePrintResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterVoicePrintResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RegisterVoicePrintResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RegisterVoicePrintResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RegisterVoicePrintResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RegisterVoicePrintResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RegisterVoicePrintResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RegisterVoicePrintResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RegisterVoicePrintResponse.BaseResponse)
}

// required int32 ResgisterRet = 2;
inline bool RegisterVoicePrintResponse::has_resgisterret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RegisterVoicePrintResponse::set_has_resgisterret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RegisterVoicePrintResponse::clear_has_resgisterret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RegisterVoicePrintResponse::clear_resgisterret() {
  resgisterret_ = 0;
  clear_has_resgisterret();
}
inline ::google::protobuf::int32 RegisterVoicePrintResponse::resgisterret() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintResponse.ResgisterRet)
  return resgisterret_;
}
inline void RegisterVoicePrintResponse::set_resgisterret(::google::protobuf::int32 value) {
  set_has_resgisterret();
  resgisterret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintResponse.ResgisterRet)
}

// required uint32 NextStep = 3;
inline bool RegisterVoicePrintResponse::has_nextstep() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RegisterVoicePrintResponse::set_has_nextstep() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RegisterVoicePrintResponse::clear_has_nextstep() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RegisterVoicePrintResponse::clear_nextstep() {
  nextstep_ = 0u;
  clear_has_nextstep();
}
inline ::google::protobuf::uint32 RegisterVoicePrintResponse::nextstep() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintResponse.NextStep)
  return nextstep_;
}
inline void RegisterVoicePrintResponse::set_nextstep(::google::protobuf::uint32 value) {
  set_has_nextstep();
  nextstep_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintResponse.NextStep)
}

// required .micromsg.VoicePieceCtx NextPiece = 4;
inline bool RegisterVoicePrintResponse::has_nextpiece() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterVoicePrintResponse::set_has_nextpiece() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterVoicePrintResponse::clear_has_nextpiece() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterVoicePrintResponse::clear_nextpiece() {
  if (nextpiece_ != NULL) nextpiece_->::micromsg::VoicePieceCtx::Clear();
  clear_has_nextpiece();
}
inline const ::micromsg::VoicePieceCtx& RegisterVoicePrintResponse::nextpiece() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintResponse.NextPiece)
  return nextpiece_ != NULL ? *nextpiece_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
inline ::micromsg::VoicePieceCtx* RegisterVoicePrintResponse::mutable_nextpiece() {
  set_has_nextpiece();
  if (nextpiece_ == NULL) {
    nextpiece_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RegisterVoicePrintResponse.NextPiece)
  return nextpiece_;
}
inline ::micromsg::VoicePieceCtx* RegisterVoicePrintResponse::release_nextpiece() {
  // @@protoc_insertion_point(field_release:micromsg.RegisterVoicePrintResponse.NextPiece)
  clear_has_nextpiece();
  ::micromsg::VoicePieceCtx* temp = nextpiece_;
  nextpiece_ = NULL;
  return temp;
}
inline void RegisterVoicePrintResponse::set_allocated_nextpiece(::micromsg::VoicePieceCtx* nextpiece) {
  delete nextpiece_;
  nextpiece_ = nextpiece;
  if (nextpiece) {
    set_has_nextpiece();
  } else {
    clear_has_nextpiece();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RegisterVoicePrintResponse.NextPiece)
}

// required uint32 VoiceTicket = 5;
inline bool RegisterVoicePrintResponse::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RegisterVoicePrintResponse::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RegisterVoicePrintResponse::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RegisterVoicePrintResponse::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
inline ::google::protobuf::uint32 RegisterVoicePrintResponse::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RegisterVoicePrintResponse.VoiceTicket)
  return voiceticket_;
}
inline void RegisterVoicePrintResponse::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RegisterVoicePrintResponse.VoiceTicket)
}

// -------------------------------------------------------------------

// VerifyVoicePrintRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool VerifyVoicePrintRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyVoicePrintRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyVoicePrintRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyVoicePrintRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& VerifyVoicePrintRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* VerifyVoicePrintRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* VerifyVoicePrintRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void VerifyVoicePrintRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRequest.BaseRequest)
}

// required .micromsg.VoicePieceCtx Piece = 2;
inline bool VerifyVoicePrintRequest::has_piece() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyVoicePrintRequest::set_has_piece() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyVoicePrintRequest::clear_has_piece() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyVoicePrintRequest::clear_piece() {
  if (piece_ != NULL) piece_->::micromsg::VoicePieceCtx::Clear();
  clear_has_piece();
}
inline const ::micromsg::VoicePieceCtx& VerifyVoicePrintRequest::piece() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRequest.Piece)
  return piece_ != NULL ? *piece_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
inline ::micromsg::VoicePieceCtx* VerifyVoicePrintRequest::mutable_piece() {
  set_has_piece();
  if (piece_ == NULL) {
    piece_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRequest.Piece)
  return piece_;
}
inline ::micromsg::VoicePieceCtx* VerifyVoicePrintRequest::release_piece() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRequest.Piece)
  clear_has_piece();
  ::micromsg::VoicePieceCtx* temp = piece_;
  piece_ = NULL;
  return temp;
}
inline void VerifyVoicePrintRequest::set_allocated_piece(::micromsg::VoicePieceCtx* piece) {
  delete piece_;
  piece_ = piece;
  if (piece) {
    set_has_piece();
  } else {
    clear_has_piece();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRequest.Piece)
}

// required uint32 VoiceTicket = 3;
inline bool VerifyVoicePrintRequest::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VerifyVoicePrintRequest::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VerifyVoicePrintRequest::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VerifyVoicePrintRequest::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
inline ::google::protobuf::uint32 VerifyVoicePrintRequest::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRequest.VoiceTicket)
  return voiceticket_;
}
inline void VerifyVoicePrintRequest::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRequest.VoiceTicket)
}

// required uint32 ResId = 4;
inline bool VerifyVoicePrintRequest::has_resid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VerifyVoicePrintRequest::set_has_resid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VerifyVoicePrintRequest::clear_has_resid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VerifyVoicePrintRequest::clear_resid() {
  resid_ = 0u;
  clear_has_resid();
}
inline ::google::protobuf::uint32 VerifyVoicePrintRequest::resid() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRequest.ResId)
  return resid_;
}
inline void VerifyVoicePrintRequest::set_resid(::google::protobuf::uint32 value) {
  set_has_resid();
  resid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRequest.ResId)
}

// optional string VerifyTicket = 5;
inline bool VerifyVoicePrintRequest::has_verifyticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyVoicePrintRequest::set_has_verifyticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyVoicePrintRequest::clear_has_verifyticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyVoicePrintRequest::clear_verifyticket() {
  verifyticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyticket();
}
inline const ::std::string& VerifyVoicePrintRequest::verifyticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRequest.VerifyTicket)
  return verifyticket_.GetNoArena();
}
inline void VerifyVoicePrintRequest::set_verifyticket(const ::std::string& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRequest.VerifyTicket)
}
#if LANG_CXX11
inline void VerifyVoicePrintRequest::set_verifyticket(::std::string&& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VerifyVoicePrintRequest.VerifyTicket)
}
#endif
inline void VerifyVoicePrintRequest::set_verifyticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VerifyVoicePrintRequest.VerifyTicket)
}
inline void VerifyVoicePrintRequest::set_verifyticket(const char* value, size_t size) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VerifyVoicePrintRequest.VerifyTicket)
}
inline ::std::string* VerifyVoicePrintRequest::mutable_verifyticket() {
  set_has_verifyticket();
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRequest.VerifyTicket)
  return verifyticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyVoicePrintRequest::release_verifyticket() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRequest.VerifyTicket)
  clear_has_verifyticket();
  return verifyticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyVoicePrintRequest::set_allocated_verifyticket(::std::string* verifyticket) {
  if (verifyticket != NULL) {
    set_has_verifyticket();
  } else {
    clear_has_verifyticket();
  }
  verifyticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRequest.VerifyTicket)
}

// -------------------------------------------------------------------

// VerifyVoicePrintResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool VerifyVoicePrintResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyVoicePrintResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyVoicePrintResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyVoicePrintResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& VerifyVoicePrintResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* VerifyVoicePrintResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* VerifyVoicePrintResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void VerifyVoicePrintResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintResponse.BaseResponse)
}

// required .micromsg.VoicePieceCtx NextPiece = 2;
inline bool VerifyVoicePrintResponse::has_nextpiece() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyVoicePrintResponse::set_has_nextpiece() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyVoicePrintResponse::clear_has_nextpiece() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyVoicePrintResponse::clear_nextpiece() {
  if (nextpiece_ != NULL) nextpiece_->::micromsg::VoicePieceCtx::Clear();
  clear_has_nextpiece();
}
inline const ::micromsg::VoicePieceCtx& VerifyVoicePrintResponse::nextpiece() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintResponse.NextPiece)
  return nextpiece_ != NULL ? *nextpiece_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
inline ::micromsg::VoicePieceCtx* VerifyVoicePrintResponse::mutable_nextpiece() {
  set_has_nextpiece();
  if (nextpiece_ == NULL) {
    nextpiece_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintResponse.NextPiece)
  return nextpiece_;
}
inline ::micromsg::VoicePieceCtx* VerifyVoicePrintResponse::release_nextpiece() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintResponse.NextPiece)
  clear_has_nextpiece();
  ::micromsg::VoicePieceCtx* temp = nextpiece_;
  nextpiece_ = NULL;
  return temp;
}
inline void VerifyVoicePrintResponse::set_allocated_nextpiece(::micromsg::VoicePieceCtx* nextpiece) {
  delete nextpiece_;
  nextpiece_ = nextpiece;
  if (nextpiece) {
    set_has_nextpiece();
  } else {
    clear_has_nextpiece();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintResponse.NextPiece)
}

// required uint32 Result = 3;
inline bool VerifyVoicePrintResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyVoicePrintResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyVoicePrintResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyVoicePrintResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 VerifyVoicePrintResponse::result() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintResponse.Result)
  return result_;
}
inline void VerifyVoicePrintResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintResponse.Result)
}

// required uint32 VoiceTicket = 4;
inline bool VerifyVoicePrintResponse::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VerifyVoicePrintResponse::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VerifyVoicePrintResponse::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VerifyVoicePrintResponse::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
inline ::google::protobuf::uint32 VerifyVoicePrintResponse::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintResponse.VoiceTicket)
  return voiceticket_;
}
inline void VerifyVoicePrintResponse::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintResponse.VoiceTicket)
}

// -------------------------------------------------------------------

// VerifyVoicePrintRsaRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool VerifyVoicePrintRsaRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyVoicePrintRsaRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyVoicePrintRsaRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyVoicePrintRsaRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& VerifyVoicePrintRsaRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* VerifyVoicePrintRsaRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* VerifyVoicePrintRsaRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void VerifyVoicePrintRsaRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaRequest.BaseRequest)
}

// required .micromsg.VoicePieceCtx Piece = 2;
inline bool VerifyVoicePrintRsaRequest::has_piece() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyVoicePrintRsaRequest::set_has_piece() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyVoicePrintRsaRequest::clear_has_piece() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyVoicePrintRsaRequest::clear_piece() {
  if (piece_ != NULL) piece_->::micromsg::VoicePieceCtx::Clear();
  clear_has_piece();
}
inline const ::micromsg::VoicePieceCtx& VerifyVoicePrintRsaRequest::piece() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.Piece)
  return piece_ != NULL ? *piece_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
inline ::micromsg::VoicePieceCtx* VerifyVoicePrintRsaRequest::mutable_piece() {
  set_has_piece();
  if (piece_ == NULL) {
    piece_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaRequest.Piece)
  return piece_;
}
inline ::micromsg::VoicePieceCtx* VerifyVoicePrintRsaRequest::release_piece() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaRequest.Piece)
  clear_has_piece();
  ::micromsg::VoicePieceCtx* temp = piece_;
  piece_ = NULL;
  return temp;
}
inline void VerifyVoicePrintRsaRequest::set_allocated_piece(::micromsg::VoicePieceCtx* piece) {
  delete piece_;
  piece_ = piece;
  if (piece) {
    set_has_piece();
  } else {
    clear_has_piece();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaRequest.Piece)
}

// required uint32 VoiceTicket = 3;
inline bool VerifyVoicePrintRsaRequest::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VerifyVoicePrintRsaRequest::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VerifyVoicePrintRsaRequest::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VerifyVoicePrintRsaRequest::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
inline ::google::protobuf::uint32 VerifyVoicePrintRsaRequest::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.VoiceTicket)
  return voiceticket_;
}
inline void VerifyVoicePrintRsaRequest::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaRequest.VoiceTicket)
}

// required uint32 ResId = 4;
inline bool VerifyVoicePrintRsaRequest::has_resid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VerifyVoicePrintRsaRequest::set_has_resid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VerifyVoicePrintRsaRequest::clear_has_resid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VerifyVoicePrintRsaRequest::clear_resid() {
  resid_ = 0u;
  clear_has_resid();
}
inline ::google::protobuf::uint32 VerifyVoicePrintRsaRequest::resid() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.ResId)
  return resid_;
}
inline void VerifyVoicePrintRsaRequest::set_resid(::google::protobuf::uint32 value) {
  set_has_resid();
  resid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaRequest.ResId)
}

// optional string VerifyTicket = 5;
inline bool VerifyVoicePrintRsaRequest::has_verifyticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyVoicePrintRsaRequest::set_has_verifyticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyVoicePrintRsaRequest::clear_has_verifyticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyVoicePrintRsaRequest::clear_verifyticket() {
  verifyticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyticket();
}
inline const ::std::string& VerifyVoicePrintRsaRequest::verifyticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
  return verifyticket_.GetNoArena();
}
inline void VerifyVoicePrintRsaRequest::set_verifyticket(const ::std::string& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
}
#if LANG_CXX11
inline void VerifyVoicePrintRsaRequest::set_verifyticket(::std::string&& value) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
}
#endif
inline void VerifyVoicePrintRsaRequest::set_verifyticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
}
inline void VerifyVoicePrintRsaRequest::set_verifyticket(const char* value, size_t size) {
  set_has_verifyticket();
  verifyticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
}
inline ::std::string* VerifyVoicePrintRsaRequest::mutable_verifyticket() {
  set_has_verifyticket();
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
  return verifyticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyVoicePrintRsaRequest::release_verifyticket() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
  clear_has_verifyticket();
  return verifyticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyVoicePrintRsaRequest::set_allocated_verifyticket(::std::string* verifyticket) {
  if (verifyticket != NULL) {
    set_has_verifyticket();
  } else {
    clear_has_verifyticket();
  }
  verifyticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaRequest.VerifyTicket)
}

// required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 6;
inline bool VerifyVoicePrintRsaRequest::has_randomencrykey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VerifyVoicePrintRsaRequest::set_has_randomencrykey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VerifyVoicePrintRsaRequest::clear_has_randomencrykey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VerifyVoicePrintRsaRequest::clear_randomencrykey() {
  if (randomencrykey_ != NULL) randomencrykey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_randomencrykey();
}
inline const ::micromsg::SKBuiltinBuffer_t& VerifyVoicePrintRsaRequest::randomencrykey() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaRequest.RandomEncryKey)
  return randomencrykey_ != NULL ? *randomencrykey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* VerifyVoicePrintRsaRequest::mutable_randomencrykey() {
  set_has_randomencrykey();
  if (randomencrykey_ == NULL) {
    randomencrykey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaRequest.RandomEncryKey)
  return randomencrykey_;
}
inline ::micromsg::SKBuiltinBuffer_t* VerifyVoicePrintRsaRequest::release_randomencrykey() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaRequest.RandomEncryKey)
  clear_has_randomencrykey();
  ::micromsg::SKBuiltinBuffer_t* temp = randomencrykey_;
  randomencrykey_ = NULL;
  return temp;
}
inline void VerifyVoicePrintRsaRequest::set_allocated_randomencrykey(::micromsg::SKBuiltinBuffer_t* randomencrykey) {
  delete randomencrykey_;
  randomencrykey_ = randomencrykey;
  if (randomencrykey) {
    set_has_randomencrykey();
  } else {
    clear_has_randomencrykey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaRequest.RandomEncryKey)
}

// -------------------------------------------------------------------

// VerifyVoicePrintRsaResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool VerifyVoicePrintRsaResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyVoicePrintRsaResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyVoicePrintRsaResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyVoicePrintRsaResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& VerifyVoicePrintRsaResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* VerifyVoicePrintRsaResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* VerifyVoicePrintRsaResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void VerifyVoicePrintRsaResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaResponse.BaseResponse)
}

// required .micromsg.VoicePieceCtx NextPiece = 2;
inline bool VerifyVoicePrintRsaResponse::has_nextpiece() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyVoicePrintRsaResponse::set_has_nextpiece() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyVoicePrintRsaResponse::clear_has_nextpiece() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyVoicePrintRsaResponse::clear_nextpiece() {
  if (nextpiece_ != NULL) nextpiece_->::micromsg::VoicePieceCtx::Clear();
  clear_has_nextpiece();
}
inline const ::micromsg::VoicePieceCtx& VerifyVoicePrintRsaResponse::nextpiece() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaResponse.NextPiece)
  return nextpiece_ != NULL ? *nextpiece_
                         : *::micromsg::VoicePieceCtx::internal_default_instance();
}
inline ::micromsg::VoicePieceCtx* VerifyVoicePrintRsaResponse::mutable_nextpiece() {
  set_has_nextpiece();
  if (nextpiece_ == NULL) {
    nextpiece_ = new ::micromsg::VoicePieceCtx;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaResponse.NextPiece)
  return nextpiece_;
}
inline ::micromsg::VoicePieceCtx* VerifyVoicePrintRsaResponse::release_nextpiece() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaResponse.NextPiece)
  clear_has_nextpiece();
  ::micromsg::VoicePieceCtx* temp = nextpiece_;
  nextpiece_ = NULL;
  return temp;
}
inline void VerifyVoicePrintRsaResponse::set_allocated_nextpiece(::micromsg::VoicePieceCtx* nextpiece) {
  delete nextpiece_;
  nextpiece_ = nextpiece;
  if (nextpiece) {
    set_has_nextpiece();
  } else {
    clear_has_nextpiece();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaResponse.NextPiece)
}

// required uint32 Result = 3;
inline bool VerifyVoicePrintRsaResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VerifyVoicePrintRsaResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VerifyVoicePrintRsaResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VerifyVoicePrintRsaResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 VerifyVoicePrintRsaResponse::result() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaResponse.Result)
  return result_;
}
inline void VerifyVoicePrintRsaResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaResponse.Result)
}

// required uint32 VoiceTicket = 4;
inline bool VerifyVoicePrintRsaResponse::has_voiceticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VerifyVoicePrintRsaResponse::set_has_voiceticket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VerifyVoicePrintRsaResponse::clear_has_voiceticket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VerifyVoicePrintRsaResponse::clear_voiceticket() {
  voiceticket_ = 0u;
  clear_has_voiceticket();
}
inline ::google::protobuf::uint32 VerifyVoicePrintRsaResponse::voiceticket() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaResponse.VoiceTicket)
  return voiceticket_;
}
inline void VerifyVoicePrintRsaResponse::set_voiceticket(::google::protobuf::uint32 value) {
  set_has_voiceticket();
  voiceticket_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaResponse.VoiceTicket)
}

// optional string AuthPwd = 5;
inline bool VerifyVoicePrintRsaResponse::has_authpwd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyVoicePrintRsaResponse::set_has_authpwd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyVoicePrintRsaResponse::clear_has_authpwd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyVoicePrintRsaResponse::clear_authpwd() {
  authpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authpwd();
}
inline const ::std::string& VerifyVoicePrintRsaResponse::authpwd() const {
  // @@protoc_insertion_point(field_get:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
  return authpwd_.GetNoArena();
}
inline void VerifyVoicePrintRsaResponse::set_authpwd(const ::std::string& value) {
  set_has_authpwd();
  authpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
}
#if LANG_CXX11
inline void VerifyVoicePrintRsaResponse::set_authpwd(::std::string&& value) {
  set_has_authpwd();
  authpwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
}
#endif
inline void VerifyVoicePrintRsaResponse::set_authpwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_authpwd();
  authpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
}
inline void VerifyVoicePrintRsaResponse::set_authpwd(const char* value, size_t size) {
  set_has_authpwd();
  authpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
}
inline ::std::string* VerifyVoicePrintRsaResponse::mutable_authpwd() {
  set_has_authpwd();
  // @@protoc_insertion_point(field_mutable:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
  return authpwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyVoicePrintRsaResponse::release_authpwd() {
  // @@protoc_insertion_point(field_release:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
  clear_has_authpwd();
  return authpwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyVoicePrintRsaResponse::set_allocated_authpwd(::std::string* authpwd) {
  if (authpwd != NULL) {
    set_has_authpwd();
  } else {
    clear_has_authpwd();
  }
  authpwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authpwd);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VerifyVoicePrintRsaResponse.AuthPwd)
}

// -------------------------------------------------------------------

// SwitchOpVoicePrintRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SwitchOpVoicePrintRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SwitchOpVoicePrintRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SwitchOpVoicePrintRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SwitchOpVoicePrintRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SwitchOpVoicePrintRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SwitchOpVoicePrintRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SwitchOpVoicePrintRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SwitchOpVoicePrintRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SwitchOpVoicePrintRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SwitchOpVoicePrintRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SwitchOpVoicePrintRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SwitchOpVoicePrintRequest.BaseRequest)
}

// required uint32 opcode = 2;
inline bool SwitchOpVoicePrintRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SwitchOpVoicePrintRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SwitchOpVoicePrintRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SwitchOpVoicePrintRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 SwitchOpVoicePrintRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.SwitchOpVoicePrintRequest.opcode)
  return opcode_;
}
inline void SwitchOpVoicePrintRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SwitchOpVoicePrintRequest.opcode)
}

// -------------------------------------------------------------------

// SwitchOpVoicePrintResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SwitchOpVoicePrintResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SwitchOpVoicePrintResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SwitchOpVoicePrintResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SwitchOpVoicePrintResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SwitchOpVoicePrintResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SwitchOpVoicePrintResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SwitchOpVoicePrintResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SwitchOpVoicePrintResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SwitchOpVoicePrintResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SwitchOpVoicePrintResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SwitchOpVoicePrintResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SwitchOpVoicePrintResponse.BaseResponse)
}

// required uint32 UserSwitch = 2;
inline bool SwitchOpVoicePrintResponse::has_userswitch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SwitchOpVoicePrintResponse::set_has_userswitch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SwitchOpVoicePrintResponse::clear_has_userswitch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SwitchOpVoicePrintResponse::clear_userswitch() {
  userswitch_ = 0u;
  clear_has_userswitch();
}
inline ::google::protobuf::uint32 SwitchOpVoicePrintResponse::userswitch() const {
  // @@protoc_insertion_point(field_get:micromsg.SwitchOpVoicePrintResponse.UserSwitch)
  return userswitch_;
}
inline void SwitchOpVoicePrintResponse::set_userswitch(::google::protobuf::uint32 value) {
  set_has_userswitch();
  userswitch_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SwitchOpVoicePrintResponse.UserSwitch)
}

// required uint32 UserStatus = 3;
inline bool SwitchOpVoicePrintResponse::has_userstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SwitchOpVoicePrintResponse::set_has_userstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SwitchOpVoicePrintResponse::clear_has_userstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SwitchOpVoicePrintResponse::clear_userstatus() {
  userstatus_ = 0u;
  clear_has_userstatus();
}
inline ::google::protobuf::uint32 SwitchOpVoicePrintResponse::userstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.SwitchOpVoicePrintResponse.UserStatus)
  return userstatus_;
}
inline void SwitchOpVoicePrintResponse::set_userstatus(::google::protobuf::uint32 value) {
  set_has_userstatus();
  userstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SwitchOpVoicePrintResponse.UserStatus)
}

// -------------------------------------------------------------------

// GetVoiceprintTicketRsaRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetVoiceprintTicketRsaRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetVoiceprintTicketRsaRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetVoiceprintTicketRsaRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetVoiceprintTicketRsaRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetVoiceprintTicketRsaRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetVoiceprintTicketRsaRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetVoiceprintTicketRsaRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetVoiceprintTicketRsaRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaRequest.BaseRequest)
}

// optional string UserName = 2;
inline bool GetVoiceprintTicketRsaRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetVoiceprintTicketRsaRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetVoiceprintTicketRsaRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetVoiceprintTicketRsaRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& GetVoiceprintTicketRsaRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaRequest.UserName)
  return username_.GetNoArena();
}
inline void GetVoiceprintTicketRsaRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetVoiceprintTicketRsaRequest.UserName)
}
#if LANG_CXX11
inline void GetVoiceprintTicketRsaRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetVoiceprintTicketRsaRequest.UserName)
}
#endif
inline void GetVoiceprintTicketRsaRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetVoiceprintTicketRsaRequest.UserName)
}
inline void GetVoiceprintTicketRsaRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetVoiceprintTicketRsaRequest.UserName)
}
inline ::std::string* GetVoiceprintTicketRsaRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVoiceprintTicketRsaRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaRequest.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVoiceprintTicketRsaRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaRequest.UserName)
}

// required uint32 GetScence = 3;
inline bool GetVoiceprintTicketRsaRequest::has_getscence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetVoiceprintTicketRsaRequest::set_has_getscence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetVoiceprintTicketRsaRequest::clear_has_getscence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetVoiceprintTicketRsaRequest::clear_getscence() {
  getscence_ = 0u;
  clear_has_getscence();
}
inline ::google::protobuf::uint32 GetVoiceprintTicketRsaRequest::getscence() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaRequest.GetScence)
  return getscence_;
}
inline void GetVoiceprintTicketRsaRequest::set_getscence(::google::protobuf::uint32 value) {
  set_has_getscence();
  getscence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetVoiceprintTicketRsaRequest.GetScence)
}

// required .micromsg.SKBuiltinBuffer_t RandomEncryKey = 4;
inline bool GetVoiceprintTicketRsaRequest::has_randomencrykey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetVoiceprintTicketRsaRequest::set_has_randomencrykey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetVoiceprintTicketRsaRequest::clear_has_randomencrykey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetVoiceprintTicketRsaRequest::clear_randomencrykey() {
  if (randomencrykey_ != NULL) randomencrykey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_randomencrykey();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetVoiceprintTicketRsaRequest::randomencrykey() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaRequest.RandomEncryKey)
  return randomencrykey_ != NULL ? *randomencrykey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetVoiceprintTicketRsaRequest::mutable_randomencrykey() {
  set_has_randomencrykey();
  if (randomencrykey_ == NULL) {
    randomencrykey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaRequest.RandomEncryKey)
  return randomencrykey_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetVoiceprintTicketRsaRequest::release_randomencrykey() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaRequest.RandomEncryKey)
  clear_has_randomencrykey();
  ::micromsg::SKBuiltinBuffer_t* temp = randomencrykey_;
  randomencrykey_ = NULL;
  return temp;
}
inline void GetVoiceprintTicketRsaRequest::set_allocated_randomencrykey(::micromsg::SKBuiltinBuffer_t* randomencrykey) {
  delete randomencrykey_;
  randomencrykey_ = randomencrykey;
  if (randomencrykey) {
    set_has_randomencrykey();
  } else {
    clear_has_randomencrykey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaRequest.RandomEncryKey)
}

// -------------------------------------------------------------------

// GetVoiceprintTicketRsaResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetVoiceprintTicketRsaResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetVoiceprintTicketRsaResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetVoiceprintTicketRsaResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetVoiceprintTicketRsaResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetVoiceprintTicketRsaResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetVoiceprintTicketRsaResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetVoiceprintTicketRsaResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetVoiceprintTicketRsaResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaResponse.BaseResponse)
}

// optional string VoiceprintTicket = 2;
inline bool GetVoiceprintTicketRsaResponse::has_voiceprintticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetVoiceprintTicketRsaResponse::set_has_voiceprintticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetVoiceprintTicketRsaResponse::clear_has_voiceprintticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetVoiceprintTicketRsaResponse::clear_voiceprintticket() {
  voiceprintticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voiceprintticket();
}
inline const ::std::string& GetVoiceprintTicketRsaResponse::voiceprintticket() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
  return voiceprintticket_.GetNoArena();
}
inline void GetVoiceprintTicketRsaResponse::set_voiceprintticket(const ::std::string& value) {
  set_has_voiceprintticket();
  voiceprintticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
}
#if LANG_CXX11
inline void GetVoiceprintTicketRsaResponse::set_voiceprintticket(::std::string&& value) {
  set_has_voiceprintticket();
  voiceprintticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
}
#endif
inline void GetVoiceprintTicketRsaResponse::set_voiceprintticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_voiceprintticket();
  voiceprintticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
}
inline void GetVoiceprintTicketRsaResponse::set_voiceprintticket(const char* value, size_t size) {
  set_has_voiceprintticket();
  voiceprintticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
}
inline ::std::string* GetVoiceprintTicketRsaResponse::mutable_voiceprintticket() {
  set_has_voiceprintticket();
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
  return voiceprintticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVoiceprintTicketRsaResponse::release_voiceprintticket() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
  clear_has_voiceprintticket();
  return voiceprintticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVoiceprintTicketRsaResponse::set_allocated_voiceprintticket(::std::string* voiceprintticket) {
  if (voiceprintticket != NULL) {
    set_has_voiceprintticket();
  } else {
    clear_has_voiceprintticket();
  }
  voiceprintticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voiceprintticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaResponse.VoiceprintTicket)
}

// optional .micromsg.BuiltinIPList BuiltinIPList = 3;
inline bool GetVoiceprintTicketRsaResponse::has_builtiniplist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetVoiceprintTicketRsaResponse::set_has_builtiniplist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetVoiceprintTicketRsaResponse::clear_has_builtiniplist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetVoiceprintTicketRsaResponse::clear_builtiniplist() {
  if (builtiniplist_ != NULL) builtiniplist_->::micromsg::BuiltinIPList::Clear();
  clear_has_builtiniplist();
}
inline const ::micromsg::BuiltinIPList& GetVoiceprintTicketRsaResponse::builtiniplist() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaResponse.BuiltinIPList)
  return builtiniplist_ != NULL ? *builtiniplist_
                         : *::micromsg::BuiltinIPList::internal_default_instance();
}
inline ::micromsg::BuiltinIPList* GetVoiceprintTicketRsaResponse::mutable_builtiniplist() {
  set_has_builtiniplist();
  if (builtiniplist_ == NULL) {
    builtiniplist_ = new ::micromsg::BuiltinIPList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaResponse.BuiltinIPList)
  return builtiniplist_;
}
inline ::micromsg::BuiltinIPList* GetVoiceprintTicketRsaResponse::release_builtiniplist() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaResponse.BuiltinIPList)
  clear_has_builtiniplist();
  ::micromsg::BuiltinIPList* temp = builtiniplist_;
  builtiniplist_ = NULL;
  return temp;
}
inline void GetVoiceprintTicketRsaResponse::set_allocated_builtiniplist(::micromsg::BuiltinIPList* builtiniplist) {
  delete builtiniplist_;
  builtiniplist_ = builtiniplist;
  if (builtiniplist) {
    set_has_builtiniplist();
  } else {
    clear_has_builtiniplist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaResponse.BuiltinIPList)
}

// optional .micromsg.HostList NewHostList = 4;
inline bool GetVoiceprintTicketRsaResponse::has_newhostlist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetVoiceprintTicketRsaResponse::set_has_newhostlist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetVoiceprintTicketRsaResponse::clear_has_newhostlist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetVoiceprintTicketRsaResponse::clear_newhostlist() {
  if (newhostlist_ != NULL) newhostlist_->::micromsg::HostList::Clear();
  clear_has_newhostlist();
}
inline const ::micromsg::HostList& GetVoiceprintTicketRsaResponse::newhostlist() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaResponse.NewHostList)
  return newhostlist_ != NULL ? *newhostlist_
                         : *::micromsg::HostList::internal_default_instance();
}
inline ::micromsg::HostList* GetVoiceprintTicketRsaResponse::mutable_newhostlist() {
  set_has_newhostlist();
  if (newhostlist_ == NULL) {
    newhostlist_ = new ::micromsg::HostList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaResponse.NewHostList)
  return newhostlist_;
}
inline ::micromsg::HostList* GetVoiceprintTicketRsaResponse::release_newhostlist() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaResponse.NewHostList)
  clear_has_newhostlist();
  ::micromsg::HostList* temp = newhostlist_;
  newhostlist_ = NULL;
  return temp;
}
inline void GetVoiceprintTicketRsaResponse::set_allocated_newhostlist(::micromsg::HostList* newhostlist) {
  delete newhostlist_;
  newhostlist_ = newhostlist;
  if (newhostlist) {
    set_has_newhostlist();
  } else {
    clear_has_newhostlist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaResponse.NewHostList)
}

// optional .micromsg.NetworkControl NetworkControl = 5;
inline bool GetVoiceprintTicketRsaResponse::has_networkcontrol() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetVoiceprintTicketRsaResponse::set_has_networkcontrol() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetVoiceprintTicketRsaResponse::clear_has_networkcontrol() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetVoiceprintTicketRsaResponse::clear_networkcontrol() {
  if (networkcontrol_ != NULL) networkcontrol_->::micromsg::NetworkControl::Clear();
  clear_has_networkcontrol();
}
inline const ::micromsg::NetworkControl& GetVoiceprintTicketRsaResponse::networkcontrol() const {
  // @@protoc_insertion_point(field_get:micromsg.GetVoiceprintTicketRsaResponse.NetworkControl)
  return networkcontrol_ != NULL ? *networkcontrol_
                         : *::micromsg::NetworkControl::internal_default_instance();
}
inline ::micromsg::NetworkControl* GetVoiceprintTicketRsaResponse::mutable_networkcontrol() {
  set_has_networkcontrol();
  if (networkcontrol_ == NULL) {
    networkcontrol_ = new ::micromsg::NetworkControl;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetVoiceprintTicketRsaResponse.NetworkControl)
  return networkcontrol_;
}
inline ::micromsg::NetworkControl* GetVoiceprintTicketRsaResponse::release_networkcontrol() {
  // @@protoc_insertion_point(field_release:micromsg.GetVoiceprintTicketRsaResponse.NetworkControl)
  clear_has_networkcontrol();
  ::micromsg::NetworkControl* temp = networkcontrol_;
  networkcontrol_ = NULL;
  return temp;
}
inline void GetVoiceprintTicketRsaResponse::set_allocated_networkcontrol(::micromsg::NetworkControl* networkcontrol) {
  delete networkcontrol_;
  networkcontrol_ = networkcontrol;
  if (networkcontrol) {
    set_has_networkcontrol();
  } else {
    clear_has_networkcontrol();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetVoiceprintTicketRsaResponse.NetworkControl)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmvoiceprint_2eproto__INCLUDED
