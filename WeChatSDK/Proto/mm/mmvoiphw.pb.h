// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmvoiphw.proto

#ifndef PROTOBUF_mmvoiphw_2eproto__INCLUDED
#define PROTOBUF_mmvoiphw_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HWFrameBuffer;
class HWFrameBufferDefaultTypeInternal;
extern HWFrameBufferDefaultTypeInternal _HWFrameBuffer_default_instance_;
class HWParamBuffer;
class HWParamBufferDefaultTypeInternal;
extern HWParamBufferDefaultTypeInternal _HWParamBuffer_default_instance_;
class HWTimeInfo;
class HWTimeInfoDefaultTypeInternal;
extern HWTimeInfoDefaultTypeInternal _HWTimeInfo_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
class VOIPRUDPCmd;
class VOIPRUDPCmdDefaultTypeInternal;
extern VOIPRUDPCmdDefaultTypeInternal _VOIPRUDPCmd_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmvoiphw_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmvoiphw_2eproto

// ===================================================================

class HWParamBuffer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.HWParamBuffer) */ {
 public:
  HWParamBuffer();
  virtual ~HWParamBuffer();

  HWParamBuffer(const HWParamBuffer& from);

  inline HWParamBuffer& operator=(const HWParamBuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HWParamBuffer& default_instance();

  static inline const HWParamBuffer* internal_default_instance() {
    return reinterpret_cast<const HWParamBuffer*>(
               &_HWParamBuffer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HWParamBuffer* other);

  // implements Message ----------------------------------------------

  inline HWParamBuffer* New() const PROTOBUF_FINAL { return New(NULL); }

  HWParamBuffer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HWParamBuffer& from);
  void MergeFrom(const HWParamBuffer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HWParamBuffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes SPSBuf = 2;
  bool has_spsbuf() const;
  void clear_spsbuf();
  static const int kSPSBufFieldNumber = 2;
  const ::std::string& spsbuf() const;
  void set_spsbuf(const ::std::string& value);
  #if LANG_CXX11
  void set_spsbuf(::std::string&& value);
  #endif
  void set_spsbuf(const char* value);
  void set_spsbuf(const void* value, size_t size);
  ::std::string* mutable_spsbuf();
  ::std::string* release_spsbuf();
  void set_allocated_spsbuf(::std::string* spsbuf);

  // required bytes PPSBuf = 3;
  bool has_ppsbuf() const;
  void clear_ppsbuf();
  static const int kPPSBufFieldNumber = 3;
  const ::std::string& ppsbuf() const;
  void set_ppsbuf(const ::std::string& value);
  #if LANG_CXX11
  void set_ppsbuf(::std::string&& value);
  #endif
  void set_ppsbuf(const char* value);
  void set_ppsbuf(const void* value, size_t size);
  ::std::string* mutable_ppsbuf();
  ::std::string* release_ppsbuf();
  void set_allocated_ppsbuf(::std::string* ppsbuf);

  // required uint32 HeaderLen = 1;
  bool has_headerlen() const;
  void clear_headerlen();
  static const int kHeaderLenFieldNumber = 1;
  ::google::protobuf::uint32 headerlen() const;
  void set_headerlen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.HWParamBuffer)
 private:
  void set_has_headerlen();
  void clear_has_headerlen();
  void set_has_spsbuf();
  void clear_has_spsbuf();
  void set_has_ppsbuf();
  void clear_has_ppsbuf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr spsbuf_;
  ::google::protobuf::internal::ArenaStringPtr ppsbuf_;
  ::google::protobuf::uint32 headerlen_;
  friend struct protobuf_mmvoiphw_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HWTimeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.HWTimeInfo) */ {
 public:
  HWTimeInfo();
  virtual ~HWTimeInfo();

  HWTimeInfo(const HWTimeInfo& from);

  inline HWTimeInfo& operator=(const HWTimeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HWTimeInfo& default_instance();

  static inline const HWTimeInfo* internal_default_instance() {
    return reinterpret_cast<const HWTimeInfo*>(
               &_HWTimeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HWTimeInfo* other);

  // implements Message ----------------------------------------------

  inline HWTimeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  HWTimeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HWTimeInfo& from);
  void MergeFrom(const HWTimeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HWTimeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 DurTimeValue = 1;
  bool has_durtimevalue() const;
  void clear_durtimevalue();
  static const int kDurTimeValueFieldNumber = 1;
  ::google::protobuf::int64 durtimevalue() const;
  void set_durtimevalue(::google::protobuf::int64 value);

  // required int64 PresentTimeValue = 3;
  bool has_presenttimevalue() const;
  void clear_presenttimevalue();
  static const int kPresentTimeValueFieldNumber = 3;
  ::google::protobuf::int64 presenttimevalue() const;
  void set_presenttimevalue(::google::protobuf::int64 value);

  // required int32 DurTimeScale = 2;
  bool has_durtimescale() const;
  void clear_durtimescale();
  static const int kDurTimeScaleFieldNumber = 2;
  ::google::protobuf::int32 durtimescale() const;
  void set_durtimescale(::google::protobuf::int32 value);

  // required int32 PresentTimeScale = 4;
  bool has_presenttimescale() const;
  void clear_presenttimescale();
  static const int kPresentTimeScaleFieldNumber = 4;
  ::google::protobuf::int32 presenttimescale() const;
  void set_presenttimescale(::google::protobuf::int32 value);

  // required int64 DecodeTimeValue = 5;
  bool has_decodetimevalue() const;
  void clear_decodetimevalue();
  static const int kDecodeTimeValueFieldNumber = 5;
  ::google::protobuf::int64 decodetimevalue() const;
  void set_decodetimevalue(::google::protobuf::int64 value);

  // required int32 DecodeTimeScale = 6;
  bool has_decodetimescale() const;
  void clear_decodetimescale();
  static const int kDecodeTimeScaleFieldNumber = 6;
  ::google::protobuf::int32 decodetimescale() const;
  void set_decodetimescale(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.HWTimeInfo)
 private:
  void set_has_durtimevalue();
  void clear_has_durtimevalue();
  void set_has_durtimescale();
  void clear_has_durtimescale();
  void set_has_presenttimevalue();
  void clear_has_presenttimevalue();
  void set_has_presenttimescale();
  void clear_has_presenttimescale();
  void set_has_decodetimevalue();
  void clear_has_decodetimevalue();
  void set_has_decodetimescale();
  void clear_has_decodetimescale();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 durtimevalue_;
  ::google::protobuf::int64 presenttimevalue_;
  ::google::protobuf::int32 durtimescale_;
  ::google::protobuf::int32 presenttimescale_;
  ::google::protobuf::int64 decodetimevalue_;
  ::google::protobuf::int32 decodetimescale_;
  friend struct protobuf_mmvoiphw_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HWFrameBuffer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.HWFrameBuffer) */ {
 public:
  HWFrameBuffer();
  virtual ~HWFrameBuffer();

  HWFrameBuffer(const HWFrameBuffer& from);

  inline HWFrameBuffer& operator=(const HWFrameBuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HWFrameBuffer& default_instance();

  static inline const HWFrameBuffer* internal_default_instance() {
    return reinterpret_cast<const HWFrameBuffer*>(
               &_HWFrameBuffer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(HWFrameBuffer* other);

  // implements Message ----------------------------------------------

  inline HWFrameBuffer* New() const PROTOBUF_FINAL { return New(NULL); }

  HWFrameBuffer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HWFrameBuffer& from);
  void MergeFrom(const HWFrameBuffer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HWFrameBuffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.HWTimeInfo TimeInfo = 3;
  int timeinfo_size() const;
  void clear_timeinfo();
  static const int kTimeInfoFieldNumber = 3;
  const ::micromsg::HWTimeInfo& timeinfo(int index) const;
  ::micromsg::HWTimeInfo* mutable_timeinfo(int index);
  ::micromsg::HWTimeInfo* add_timeinfo();
  ::google::protobuf::RepeatedPtrField< ::micromsg::HWTimeInfo >*
      mutable_timeinfo();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::HWTimeInfo >&
      timeinfo() const;

  // repeated int32 SampleSize = 4;
  int samplesize_size() const;
  void clear_samplesize();
  static const int kSampleSizeFieldNumber = 4;
  ::google::protobuf::int32 samplesize(int index) const;
  void set_samplesize(int index, ::google::protobuf::int32 value);
  void add_samplesize(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      samplesize() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_samplesize();

  // required bytes RawBuf = 1;
  bool has_rawbuf() const;
  void clear_rawbuf();
  static const int kRawBufFieldNumber = 1;
  const ::std::string& rawbuf() const;
  void set_rawbuf(const ::std::string& value);
  #if LANG_CXX11
  void set_rawbuf(::std::string&& value);
  #endif
  void set_rawbuf(const char* value);
  void set_rawbuf(const void* value, size_t size);
  ::std::string* mutable_rawbuf();
  ::std::string* release_rawbuf();
  void set_allocated_rawbuf(::std::string* rawbuf);

  // required int32 SamplesCount = 2;
  bool has_samplescount() const;
  void clear_samplescount();
  static const int kSamplesCountFieldNumber = 2;
  ::google::protobuf::int32 samplescount() const;
  void set_samplescount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.HWFrameBuffer)
 private:
  void set_has_rawbuf();
  void clear_has_rawbuf();
  void set_has_samplescount();
  void clear_has_samplescount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::HWTimeInfo > timeinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > samplesize_;
  ::google::protobuf::internal::ArenaStringPtr rawbuf_;
  ::google::protobuf::int32 samplescount_;
  friend struct protobuf_mmvoiphw_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VOIPRUDPCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.VOIPRUDPCmd) */ {
 public:
  VOIPRUDPCmd();
  virtual ~VOIPRUDPCmd();

  VOIPRUDPCmd(const VOIPRUDPCmd& from);

  inline VOIPRUDPCmd& operator=(const VOIPRUDPCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VOIPRUDPCmd& default_instance();

  static inline const VOIPRUDPCmd* internal_default_instance() {
    return reinterpret_cast<const VOIPRUDPCmd*>(
               &_VOIPRUDPCmd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(VOIPRUDPCmd* other);

  // implements Message ----------------------------------------------

  inline VOIPRUDPCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  VOIPRUDPCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VOIPRUDPCmd& from);
  void MergeFrom(const VOIPRUDPCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VOIPRUDPCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes CmdBuffer = 2;
  bool has_cmdbuffer() const;
  void clear_cmdbuffer();
  static const int kCmdBufferFieldNumber = 2;
  const ::std::string& cmdbuffer() const;
  void set_cmdbuffer(const ::std::string& value);
  #if LANG_CXX11
  void set_cmdbuffer(::std::string&& value);
  #endif
  void set_cmdbuffer(const char* value);
  void set_cmdbuffer(const void* value, size_t size);
  ::std::string* mutable_cmdbuffer();
  ::std::string* release_cmdbuffer();
  void set_allocated_cmdbuffer(::std::string* cmdbuffer);

  // required int32 CmdType = 1;
  bool has_cmdtype() const;
  void clear_cmdtype();
  static const int kCmdTypeFieldNumber = 1;
  ::google::protobuf::int32 cmdtype() const;
  void set_cmdtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.VOIPRUDPCmd)
 private:
  void set_has_cmdtype();
  void clear_has_cmdtype();
  void set_has_cmdbuffer();
  void clear_has_cmdbuffer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cmdbuffer_;
  ::google::protobuf::int32 cmdtype_;
  friend struct protobuf_mmvoiphw_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HWParamBuffer

// required uint32 HeaderLen = 1;
inline bool HWParamBuffer::has_headerlen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HWParamBuffer::set_has_headerlen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HWParamBuffer::clear_has_headerlen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HWParamBuffer::clear_headerlen() {
  headerlen_ = 0u;
  clear_has_headerlen();
}
inline ::google::protobuf::uint32 HWParamBuffer::headerlen() const {
  // @@protoc_insertion_point(field_get:micromsg.HWParamBuffer.HeaderLen)
  return headerlen_;
}
inline void HWParamBuffer::set_headerlen(::google::protobuf::uint32 value) {
  set_has_headerlen();
  headerlen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HWParamBuffer.HeaderLen)
}

// required bytes SPSBuf = 2;
inline bool HWParamBuffer::has_spsbuf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HWParamBuffer::set_has_spsbuf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HWParamBuffer::clear_has_spsbuf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HWParamBuffer::clear_spsbuf() {
  spsbuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_spsbuf();
}
inline const ::std::string& HWParamBuffer::spsbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.HWParamBuffer.SPSBuf)
  return spsbuf_.GetNoArena();
}
inline void HWParamBuffer::set_spsbuf(const ::std::string& value) {
  set_has_spsbuf();
  spsbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.HWParamBuffer.SPSBuf)
}
#if LANG_CXX11
inline void HWParamBuffer::set_spsbuf(::std::string&& value) {
  set_has_spsbuf();
  spsbuf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.HWParamBuffer.SPSBuf)
}
#endif
inline void HWParamBuffer::set_spsbuf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_spsbuf();
  spsbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.HWParamBuffer.SPSBuf)
}
inline void HWParamBuffer::set_spsbuf(const void* value, size_t size) {
  set_has_spsbuf();
  spsbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.HWParamBuffer.SPSBuf)
}
inline ::std::string* HWParamBuffer::mutable_spsbuf() {
  set_has_spsbuf();
  // @@protoc_insertion_point(field_mutable:micromsg.HWParamBuffer.SPSBuf)
  return spsbuf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HWParamBuffer::release_spsbuf() {
  // @@protoc_insertion_point(field_release:micromsg.HWParamBuffer.SPSBuf)
  clear_has_spsbuf();
  return spsbuf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HWParamBuffer::set_allocated_spsbuf(::std::string* spsbuf) {
  if (spsbuf != NULL) {
    set_has_spsbuf();
  } else {
    clear_has_spsbuf();
  }
  spsbuf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spsbuf);
  // @@protoc_insertion_point(field_set_allocated:micromsg.HWParamBuffer.SPSBuf)
}

// required bytes PPSBuf = 3;
inline bool HWParamBuffer::has_ppsbuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HWParamBuffer::set_has_ppsbuf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HWParamBuffer::clear_has_ppsbuf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HWParamBuffer::clear_ppsbuf() {
  ppsbuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ppsbuf();
}
inline const ::std::string& HWParamBuffer::ppsbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.HWParamBuffer.PPSBuf)
  return ppsbuf_.GetNoArena();
}
inline void HWParamBuffer::set_ppsbuf(const ::std::string& value) {
  set_has_ppsbuf();
  ppsbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.HWParamBuffer.PPSBuf)
}
#if LANG_CXX11
inline void HWParamBuffer::set_ppsbuf(::std::string&& value) {
  set_has_ppsbuf();
  ppsbuf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.HWParamBuffer.PPSBuf)
}
#endif
inline void HWParamBuffer::set_ppsbuf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ppsbuf();
  ppsbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.HWParamBuffer.PPSBuf)
}
inline void HWParamBuffer::set_ppsbuf(const void* value, size_t size) {
  set_has_ppsbuf();
  ppsbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.HWParamBuffer.PPSBuf)
}
inline ::std::string* HWParamBuffer::mutable_ppsbuf() {
  set_has_ppsbuf();
  // @@protoc_insertion_point(field_mutable:micromsg.HWParamBuffer.PPSBuf)
  return ppsbuf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HWParamBuffer::release_ppsbuf() {
  // @@protoc_insertion_point(field_release:micromsg.HWParamBuffer.PPSBuf)
  clear_has_ppsbuf();
  return ppsbuf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HWParamBuffer::set_allocated_ppsbuf(::std::string* ppsbuf) {
  if (ppsbuf != NULL) {
    set_has_ppsbuf();
  } else {
    clear_has_ppsbuf();
  }
  ppsbuf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ppsbuf);
  // @@protoc_insertion_point(field_set_allocated:micromsg.HWParamBuffer.PPSBuf)
}

// -------------------------------------------------------------------

// HWTimeInfo

// required int64 DurTimeValue = 1;
inline bool HWTimeInfo::has_durtimevalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HWTimeInfo::set_has_durtimevalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HWTimeInfo::clear_has_durtimevalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HWTimeInfo::clear_durtimevalue() {
  durtimevalue_ = GOOGLE_LONGLONG(0);
  clear_has_durtimevalue();
}
inline ::google::protobuf::int64 HWTimeInfo::durtimevalue() const {
  // @@protoc_insertion_point(field_get:micromsg.HWTimeInfo.DurTimeValue)
  return durtimevalue_;
}
inline void HWTimeInfo::set_durtimevalue(::google::protobuf::int64 value) {
  set_has_durtimevalue();
  durtimevalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HWTimeInfo.DurTimeValue)
}

// required int32 DurTimeScale = 2;
inline bool HWTimeInfo::has_durtimescale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HWTimeInfo::set_has_durtimescale() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HWTimeInfo::clear_has_durtimescale() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HWTimeInfo::clear_durtimescale() {
  durtimescale_ = 0;
  clear_has_durtimescale();
}
inline ::google::protobuf::int32 HWTimeInfo::durtimescale() const {
  // @@protoc_insertion_point(field_get:micromsg.HWTimeInfo.DurTimeScale)
  return durtimescale_;
}
inline void HWTimeInfo::set_durtimescale(::google::protobuf::int32 value) {
  set_has_durtimescale();
  durtimescale_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HWTimeInfo.DurTimeScale)
}

// required int64 PresentTimeValue = 3;
inline bool HWTimeInfo::has_presenttimevalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HWTimeInfo::set_has_presenttimevalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HWTimeInfo::clear_has_presenttimevalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HWTimeInfo::clear_presenttimevalue() {
  presenttimevalue_ = GOOGLE_LONGLONG(0);
  clear_has_presenttimevalue();
}
inline ::google::protobuf::int64 HWTimeInfo::presenttimevalue() const {
  // @@protoc_insertion_point(field_get:micromsg.HWTimeInfo.PresentTimeValue)
  return presenttimevalue_;
}
inline void HWTimeInfo::set_presenttimevalue(::google::protobuf::int64 value) {
  set_has_presenttimevalue();
  presenttimevalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HWTimeInfo.PresentTimeValue)
}

// required int32 PresentTimeScale = 4;
inline bool HWTimeInfo::has_presenttimescale() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HWTimeInfo::set_has_presenttimescale() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HWTimeInfo::clear_has_presenttimescale() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HWTimeInfo::clear_presenttimescale() {
  presenttimescale_ = 0;
  clear_has_presenttimescale();
}
inline ::google::protobuf::int32 HWTimeInfo::presenttimescale() const {
  // @@protoc_insertion_point(field_get:micromsg.HWTimeInfo.PresentTimeScale)
  return presenttimescale_;
}
inline void HWTimeInfo::set_presenttimescale(::google::protobuf::int32 value) {
  set_has_presenttimescale();
  presenttimescale_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HWTimeInfo.PresentTimeScale)
}

// required int64 DecodeTimeValue = 5;
inline bool HWTimeInfo::has_decodetimevalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HWTimeInfo::set_has_decodetimevalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HWTimeInfo::clear_has_decodetimevalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HWTimeInfo::clear_decodetimevalue() {
  decodetimevalue_ = GOOGLE_LONGLONG(0);
  clear_has_decodetimevalue();
}
inline ::google::protobuf::int64 HWTimeInfo::decodetimevalue() const {
  // @@protoc_insertion_point(field_get:micromsg.HWTimeInfo.DecodeTimeValue)
  return decodetimevalue_;
}
inline void HWTimeInfo::set_decodetimevalue(::google::protobuf::int64 value) {
  set_has_decodetimevalue();
  decodetimevalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HWTimeInfo.DecodeTimeValue)
}

// required int32 DecodeTimeScale = 6;
inline bool HWTimeInfo::has_decodetimescale() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HWTimeInfo::set_has_decodetimescale() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HWTimeInfo::clear_has_decodetimescale() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HWTimeInfo::clear_decodetimescale() {
  decodetimescale_ = 0;
  clear_has_decodetimescale();
}
inline ::google::protobuf::int32 HWTimeInfo::decodetimescale() const {
  // @@protoc_insertion_point(field_get:micromsg.HWTimeInfo.DecodeTimeScale)
  return decodetimescale_;
}
inline void HWTimeInfo::set_decodetimescale(::google::protobuf::int32 value) {
  set_has_decodetimescale();
  decodetimescale_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HWTimeInfo.DecodeTimeScale)
}

// -------------------------------------------------------------------

// HWFrameBuffer

// required bytes RawBuf = 1;
inline bool HWFrameBuffer::has_rawbuf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HWFrameBuffer::set_has_rawbuf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HWFrameBuffer::clear_has_rawbuf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HWFrameBuffer::clear_rawbuf() {
  rawbuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rawbuf();
}
inline const ::std::string& HWFrameBuffer::rawbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.HWFrameBuffer.RawBuf)
  return rawbuf_.GetNoArena();
}
inline void HWFrameBuffer::set_rawbuf(const ::std::string& value) {
  set_has_rawbuf();
  rawbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.HWFrameBuffer.RawBuf)
}
#if LANG_CXX11
inline void HWFrameBuffer::set_rawbuf(::std::string&& value) {
  set_has_rawbuf();
  rawbuf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.HWFrameBuffer.RawBuf)
}
#endif
inline void HWFrameBuffer::set_rawbuf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rawbuf();
  rawbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.HWFrameBuffer.RawBuf)
}
inline void HWFrameBuffer::set_rawbuf(const void* value, size_t size) {
  set_has_rawbuf();
  rawbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.HWFrameBuffer.RawBuf)
}
inline ::std::string* HWFrameBuffer::mutable_rawbuf() {
  set_has_rawbuf();
  // @@protoc_insertion_point(field_mutable:micromsg.HWFrameBuffer.RawBuf)
  return rawbuf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HWFrameBuffer::release_rawbuf() {
  // @@protoc_insertion_point(field_release:micromsg.HWFrameBuffer.RawBuf)
  clear_has_rawbuf();
  return rawbuf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HWFrameBuffer::set_allocated_rawbuf(::std::string* rawbuf) {
  if (rawbuf != NULL) {
    set_has_rawbuf();
  } else {
    clear_has_rawbuf();
  }
  rawbuf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rawbuf);
  // @@protoc_insertion_point(field_set_allocated:micromsg.HWFrameBuffer.RawBuf)
}

// required int32 SamplesCount = 2;
inline bool HWFrameBuffer::has_samplescount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HWFrameBuffer::set_has_samplescount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HWFrameBuffer::clear_has_samplescount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HWFrameBuffer::clear_samplescount() {
  samplescount_ = 0;
  clear_has_samplescount();
}
inline ::google::protobuf::int32 HWFrameBuffer::samplescount() const {
  // @@protoc_insertion_point(field_get:micromsg.HWFrameBuffer.SamplesCount)
  return samplescount_;
}
inline void HWFrameBuffer::set_samplescount(::google::protobuf::int32 value) {
  set_has_samplescount();
  samplescount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HWFrameBuffer.SamplesCount)
}

// repeated .micromsg.HWTimeInfo TimeInfo = 3;
inline int HWFrameBuffer::timeinfo_size() const {
  return timeinfo_.size();
}
inline void HWFrameBuffer::clear_timeinfo() {
  timeinfo_.Clear();
}
inline const ::micromsg::HWTimeInfo& HWFrameBuffer::timeinfo(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.HWFrameBuffer.TimeInfo)
  return timeinfo_.Get(index);
}
inline ::micromsg::HWTimeInfo* HWFrameBuffer::mutable_timeinfo(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.HWFrameBuffer.TimeInfo)
  return timeinfo_.Mutable(index);
}
inline ::micromsg::HWTimeInfo* HWFrameBuffer::add_timeinfo() {
  // @@protoc_insertion_point(field_add:micromsg.HWFrameBuffer.TimeInfo)
  return timeinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::HWTimeInfo >*
HWFrameBuffer::mutable_timeinfo() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.HWFrameBuffer.TimeInfo)
  return &timeinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::HWTimeInfo >&
HWFrameBuffer::timeinfo() const {
  // @@protoc_insertion_point(field_list:micromsg.HWFrameBuffer.TimeInfo)
  return timeinfo_;
}

// repeated int32 SampleSize = 4;
inline int HWFrameBuffer::samplesize_size() const {
  return samplesize_.size();
}
inline void HWFrameBuffer::clear_samplesize() {
  samplesize_.Clear();
}
inline ::google::protobuf::int32 HWFrameBuffer::samplesize(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.HWFrameBuffer.SampleSize)
  return samplesize_.Get(index);
}
inline void HWFrameBuffer::set_samplesize(int index, ::google::protobuf::int32 value) {
  samplesize_.Set(index, value);
  // @@protoc_insertion_point(field_set:micromsg.HWFrameBuffer.SampleSize)
}
inline void HWFrameBuffer::add_samplesize(::google::protobuf::int32 value) {
  samplesize_.Add(value);
  // @@protoc_insertion_point(field_add:micromsg.HWFrameBuffer.SampleSize)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HWFrameBuffer::samplesize() const {
  // @@protoc_insertion_point(field_list:micromsg.HWFrameBuffer.SampleSize)
  return samplesize_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HWFrameBuffer::mutable_samplesize() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.HWFrameBuffer.SampleSize)
  return &samplesize_;
}

// -------------------------------------------------------------------

// VOIPRUDPCmd

// required int32 CmdType = 1;
inline bool VOIPRUDPCmd::has_cmdtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VOIPRUDPCmd::set_has_cmdtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VOIPRUDPCmd::clear_has_cmdtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VOIPRUDPCmd::clear_cmdtype() {
  cmdtype_ = 0;
  clear_has_cmdtype();
}
inline ::google::protobuf::int32 VOIPRUDPCmd::cmdtype() const {
  // @@protoc_insertion_point(field_get:micromsg.VOIPRUDPCmd.CmdType)
  return cmdtype_;
}
inline void VOIPRUDPCmd::set_cmdtype(::google::protobuf::int32 value) {
  set_has_cmdtype();
  cmdtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.VOIPRUDPCmd.CmdType)
}

// optional bytes CmdBuffer = 2;
inline bool VOIPRUDPCmd::has_cmdbuffer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VOIPRUDPCmd::set_has_cmdbuffer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VOIPRUDPCmd::clear_has_cmdbuffer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VOIPRUDPCmd::clear_cmdbuffer() {
  cmdbuffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmdbuffer();
}
inline const ::std::string& VOIPRUDPCmd::cmdbuffer() const {
  // @@protoc_insertion_point(field_get:micromsg.VOIPRUDPCmd.CmdBuffer)
  return cmdbuffer_.GetNoArena();
}
inline void VOIPRUDPCmd::set_cmdbuffer(const ::std::string& value) {
  set_has_cmdbuffer();
  cmdbuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.VOIPRUDPCmd.CmdBuffer)
}
#if LANG_CXX11
inline void VOIPRUDPCmd::set_cmdbuffer(::std::string&& value) {
  set_has_cmdbuffer();
  cmdbuffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.VOIPRUDPCmd.CmdBuffer)
}
#endif
inline void VOIPRUDPCmd::set_cmdbuffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cmdbuffer();
  cmdbuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.VOIPRUDPCmd.CmdBuffer)
}
inline void VOIPRUDPCmd::set_cmdbuffer(const void* value, size_t size) {
  set_has_cmdbuffer();
  cmdbuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.VOIPRUDPCmd.CmdBuffer)
}
inline ::std::string* VOIPRUDPCmd::mutable_cmdbuffer() {
  set_has_cmdbuffer();
  // @@protoc_insertion_point(field_mutable:micromsg.VOIPRUDPCmd.CmdBuffer)
  return cmdbuffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VOIPRUDPCmd::release_cmdbuffer() {
  // @@protoc_insertion_point(field_release:micromsg.VOIPRUDPCmd.CmdBuffer)
  clear_has_cmdbuffer();
  return cmdbuffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VOIPRUDPCmd::set_allocated_cmdbuffer(::std::string* cmdbuffer) {
  if (cmdbuffer != NULL) {
    set_has_cmdbuffer();
  } else {
    clear_has_cmdbuffer();
  }
  cmdbuffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmdbuffer);
  // @@protoc_insertion_point(field_set_allocated:micromsg.VOIPRUDPCmd.CmdBuffer)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmvoiphw_2eproto__INCLUDED
