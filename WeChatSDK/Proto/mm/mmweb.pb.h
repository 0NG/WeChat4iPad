// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmweb.proto

#ifndef PROTOBUF_mmweb_2eproto__INCLUDED
#define PROTOBUF_mmweb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class GetCardRequest;
class GetCardRequestDefaultTypeInternal;
extern GetCardRequestDefaultTypeInternal _GetCardRequest_default_instance_;
class GetCardResponse;
class GetCardResponseDefaultTypeInternal;
extern GetCardResponseDefaultTypeInternal _GetCardResponse_default_instance_;
class GetCliDBEncryptInfoRequest;
class GetCliDBEncryptInfoRequestDefaultTypeInternal;
extern GetCliDBEncryptInfoRequestDefaultTypeInternal _GetCliDBEncryptInfoRequest_default_instance_;
class GetCliDBEncryptInfoResponse;
class GetCliDBEncryptInfoResponseDefaultTypeInternal;
extern GetCliDBEncryptInfoResponseDefaultTypeInternal _GetCliDBEncryptInfoResponse_default_instance_;
class GetImUnreadMsgCountRequest;
class GetImUnreadMsgCountRequestDefaultTypeInternal;
extern GetImUnreadMsgCountRequestDefaultTypeInternal _GetImUnreadMsgCountRequest_default_instance_;
class GetImUnreadMsgCountResponse;
class GetImUnreadMsgCountResponseDefaultTypeInternal;
extern GetImUnreadMsgCountResponseDefaultTypeInternal _GetImUnreadMsgCountResponse_default_instance_;
class GetLocImgRequest;
class GetLocImgRequestDefaultTypeInternal;
extern GetLocImgRequestDefaultTypeInternal _GetLocImgRequest_default_instance_;
class GetLocImgResponse;
class GetLocImgResponseDefaultTypeInternal;
extern GetLocImgResponseDefaultTypeInternal _GetLocImgResponse_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GetQRCodeRequest;
class GetQRCodeRequestDefaultTypeInternal;
extern GetQRCodeRequestDefaultTypeInternal _GetQRCodeRequest_default_instance_;
class GetQRCodeResponse;
class GetQRCodeResponseDefaultTypeInternal;
extern GetQRCodeResponseDefaultTypeInternal _GetQRCodeResponse_default_instance_;
class GetWeChatOutCouponsRequest;
class GetWeChatOutCouponsRequestDefaultTypeInternal;
extern GetWeChatOutCouponsRequestDefaultTypeInternal _GetWeChatOutCouponsRequest_default_instance_;
class GetWeChatOutCouponsResponse;
class GetWeChatOutCouponsResponseDefaultTypeInternal;
extern GetWeChatOutCouponsResponseDefaultTypeInternal _GetWeChatOutCouponsResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class HeartBeatRequest;
class HeartBeatRequestDefaultTypeInternal;
extern HeartBeatRequestDefaultTypeInternal _HeartBeatRequest_default_instance_;
class HeartBeatResponse;
class HeartBeatResponseDefaultTypeInternal;
extern HeartBeatResponseDefaultTypeInternal _HeartBeatResponse_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RevokeChatRoomQRCodeRequest;
class RevokeChatRoomQRCodeRequestDefaultTypeInternal;
extern RevokeChatRoomQRCodeRequestDefaultTypeInternal _RevokeChatRoomQRCodeRequest_default_instance_;
class RevokeChatRoomQRCodeResponse;
class RevokeChatRoomQRCodeResponseDefaultTypeInternal;
extern RevokeChatRoomQRCodeResponseDefaultTypeInternal _RevokeChatRoomQRCodeResponse_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class SendQRCodeByEmailReq;
class SendQRCodeByEmailReqDefaultTypeInternal;
extern SendQRCodeByEmailReqDefaultTypeInternal _SendQRCodeByEmailReq_default_instance_;
class SendQRCodeByEmailResp;
class SendQRCodeByEmailRespDefaultTypeInternal;
extern SendQRCodeByEmailRespDefaultTypeInternal _SendQRCodeByEmailResp_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmweb_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmweb_2eproto

// ===================================================================

class GetQRCodeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetQRCodeRequest) */ {
 public:
  GetQRCodeRequest();
  virtual ~GetQRCodeRequest();

  GetQRCodeRequest(const GetQRCodeRequest& from);

  inline GetQRCodeRequest& operator=(const GetQRCodeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetQRCodeRequest& default_instance();

  static inline const GetQRCodeRequest* internal_default_instance() {
    return reinterpret_cast<const GetQRCodeRequest*>(
               &_GetQRCodeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetQRCodeRequest* other);

  // implements Message ----------------------------------------------

  inline GetQRCodeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetQRCodeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetQRCodeRequest& from);
  void MergeFrom(const GetQRCodeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetQRCodeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinString_t UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& username() const;
  ::micromsg::SKBuiltinString_t* mutable_username();
  ::micromsg::SKBuiltinString_t* release_username();
  void set_allocated_username(::micromsg::SKBuiltinString_t* username);

  // required uint32 Style = 3;
  bool has_style() const;
  void clear_style();
  static const int kStyleFieldNumber = 3;
  ::google::protobuf::uint32 style() const;
  void set_style(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetQRCodeRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_username();
  void clear_has_username();
  void set_has_style();
  void clear_has_style();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinString_t* username_;
  ::google::protobuf::uint32 style_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetQRCodeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetQRCodeResponse) */ {
 public:
  GetQRCodeResponse();
  virtual ~GetQRCodeResponse();

  GetQRCodeResponse(const GetQRCodeResponse& from);

  inline GetQRCodeResponse& operator=(const GetQRCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetQRCodeResponse& default_instance();

  static inline const GetQRCodeResponse* internal_default_instance() {
    return reinterpret_cast<const GetQRCodeResponse*>(
               &_GetQRCodeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GetQRCodeResponse* other);

  // implements Message ----------------------------------------------

  inline GetQRCodeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetQRCodeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetQRCodeResponse& from);
  void MergeFrom(const GetQRCodeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetQRCodeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FooterWording = 6;
  bool has_footerwording() const;
  void clear_footerwording();
  static const int kFooterWordingFieldNumber = 6;
  const ::std::string& footerwording() const;
  void set_footerwording(const ::std::string& value);
  #if LANG_CXX11
  void set_footerwording(::std::string&& value);
  #endif
  void set_footerwording(const char* value);
  void set_footerwording(const char* value, size_t size);
  ::std::string* mutable_footerwording();
  ::std::string* release_footerwording();
  void set_allocated_footerwording(::std::string* footerwording);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t QRCode = 2;
  bool has_qrcode() const;
  void clear_qrcode();
  static const int kQRCodeFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& qrcode() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_qrcode();
  ::micromsg::SKBuiltinBuffer_t* release_qrcode();
  void set_allocated_qrcode(::micromsg::SKBuiltinBuffer_t* qrcode);

  // required uint32 Style = 5;
  bool has_style() const;
  void clear_style();
  static const int kStyleFieldNumber = 5;
  ::google::protobuf::uint32 style() const;
  void set_style(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetQRCodeResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_qrcode();
  void clear_has_qrcode();
  void set_has_style();
  void clear_has_style();
  void set_has_footerwording();
  void clear_has_footerwording();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr footerwording_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* qrcode_;
  ::google::protobuf::uint32 style_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RevokeChatRoomQRCodeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RevokeChatRoomQRCodeRequest) */ {
 public:
  RevokeChatRoomQRCodeRequest();
  virtual ~RevokeChatRoomQRCodeRequest();

  RevokeChatRoomQRCodeRequest(const RevokeChatRoomQRCodeRequest& from);

  inline RevokeChatRoomQRCodeRequest& operator=(const RevokeChatRoomQRCodeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RevokeChatRoomQRCodeRequest& default_instance();

  static inline const RevokeChatRoomQRCodeRequest* internal_default_instance() {
    return reinterpret_cast<const RevokeChatRoomQRCodeRequest*>(
               &_RevokeChatRoomQRCodeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RevokeChatRoomQRCodeRequest* other);

  // implements Message ----------------------------------------------

  inline RevokeChatRoomQRCodeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RevokeChatRoomQRCodeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RevokeChatRoomQRCodeRequest& from);
  void MergeFrom(const RevokeChatRoomQRCodeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RevokeChatRoomQRCodeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string QRCode = 2;
  bool has_qrcode() const;
  void clear_qrcode();
  static const int kQRCodeFieldNumber = 2;
  const ::std::string& qrcode() const;
  void set_qrcode(const ::std::string& value);
  #if LANG_CXX11
  void set_qrcode(::std::string&& value);
  #endif
  void set_qrcode(const char* value);
  void set_qrcode(const char* value, size_t size);
  ::std::string* mutable_qrcode();
  ::std::string* release_qrcode();
  void set_allocated_qrcode(::std::string* qrcode);

  // optional string ChatRoomUserName = 3;
  bool has_chatroomusername() const;
  void clear_chatroomusername();
  static const int kChatRoomUserNameFieldNumber = 3;
  const ::std::string& chatroomusername() const;
  void set_chatroomusername(const ::std::string& value);
  #if LANG_CXX11
  void set_chatroomusername(::std::string&& value);
  #endif
  void set_chatroomusername(const char* value);
  void set_chatroomusername(const char* value, size_t size);
  ::std::string* mutable_chatroomusername();
  ::std::string* release_chatroomusername();
  void set_allocated_chatroomusername(::std::string* chatroomusername);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.RevokeChatRoomQRCodeRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_qrcode();
  void clear_has_qrcode();
  void set_has_chatroomusername();
  void clear_has_chatroomusername();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr qrcode_;
  ::google::protobuf::internal::ArenaStringPtr chatroomusername_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RevokeChatRoomQRCodeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RevokeChatRoomQRCodeResponse) */ {
 public:
  RevokeChatRoomQRCodeResponse();
  virtual ~RevokeChatRoomQRCodeResponse();

  RevokeChatRoomQRCodeResponse(const RevokeChatRoomQRCodeResponse& from);

  inline RevokeChatRoomQRCodeResponse& operator=(const RevokeChatRoomQRCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RevokeChatRoomQRCodeResponse& default_instance();

  static inline const RevokeChatRoomQRCodeResponse* internal_default_instance() {
    return reinterpret_cast<const RevokeChatRoomQRCodeResponse*>(
               &_RevokeChatRoomQRCodeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RevokeChatRoomQRCodeResponse* other);

  // implements Message ----------------------------------------------

  inline RevokeChatRoomQRCodeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RevokeChatRoomQRCodeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RevokeChatRoomQRCodeResponse& from);
  void MergeFrom(const RevokeChatRoomQRCodeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RevokeChatRoomQRCodeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.RevokeChatRoomQRCodeResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendQRCodeByEmailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SendQRCodeByEmailReq) */ {
 public:
  SendQRCodeByEmailReq();
  virtual ~SendQRCodeByEmailReq();

  SendQRCodeByEmailReq(const SendQRCodeByEmailReq& from);

  inline SendQRCodeByEmailReq& operator=(const SendQRCodeByEmailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendQRCodeByEmailReq& default_instance();

  static inline const SendQRCodeByEmailReq* internal_default_instance() {
    return reinterpret_cast<const SendQRCodeByEmailReq*>(
               &_SendQRCodeByEmailReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SendQRCodeByEmailReq* other);

  // implements Message ----------------------------------------------

  inline SendQRCodeByEmailReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SendQRCodeByEmailReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendQRCodeByEmailReq& from);
  void MergeFrom(const SendQRCodeByEmailReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendQRCodeByEmailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t ToList = 4;
  int tolist_size() const;
  void clear_tolist();
  static const int kToListFieldNumber = 4;
  const ::micromsg::SKBuiltinString_t& tolist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_tolist(int index);
  ::micromsg::SKBuiltinString_t* add_tolist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_tolist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      tolist() const;

  // optional string QRCodeUserName = 2;
  bool has_qrcodeusername() const;
  void clear_qrcodeusername();
  static const int kQRCodeUserNameFieldNumber = 2;
  const ::std::string& qrcodeusername() const;
  void set_qrcodeusername(const ::std::string& value);
  #if LANG_CXX11
  void set_qrcodeusername(::std::string&& value);
  #endif
  void set_qrcodeusername(const char* value);
  void set_qrcodeusername(const char* value, size_t size);
  ::std::string* mutable_qrcodeusername();
  ::std::string* release_qrcodeusername();
  void set_allocated_qrcodeusername(::std::string* qrcodeusername);

  // optional string Tittle = 5;
  bool has_tittle() const;
  void clear_tittle();
  static const int kTittleFieldNumber = 5;
  const ::std::string& tittle() const;
  void set_tittle(const ::std::string& value);
  #if LANG_CXX11
  void set_tittle(::std::string&& value);
  #endif
  void set_tittle(const char* value);
  void set_tittle(const char* value, size_t size);
  ::std::string* mutable_tittle();
  ::std::string* release_tittle();
  void set_allocated_tittle(::std::string* tittle);

  // optional string Content = 6;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 ToCount = 3;
  bool has_tocount() const;
  void clear_tocount();
  static const int kToCountFieldNumber = 3;
  ::google::protobuf::uint32 tocount() const;
  void set_tocount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SendQRCodeByEmailReq)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_qrcodeusername();
  void clear_has_qrcodeusername();
  void set_has_tocount();
  void clear_has_tocount();
  void set_has_tittle();
  void clear_has_tittle();
  void set_has_content();
  void clear_has_content();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > tolist_;
  ::google::protobuf::internal::ArenaStringPtr qrcodeusername_;
  ::google::protobuf::internal::ArenaStringPtr tittle_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 tocount_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendQRCodeByEmailResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SendQRCodeByEmailResp) */ {
 public:
  SendQRCodeByEmailResp();
  virtual ~SendQRCodeByEmailResp();

  SendQRCodeByEmailResp(const SendQRCodeByEmailResp& from);

  inline SendQRCodeByEmailResp& operator=(const SendQRCodeByEmailResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendQRCodeByEmailResp& default_instance();

  static inline const SendQRCodeByEmailResp* internal_default_instance() {
    return reinterpret_cast<const SendQRCodeByEmailResp*>(
               &_SendQRCodeByEmailResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SendQRCodeByEmailResp* other);

  // implements Message ----------------------------------------------

  inline SendQRCodeByEmailResp* New() const PROTOBUF_FINAL { return New(NULL); }

  SendQRCodeByEmailResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendQRCodeByEmailResp& from);
  void MergeFrom(const SendQRCodeByEmailResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendQRCodeByEmailResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.SendQRCodeByEmailResp)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardRequest) */ {
 public:
  GetCardRequest();
  virtual ~GetCardRequest();

  GetCardRequest(const GetCardRequest& from);

  inline GetCardRequest& operator=(const GetCardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardRequest& default_instance();

  static inline const GetCardRequest* internal_default_instance() {
    return reinterpret_cast<const GetCardRequest*>(
               &_GetCardRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetCardRequest* other);

  // implements Message ----------------------------------------------

  inline GetCardRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardRequest& from);
  void MergeFrom(const GetCardRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardResponse) */ {
 public:
  GetCardResponse();
  virtual ~GetCardResponse();

  GetCardResponse(const GetCardResponse& from);

  inline GetCardResponse& operator=(const GetCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardResponse& default_instance();

  static inline const GetCardResponse* internal_default_instance() {
    return reinterpret_cast<const GetCardResponse*>(
               &_GetCardResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GetCardResponse* other);

  // implements Message ----------------------------------------------

  inline GetCardResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardResponse& from);
  void MergeFrom(const GetCardResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t Image = 2;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& image() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_image();
  ::micromsg::SKBuiltinBuffer_t* release_image();
  void set_allocated_image(::micromsg::SKBuiltinBuffer_t* image);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_image();
  void clear_has_image();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* image_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.HeartBeatRequest) */ {
 public:
  HeartBeatRequest();
  virtual ~HeartBeatRequest();

  HeartBeatRequest(const HeartBeatRequest& from);

  inline HeartBeatRequest& operator=(const HeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatRequest& default_instance();

  static inline const HeartBeatRequest* internal_default_instance() {
    return reinterpret_cast<const HeartBeatRequest*>(
               &_HeartBeatRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(HeartBeatRequest* other);

  // implements Message ----------------------------------------------

  inline HeartBeatRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartBeatRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartBeatRequest& from);
  void MergeFrom(const HeartBeatRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartBeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& keybuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuf();
  ::micromsg::SKBuiltinBuffer_t* release_keybuf();
  void set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf);

  // optional .micromsg.SKBuiltinBuffer_t BlueToothBroadCastContent = 4;
  bool has_bluetoothbroadcastcontent() const;
  void clear_bluetoothbroadcastcontent();
  static const int kBlueToothBroadCastContentFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& bluetoothbroadcastcontent() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_bluetoothbroadcastcontent();
  ::micromsg::SKBuiltinBuffer_t* release_bluetoothbroadcastcontent();
  void set_allocated_bluetoothbroadcastcontent(::micromsg::SKBuiltinBuffer_t* bluetoothbroadcastcontent);

  // required uint32 TimeStamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 2;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 Scene = 5;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 5;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.HeartBeatRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_keybuf();
  void clear_has_keybuf();
  void set_has_bluetoothbroadcastcontent();
  void clear_has_bluetoothbroadcastcontent();
  void set_has_scene();
  void clear_has_scene();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* keybuf_;
  ::micromsg::SKBuiltinBuffer_t* bluetoothbroadcastcontent_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.HeartBeatResponse) */ {
 public:
  HeartBeatResponse();
  virtual ~HeartBeatResponse();

  HeartBeatResponse(const HeartBeatResponse& from);

  inline HeartBeatResponse& operator=(const HeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatResponse& default_instance();

  static inline const HeartBeatResponse* internal_default_instance() {
    return reinterpret_cast<const HeartBeatResponse*>(
               &_HeartBeatResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(HeartBeatResponse* other);

  // implements Message ----------------------------------------------

  inline HeartBeatResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartBeatResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartBeatResponse& from);
  void MergeFrom(const HeartBeatResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartBeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional .micromsg.SKBuiltinBuffer_t BlueToothBroadCastContent = 4;
  bool has_bluetoothbroadcastcontent() const;
  void clear_bluetoothbroadcastcontent();
  static const int kBlueToothBroadCastContentFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& bluetoothbroadcastcontent() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_bluetoothbroadcastcontent();
  ::micromsg::SKBuiltinBuffer_t* release_bluetoothbroadcastcontent();
  void set_allocated_bluetoothbroadcastcontent(::micromsg::SKBuiltinBuffer_t* bluetoothbroadcastcontent);

  // required uint32 NextTime = 2;
  bool has_nexttime() const;
  void clear_nexttime();
  static const int kNextTimeFieldNumber = 2;
  ::google::protobuf::uint32 nexttime() const;
  void set_nexttime(::google::protobuf::uint32 value);

  // optional uint32 Selector = 3;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 3;
  ::google::protobuf::uint32 selector() const;
  void set_selector(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.HeartBeatResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_nexttime();
  void clear_has_nexttime();
  void set_has_selector();
  void clear_has_selector();
  void set_has_bluetoothbroadcastcontent();
  void clear_has_bluetoothbroadcastcontent();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* bluetoothbroadcastcontent_;
  ::google::protobuf::uint32 nexttime_;
  ::google::protobuf::uint32 selector_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCliDBEncryptInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCliDBEncryptInfoRequest) */ {
 public:
  GetCliDBEncryptInfoRequest();
  virtual ~GetCliDBEncryptInfoRequest();

  GetCliDBEncryptInfoRequest(const GetCliDBEncryptInfoRequest& from);

  inline GetCliDBEncryptInfoRequest& operator=(const GetCliDBEncryptInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCliDBEncryptInfoRequest& default_instance();

  static inline const GetCliDBEncryptInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetCliDBEncryptInfoRequest*>(
               &_GetCliDBEncryptInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetCliDBEncryptInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetCliDBEncryptInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCliDBEncryptInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCliDBEncryptInfoRequest& from);
  void MergeFrom(const GetCliDBEncryptInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCliDBEncryptInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t CliDBEncryptKey = 3;
  bool has_clidbencryptkey() const;
  void clear_clidbencryptkey();
  static const int kCliDBEncryptKeyFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& clidbencryptkey() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_clidbencryptkey();
  ::micromsg::SKBuiltinBuffer_t* release_clidbencryptkey();
  void set_allocated_clidbencryptkey(::micromsg::SKBuiltinBuffer_t* clidbencryptkey);

  // required .micromsg.SKBuiltinBuffer_t CliDBEncryptInfo = 4;
  bool has_clidbencryptinfo() const;
  void clear_clidbencryptinfo();
  static const int kCliDBEncryptInfoFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& clidbencryptinfo() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_clidbencryptinfo();
  ::micromsg::SKBuiltinBuffer_t* release_clidbencryptinfo();
  void set_allocated_clidbencryptinfo(::micromsg::SKBuiltinBuffer_t* clidbencryptinfo);

  // required uint32 CertVersion = 2;
  bool has_certversion() const;
  void clear_certversion();
  static const int kCertVersionFieldNumber = 2;
  ::google::protobuf::uint32 certversion() const;
  void set_certversion(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetCliDBEncryptInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_certversion();
  void clear_has_certversion();
  void set_has_clidbencryptkey();
  void clear_has_clidbencryptkey();
  void set_has_clidbencryptinfo();
  void clear_has_clidbencryptinfo();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* clidbencryptkey_;
  ::micromsg::SKBuiltinBuffer_t* clidbencryptinfo_;
  ::google::protobuf::uint32 certversion_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCliDBEncryptInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCliDBEncryptInfoResponse) */ {
 public:
  GetCliDBEncryptInfoResponse();
  virtual ~GetCliDBEncryptInfoResponse();

  GetCliDBEncryptInfoResponse(const GetCliDBEncryptInfoResponse& from);

  inline GetCliDBEncryptInfoResponse& operator=(const GetCliDBEncryptInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCliDBEncryptInfoResponse& default_instance();

  static inline const GetCliDBEncryptInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetCliDBEncryptInfoResponse*>(
               &_GetCliDBEncryptInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GetCliDBEncryptInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetCliDBEncryptInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCliDBEncryptInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCliDBEncryptInfoResponse& from);
  void MergeFrom(const GetCliDBEncryptInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCliDBEncryptInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t CliDBEncryptKey = 2;
  bool has_clidbencryptkey() const;
  void clear_clidbencryptkey();
  static const int kCliDBEncryptKeyFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& clidbencryptkey() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_clidbencryptkey();
  ::micromsg::SKBuiltinBuffer_t* release_clidbencryptkey();
  void set_allocated_clidbencryptkey(::micromsg::SKBuiltinBuffer_t* clidbencryptkey);

  // required .micromsg.SKBuiltinBuffer_t CliDBEncryptInfo = 3;
  bool has_clidbencryptinfo() const;
  void clear_clidbencryptinfo();
  static const int kCliDBEncryptInfoFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& clidbencryptinfo() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_clidbencryptinfo();
  ::micromsg::SKBuiltinBuffer_t* release_clidbencryptinfo();
  void set_allocated_clidbencryptinfo(::micromsg::SKBuiltinBuffer_t* clidbencryptinfo);

  // @@protoc_insertion_point(class_scope:micromsg.GetCliDBEncryptInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_clidbencryptkey();
  void clear_has_clidbencryptkey();
  void set_has_clidbencryptinfo();
  void clear_has_clidbencryptinfo();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* clidbencryptkey_;
  ::micromsg::SKBuiltinBuffer_t* clidbencryptinfo_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetImUnreadMsgCountRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetImUnreadMsgCountRequest) */ {
 public:
  GetImUnreadMsgCountRequest();
  virtual ~GetImUnreadMsgCountRequest();

  GetImUnreadMsgCountRequest(const GetImUnreadMsgCountRequest& from);

  inline GetImUnreadMsgCountRequest& operator=(const GetImUnreadMsgCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetImUnreadMsgCountRequest& default_instance();

  static inline const GetImUnreadMsgCountRequest* internal_default_instance() {
    return reinterpret_cast<const GetImUnreadMsgCountRequest*>(
               &_GetImUnreadMsgCountRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GetImUnreadMsgCountRequest* other);

  // implements Message ----------------------------------------------

  inline GetImUnreadMsgCountRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetImUnreadMsgCountRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetImUnreadMsgCountRequest& from);
  void MergeFrom(const GetImUnreadMsgCountRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetImUnreadMsgCountRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetImUnreadMsgCountRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetImUnreadMsgCountResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetImUnreadMsgCountResponse) */ {
 public:
  GetImUnreadMsgCountResponse();
  virtual ~GetImUnreadMsgCountResponse();

  GetImUnreadMsgCountResponse(const GetImUnreadMsgCountResponse& from);

  inline GetImUnreadMsgCountResponse& operator=(const GetImUnreadMsgCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetImUnreadMsgCountResponse& default_instance();

  static inline const GetImUnreadMsgCountResponse* internal_default_instance() {
    return reinterpret_cast<const GetImUnreadMsgCountResponse*>(
               &_GetImUnreadMsgCountResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GetImUnreadMsgCountResponse* other);

  // implements Message ----------------------------------------------

  inline GetImUnreadMsgCountResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetImUnreadMsgCountResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetImUnreadMsgCountResponse& from);
  void MergeFrom(const GetImUnreadMsgCountResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetImUnreadMsgCountResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DisplayMsg = 2;
  bool has_displaymsg() const;
  void clear_displaymsg();
  static const int kDisplayMsgFieldNumber = 2;
  const ::std::string& displaymsg() const;
  void set_displaymsg(const ::std::string& value);
  #if LANG_CXX11
  void set_displaymsg(::std::string&& value);
  #endif
  void set_displaymsg(const char* value);
  void set_displaymsg(const char* value, size_t size);
  ::std::string* mutable_displaymsg();
  ::std::string* release_displaymsg();
  void set_allocated_displaymsg(::std::string* displaymsg);

  // optional string QQScheme = 3;
  bool has_qqscheme() const;
  void clear_qqscheme();
  static const int kQQSchemeFieldNumber = 3;
  const ::std::string& qqscheme() const;
  void set_qqscheme(const ::std::string& value);
  #if LANG_CXX11
  void set_qqscheme(::std::string&& value);
  #endif
  void set_qqscheme(const char* value);
  void set_qqscheme(const char* value, size_t size);
  ::std::string* mutable_qqscheme();
  ::std::string* release_qqscheme();
  void set_allocated_qqscheme(::std::string* qqscheme);

  // optional string DownloadUrl = 4;
  bool has_downloadurl() const;
  void clear_downloadurl();
  static const int kDownloadUrlFieldNumber = 4;
  const ::std::string& downloadurl() const;
  void set_downloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_downloadurl(::std::string&& value);
  #endif
  void set_downloadurl(const char* value);
  void set_downloadurl(const char* value, size_t size);
  ::std::string* mutable_downloadurl();
  ::std::string* release_downloadurl();
  void set_allocated_downloadurl(::std::string* downloadurl);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetImUnreadMsgCountResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_displaymsg();
  void clear_has_displaymsg();
  void set_has_qqscheme();
  void clear_has_qqscheme();
  void set_has_downloadurl();
  void clear_has_downloadurl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr displaymsg_;
  ::google::protobuf::internal::ArenaStringPtr qqscheme_;
  ::google::protobuf::internal::ArenaStringPtr downloadurl_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLocImgRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetLocImgRequest) */ {
 public:
  GetLocImgRequest();
  virtual ~GetLocImgRequest();

  GetLocImgRequest(const GetLocImgRequest& from);

  inline GetLocImgRequest& operator=(const GetLocImgRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLocImgRequest& default_instance();

  static inline const GetLocImgRequest* internal_default_instance() {
    return reinterpret_cast<const GetLocImgRequest*>(
               &_GetLocImgRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GetLocImgRequest* other);

  // implements Message ----------------------------------------------

  inline GetLocImgRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLocImgRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLocImgRequest& from);
  void MergeFrom(const GetLocImgRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLocImgRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Language = 6;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 6;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required float Longitude = 2;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // required float Latitude = 3;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  float latitude() const;
  void set_latitude(float value);

  // required uint32 Width = 4;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 4;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // required uint32 Height = 5;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // required uint32 MapType = 7;
  bool has_maptype() const;
  void clear_maptype();
  static const int kMapTypeFieldNumber = 7;
  ::google::protobuf::uint32 maptype() const;
  void set_maptype(::google::protobuf::uint32 value);

  // required uint32 ZoomLevel = 8;
  bool has_zoomlevel() const;
  void clear_zoomlevel();
  static const int kZoomLevelFieldNumber = 8;
  ::google::protobuf::uint32 zoomlevel() const;
  void set_zoomlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetLocImgRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();
  void set_has_language();
  void clear_has_language();
  void set_has_maptype();
  void clear_has_maptype();
  void set_has_zoomlevel();
  void clear_has_zoomlevel();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::micromsg::BaseRequest* baserequest_;
  float longitude_;
  float latitude_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 maptype_;
  ::google::protobuf::uint32 zoomlevel_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLocImgResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetLocImgResponse) */ {
 public:
  GetLocImgResponse();
  virtual ~GetLocImgResponse();

  GetLocImgResponse(const GetLocImgResponse& from);

  inline GetLocImgResponse& operator=(const GetLocImgResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLocImgResponse& default_instance();

  static inline const GetLocImgResponse* internal_default_instance() {
    return reinterpret_cast<const GetLocImgResponse*>(
               &_GetLocImgResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetLocImgResponse* other);

  // implements Message ----------------------------------------------

  inline GetLocImgResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLocImgResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLocImgResponse& from);
  void MergeFrom(const GetLocImgResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLocImgResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t ImgBuf = 2;
  bool has_imgbuf() const;
  void clear_imgbuf();
  static const int kImgBufFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& imgbuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_imgbuf();
  ::micromsg::SKBuiltinBuffer_t* release_imgbuf();
  void set_allocated_imgbuf(::micromsg::SKBuiltinBuffer_t* imgbuf);

  // @@protoc_insertion_point(class_scope:micromsg.GetLocImgResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_imgbuf();
  void clear_has_imgbuf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* imgbuf_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetWeChatOutCouponsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetWeChatOutCouponsRequest) */ {
 public:
  GetWeChatOutCouponsRequest();
  virtual ~GetWeChatOutCouponsRequest();

  GetWeChatOutCouponsRequest(const GetWeChatOutCouponsRequest& from);

  inline GetWeChatOutCouponsRequest& operator=(const GetWeChatOutCouponsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWeChatOutCouponsRequest& default_instance();

  static inline const GetWeChatOutCouponsRequest* internal_default_instance() {
    return reinterpret_cast<const GetWeChatOutCouponsRequest*>(
               &_GetWeChatOutCouponsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GetWeChatOutCouponsRequest* other);

  // implements Message ----------------------------------------------

  inline GetWeChatOutCouponsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetWeChatOutCouponsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetWeChatOutCouponsRequest& from);
  void MergeFrom(const GetWeChatOutCouponsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetWeChatOutCouponsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetWeChatOutCouponsRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetWeChatOutCouponsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetWeChatOutCouponsResponse) */ {
 public:
  GetWeChatOutCouponsResponse();
  virtual ~GetWeChatOutCouponsResponse();

  GetWeChatOutCouponsResponse(const GetWeChatOutCouponsResponse& from);

  inline GetWeChatOutCouponsResponse& operator=(const GetWeChatOutCouponsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWeChatOutCouponsResponse& default_instance();

  static inline const GetWeChatOutCouponsResponse* internal_default_instance() {
    return reinterpret_cast<const GetWeChatOutCouponsResponse*>(
               &_GetWeChatOutCouponsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GetWeChatOutCouponsResponse* other);

  // implements Message ----------------------------------------------

  inline GetWeChatOutCouponsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetWeChatOutCouponsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetWeChatOutCouponsResponse& from);
  void MergeFrom(const GetWeChatOutCouponsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetWeChatOutCouponsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Coupons = 2;
  bool has_coupons() const;
  void clear_coupons();
  static const int kCouponsFieldNumber = 2;
  const ::std::string& coupons() const;
  void set_coupons(const ::std::string& value);
  #if LANG_CXX11
  void set_coupons(::std::string&& value);
  #endif
  void set_coupons(const char* value);
  void set_coupons(const char* value, size_t size);
  ::std::string* mutable_coupons();
  ::std::string* release_coupons();
  void set_allocated_coupons(::std::string* coupons);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetWeChatOutCouponsResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_coupons();
  void clear_has_coupons();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr coupons_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmweb_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetQRCodeRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetQRCodeRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetQRCodeRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetQRCodeRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetQRCodeRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetQRCodeRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQRCodeRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetQRCodeRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetQRCodeRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetQRCodeRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetQRCodeRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetQRCodeRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetQRCodeRequest.BaseRequest)
}

// required .micromsg.SKBuiltinString_t UserName = 2;
inline bool GetQRCodeRequest::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetQRCodeRequest::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetQRCodeRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetQRCodeRequest::clear_username() {
  if (username_ != NULL) username_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_username();
}
inline const ::micromsg::SKBuiltinString_t& GetQRCodeRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQRCodeRequest.UserName)
  return username_ != NULL ? *username_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* GetQRCodeRequest::mutable_username() {
  set_has_username();
  if (username_ == NULL) {
    username_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetQRCodeRequest.UserName)
  return username_;
}
inline ::micromsg::SKBuiltinString_t* GetQRCodeRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.GetQRCodeRequest.UserName)
  clear_has_username();
  ::micromsg::SKBuiltinString_t* temp = username_;
  username_ = NULL;
  return temp;
}
inline void GetQRCodeRequest::set_allocated_username(::micromsg::SKBuiltinString_t* username) {
  delete username_;
  username_ = username;
  if (username) {
    set_has_username();
  } else {
    clear_has_username();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetQRCodeRequest.UserName)
}

// required uint32 Style = 3;
inline bool GetQRCodeRequest::has_style() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetQRCodeRequest::set_has_style() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetQRCodeRequest::clear_has_style() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetQRCodeRequest::clear_style() {
  style_ = 0u;
  clear_has_style();
}
inline ::google::protobuf::uint32 GetQRCodeRequest::style() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQRCodeRequest.Style)
  return style_;
}
inline void GetQRCodeRequest::set_style(::google::protobuf::uint32 value) {
  set_has_style();
  style_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetQRCodeRequest.Style)
}

// -------------------------------------------------------------------

// GetQRCodeResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetQRCodeResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetQRCodeResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetQRCodeResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetQRCodeResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetQRCodeResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQRCodeResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetQRCodeResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetQRCodeResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetQRCodeResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetQRCodeResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetQRCodeResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetQRCodeResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t QRCode = 2;
inline bool GetQRCodeResponse::has_qrcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetQRCodeResponse::set_has_qrcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetQRCodeResponse::clear_has_qrcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetQRCodeResponse::clear_qrcode() {
  if (qrcode_ != NULL) qrcode_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_qrcode();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetQRCodeResponse::qrcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQRCodeResponse.QRCode)
  return qrcode_ != NULL ? *qrcode_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetQRCodeResponse::mutable_qrcode() {
  set_has_qrcode();
  if (qrcode_ == NULL) {
    qrcode_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetQRCodeResponse.QRCode)
  return qrcode_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetQRCodeResponse::release_qrcode() {
  // @@protoc_insertion_point(field_release:micromsg.GetQRCodeResponse.QRCode)
  clear_has_qrcode();
  ::micromsg::SKBuiltinBuffer_t* temp = qrcode_;
  qrcode_ = NULL;
  return temp;
}
inline void GetQRCodeResponse::set_allocated_qrcode(::micromsg::SKBuiltinBuffer_t* qrcode) {
  delete qrcode_;
  qrcode_ = qrcode;
  if (qrcode) {
    set_has_qrcode();
  } else {
    clear_has_qrcode();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetQRCodeResponse.QRCode)
}

// required uint32 Style = 5;
inline bool GetQRCodeResponse::has_style() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetQRCodeResponse::set_has_style() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetQRCodeResponse::clear_has_style() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetQRCodeResponse::clear_style() {
  style_ = 0u;
  clear_has_style();
}
inline ::google::protobuf::uint32 GetQRCodeResponse::style() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQRCodeResponse.Style)
  return style_;
}
inline void GetQRCodeResponse::set_style(::google::protobuf::uint32 value) {
  set_has_style();
  style_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetQRCodeResponse.Style)
}

// optional string FooterWording = 6;
inline bool GetQRCodeResponse::has_footerwording() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetQRCodeResponse::set_has_footerwording() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetQRCodeResponse::clear_has_footerwording() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetQRCodeResponse::clear_footerwording() {
  footerwording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_footerwording();
}
inline const ::std::string& GetQRCodeResponse::footerwording() const {
  // @@protoc_insertion_point(field_get:micromsg.GetQRCodeResponse.FooterWording)
  return footerwording_.GetNoArena();
}
inline void GetQRCodeResponse::set_footerwording(const ::std::string& value) {
  set_has_footerwording();
  footerwording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetQRCodeResponse.FooterWording)
}
#if LANG_CXX11
inline void GetQRCodeResponse::set_footerwording(::std::string&& value) {
  set_has_footerwording();
  footerwording_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetQRCodeResponse.FooterWording)
}
#endif
inline void GetQRCodeResponse::set_footerwording(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_footerwording();
  footerwording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetQRCodeResponse.FooterWording)
}
inline void GetQRCodeResponse::set_footerwording(const char* value, size_t size) {
  set_has_footerwording();
  footerwording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetQRCodeResponse.FooterWording)
}
inline ::std::string* GetQRCodeResponse::mutable_footerwording() {
  set_has_footerwording();
  // @@protoc_insertion_point(field_mutable:micromsg.GetQRCodeResponse.FooterWording)
  return footerwording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetQRCodeResponse::release_footerwording() {
  // @@protoc_insertion_point(field_release:micromsg.GetQRCodeResponse.FooterWording)
  clear_has_footerwording();
  return footerwording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetQRCodeResponse::set_allocated_footerwording(::std::string* footerwording) {
  if (footerwording != NULL) {
    set_has_footerwording();
  } else {
    clear_has_footerwording();
  }
  footerwording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), footerwording);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetQRCodeResponse.FooterWording)
}

// -------------------------------------------------------------------

// RevokeChatRoomQRCodeRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RevokeChatRoomQRCodeRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RevokeChatRoomQRCodeRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RevokeChatRoomQRCodeRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RevokeChatRoomQRCodeRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RevokeChatRoomQRCodeRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RevokeChatRoomQRCodeRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RevokeChatRoomQRCodeRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RevokeChatRoomQRCodeRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RevokeChatRoomQRCodeRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RevokeChatRoomQRCodeRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RevokeChatRoomQRCodeRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RevokeChatRoomQRCodeRequest.BaseRequest)
}

// optional string QRCode = 2;
inline bool RevokeChatRoomQRCodeRequest::has_qrcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RevokeChatRoomQRCodeRequest::set_has_qrcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RevokeChatRoomQRCodeRequest::clear_has_qrcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RevokeChatRoomQRCodeRequest::clear_qrcode() {
  qrcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qrcode();
}
inline const ::std::string& RevokeChatRoomQRCodeRequest::qrcode() const {
  // @@protoc_insertion_point(field_get:micromsg.RevokeChatRoomQRCodeRequest.QRCode)
  return qrcode_.GetNoArena();
}
inline void RevokeChatRoomQRCodeRequest::set_qrcode(const ::std::string& value) {
  set_has_qrcode();
  qrcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RevokeChatRoomQRCodeRequest.QRCode)
}
#if LANG_CXX11
inline void RevokeChatRoomQRCodeRequest::set_qrcode(::std::string&& value) {
  set_has_qrcode();
  qrcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RevokeChatRoomQRCodeRequest.QRCode)
}
#endif
inline void RevokeChatRoomQRCodeRequest::set_qrcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_qrcode();
  qrcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RevokeChatRoomQRCodeRequest.QRCode)
}
inline void RevokeChatRoomQRCodeRequest::set_qrcode(const char* value, size_t size) {
  set_has_qrcode();
  qrcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RevokeChatRoomQRCodeRequest.QRCode)
}
inline ::std::string* RevokeChatRoomQRCodeRequest::mutable_qrcode() {
  set_has_qrcode();
  // @@protoc_insertion_point(field_mutable:micromsg.RevokeChatRoomQRCodeRequest.QRCode)
  return qrcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RevokeChatRoomQRCodeRequest::release_qrcode() {
  // @@protoc_insertion_point(field_release:micromsg.RevokeChatRoomQRCodeRequest.QRCode)
  clear_has_qrcode();
  return qrcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RevokeChatRoomQRCodeRequest::set_allocated_qrcode(::std::string* qrcode) {
  if (qrcode != NULL) {
    set_has_qrcode();
  } else {
    clear_has_qrcode();
  }
  qrcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qrcode);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RevokeChatRoomQRCodeRequest.QRCode)
}

// optional string ChatRoomUserName = 3;
inline bool RevokeChatRoomQRCodeRequest::has_chatroomusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RevokeChatRoomQRCodeRequest::set_has_chatroomusername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RevokeChatRoomQRCodeRequest::clear_has_chatroomusername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RevokeChatRoomQRCodeRequest::clear_chatroomusername() {
  chatroomusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatroomusername();
}
inline const ::std::string& RevokeChatRoomQRCodeRequest::chatroomusername() const {
  // @@protoc_insertion_point(field_get:micromsg.RevokeChatRoomQRCodeRequest.ChatRoomUserName)
  return chatroomusername_.GetNoArena();
}
inline void RevokeChatRoomQRCodeRequest::set_chatroomusername(const ::std::string& value) {
  set_has_chatroomusername();
  chatroomusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RevokeChatRoomQRCodeRequest.ChatRoomUserName)
}
#if LANG_CXX11
inline void RevokeChatRoomQRCodeRequest::set_chatroomusername(::std::string&& value) {
  set_has_chatroomusername();
  chatroomusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RevokeChatRoomQRCodeRequest.ChatRoomUserName)
}
#endif
inline void RevokeChatRoomQRCodeRequest::set_chatroomusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatroomusername();
  chatroomusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RevokeChatRoomQRCodeRequest.ChatRoomUserName)
}
inline void RevokeChatRoomQRCodeRequest::set_chatroomusername(const char* value, size_t size) {
  set_has_chatroomusername();
  chatroomusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RevokeChatRoomQRCodeRequest.ChatRoomUserName)
}
inline ::std::string* RevokeChatRoomQRCodeRequest::mutable_chatroomusername() {
  set_has_chatroomusername();
  // @@protoc_insertion_point(field_mutable:micromsg.RevokeChatRoomQRCodeRequest.ChatRoomUserName)
  return chatroomusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RevokeChatRoomQRCodeRequest::release_chatroomusername() {
  // @@protoc_insertion_point(field_release:micromsg.RevokeChatRoomQRCodeRequest.ChatRoomUserName)
  clear_has_chatroomusername();
  return chatroomusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RevokeChatRoomQRCodeRequest::set_allocated_chatroomusername(::std::string* chatroomusername) {
  if (chatroomusername != NULL) {
    set_has_chatroomusername();
  } else {
    clear_has_chatroomusername();
  }
  chatroomusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatroomusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RevokeChatRoomQRCodeRequest.ChatRoomUserName)
}

// -------------------------------------------------------------------

// RevokeChatRoomQRCodeResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool RevokeChatRoomQRCodeResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RevokeChatRoomQRCodeResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RevokeChatRoomQRCodeResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RevokeChatRoomQRCodeResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RevokeChatRoomQRCodeResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RevokeChatRoomQRCodeResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RevokeChatRoomQRCodeResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RevokeChatRoomQRCodeResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RevokeChatRoomQRCodeResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RevokeChatRoomQRCodeResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RevokeChatRoomQRCodeResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RevokeChatRoomQRCodeResponse.BaseResponse)
}

// -------------------------------------------------------------------

// SendQRCodeByEmailReq

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SendQRCodeByEmailReq::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendQRCodeByEmailReq::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendQRCodeByEmailReq::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendQRCodeByEmailReq::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SendQRCodeByEmailReq::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SendQRCodeByEmailReq.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SendQRCodeByEmailReq::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendQRCodeByEmailReq.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SendQRCodeByEmailReq::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SendQRCodeByEmailReq.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SendQRCodeByEmailReq::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendQRCodeByEmailReq.BaseRequest)
}

// optional string QRCodeUserName = 2;
inline bool SendQRCodeByEmailReq::has_qrcodeusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendQRCodeByEmailReq::set_has_qrcodeusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendQRCodeByEmailReq::clear_has_qrcodeusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendQRCodeByEmailReq::clear_qrcodeusername() {
  qrcodeusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qrcodeusername();
}
inline const ::std::string& SendQRCodeByEmailReq::qrcodeusername() const {
  // @@protoc_insertion_point(field_get:micromsg.SendQRCodeByEmailReq.QRCodeUserName)
  return qrcodeusername_.GetNoArena();
}
inline void SendQRCodeByEmailReq::set_qrcodeusername(const ::std::string& value) {
  set_has_qrcodeusername();
  qrcodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendQRCodeByEmailReq.QRCodeUserName)
}
#if LANG_CXX11
inline void SendQRCodeByEmailReq::set_qrcodeusername(::std::string&& value) {
  set_has_qrcodeusername();
  qrcodeusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendQRCodeByEmailReq.QRCodeUserName)
}
#endif
inline void SendQRCodeByEmailReq::set_qrcodeusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_qrcodeusername();
  qrcodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendQRCodeByEmailReq.QRCodeUserName)
}
inline void SendQRCodeByEmailReq::set_qrcodeusername(const char* value, size_t size) {
  set_has_qrcodeusername();
  qrcodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendQRCodeByEmailReq.QRCodeUserName)
}
inline ::std::string* SendQRCodeByEmailReq::mutable_qrcodeusername() {
  set_has_qrcodeusername();
  // @@protoc_insertion_point(field_mutable:micromsg.SendQRCodeByEmailReq.QRCodeUserName)
  return qrcodeusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendQRCodeByEmailReq::release_qrcodeusername() {
  // @@protoc_insertion_point(field_release:micromsg.SendQRCodeByEmailReq.QRCodeUserName)
  clear_has_qrcodeusername();
  return qrcodeusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendQRCodeByEmailReq::set_allocated_qrcodeusername(::std::string* qrcodeusername) {
  if (qrcodeusername != NULL) {
    set_has_qrcodeusername();
  } else {
    clear_has_qrcodeusername();
  }
  qrcodeusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qrcodeusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendQRCodeByEmailReq.QRCodeUserName)
}

// required uint32 ToCount = 3;
inline bool SendQRCodeByEmailReq::has_tocount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendQRCodeByEmailReq::set_has_tocount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendQRCodeByEmailReq::clear_has_tocount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendQRCodeByEmailReq::clear_tocount() {
  tocount_ = 0u;
  clear_has_tocount();
}
inline ::google::protobuf::uint32 SendQRCodeByEmailReq::tocount() const {
  // @@protoc_insertion_point(field_get:micromsg.SendQRCodeByEmailReq.ToCount)
  return tocount_;
}
inline void SendQRCodeByEmailReq::set_tocount(::google::protobuf::uint32 value) {
  set_has_tocount();
  tocount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendQRCodeByEmailReq.ToCount)
}

// repeated .micromsg.SKBuiltinString_t ToList = 4;
inline int SendQRCodeByEmailReq::tolist_size() const {
  return tolist_.size();
}
inline void SendQRCodeByEmailReq::clear_tolist() {
  tolist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& SendQRCodeByEmailReq::tolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SendQRCodeByEmailReq.ToList)
  return tolist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* SendQRCodeByEmailReq::mutable_tolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SendQRCodeByEmailReq.ToList)
  return tolist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* SendQRCodeByEmailReq::add_tolist() {
  // @@protoc_insertion_point(field_add:micromsg.SendQRCodeByEmailReq.ToList)
  return tolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
SendQRCodeByEmailReq::mutable_tolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SendQRCodeByEmailReq.ToList)
  return &tolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
SendQRCodeByEmailReq::tolist() const {
  // @@protoc_insertion_point(field_list:micromsg.SendQRCodeByEmailReq.ToList)
  return tolist_;
}

// optional string Tittle = 5;
inline bool SendQRCodeByEmailReq::has_tittle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendQRCodeByEmailReq::set_has_tittle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendQRCodeByEmailReq::clear_has_tittle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendQRCodeByEmailReq::clear_tittle() {
  tittle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tittle();
}
inline const ::std::string& SendQRCodeByEmailReq::tittle() const {
  // @@protoc_insertion_point(field_get:micromsg.SendQRCodeByEmailReq.Tittle)
  return tittle_.GetNoArena();
}
inline void SendQRCodeByEmailReq::set_tittle(const ::std::string& value) {
  set_has_tittle();
  tittle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendQRCodeByEmailReq.Tittle)
}
#if LANG_CXX11
inline void SendQRCodeByEmailReq::set_tittle(::std::string&& value) {
  set_has_tittle();
  tittle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendQRCodeByEmailReq.Tittle)
}
#endif
inline void SendQRCodeByEmailReq::set_tittle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tittle();
  tittle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendQRCodeByEmailReq.Tittle)
}
inline void SendQRCodeByEmailReq::set_tittle(const char* value, size_t size) {
  set_has_tittle();
  tittle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendQRCodeByEmailReq.Tittle)
}
inline ::std::string* SendQRCodeByEmailReq::mutable_tittle() {
  set_has_tittle();
  // @@protoc_insertion_point(field_mutable:micromsg.SendQRCodeByEmailReq.Tittle)
  return tittle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendQRCodeByEmailReq::release_tittle() {
  // @@protoc_insertion_point(field_release:micromsg.SendQRCodeByEmailReq.Tittle)
  clear_has_tittle();
  return tittle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendQRCodeByEmailReq::set_allocated_tittle(::std::string* tittle) {
  if (tittle != NULL) {
    set_has_tittle();
  } else {
    clear_has_tittle();
  }
  tittle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tittle);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendQRCodeByEmailReq.Tittle)
}

// optional string Content = 6;
inline bool SendQRCodeByEmailReq::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendQRCodeByEmailReq::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendQRCodeByEmailReq::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendQRCodeByEmailReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& SendQRCodeByEmailReq::content() const {
  // @@protoc_insertion_point(field_get:micromsg.SendQRCodeByEmailReq.Content)
  return content_.GetNoArena();
}
inline void SendQRCodeByEmailReq::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendQRCodeByEmailReq.Content)
}
#if LANG_CXX11
inline void SendQRCodeByEmailReq::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendQRCodeByEmailReq.Content)
}
#endif
inline void SendQRCodeByEmailReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendQRCodeByEmailReq.Content)
}
inline void SendQRCodeByEmailReq::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendQRCodeByEmailReq.Content)
}
inline ::std::string* SendQRCodeByEmailReq::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.SendQRCodeByEmailReq.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendQRCodeByEmailReq::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.SendQRCodeByEmailReq.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendQRCodeByEmailReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendQRCodeByEmailReq.Content)
}

// -------------------------------------------------------------------

// SendQRCodeByEmailResp

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SendQRCodeByEmailResp::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendQRCodeByEmailResp::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendQRCodeByEmailResp::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendQRCodeByEmailResp::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SendQRCodeByEmailResp::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SendQRCodeByEmailResp.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SendQRCodeByEmailResp::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendQRCodeByEmailResp.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SendQRCodeByEmailResp::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SendQRCodeByEmailResp.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SendQRCodeByEmailResp::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendQRCodeByEmailResp.BaseResponse)
}

// -------------------------------------------------------------------

// GetCardRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetCardRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetCardRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetCardRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetCardRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetCardRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardRequest.BaseRequest)
}

// required uint32 Type = 2;
inline bool GetCardRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCardRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCardRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCardRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GetCardRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardRequest.Type)
  return type_;
}
inline void GetCardRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetCardRequest.Type)
}

// -------------------------------------------------------------------

// GetCardResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetCardResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetCardResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetCardResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetCardResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetCardResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t Image = 2;
inline bool GetCardResponse::has_image() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCardResponse::set_has_image() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCardResponse::clear_has_image() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCardResponse::clear_image() {
  if (image_ != NULL) image_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_image();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetCardResponse::image() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardResponse.Image)
  return image_ != NULL ? *image_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetCardResponse::mutable_image() {
  set_has_image();
  if (image_ == NULL) {
    image_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardResponse.Image)
  return image_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetCardResponse::release_image() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardResponse.Image)
  clear_has_image();
  ::micromsg::SKBuiltinBuffer_t* temp = image_;
  image_ = NULL;
  return temp;
}
inline void GetCardResponse::set_allocated_image(::micromsg::SKBuiltinBuffer_t* image) {
  delete image_;
  image_ = image;
  if (image) {
    set_has_image();
  } else {
    clear_has_image();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardResponse.Image)
}

// -------------------------------------------------------------------

// HeartBeatRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool HeartBeatRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& HeartBeatRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.HeartBeatRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* HeartBeatRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.HeartBeatRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* HeartBeatRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.HeartBeatRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void HeartBeatRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.HeartBeatRequest.BaseRequest)
}

// required uint32 TimeStamp = 2;
inline bool HeartBeatRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeartBeatRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeartBeatRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeartBeatRequest::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 HeartBeatRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:micromsg.HeartBeatRequest.TimeStamp)
  return timestamp_;
}
inline void HeartBeatRequest::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HeartBeatRequest.TimeStamp)
}

// optional .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
inline bool HeartBeatRequest::has_keybuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartBeatRequest::set_has_keybuf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartBeatRequest::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartBeatRequest::clear_keybuf() {
  if (keybuf_ != NULL) keybuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& HeartBeatRequest::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.HeartBeatRequest.KeyBuf)
  return keybuf_ != NULL ? *keybuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* HeartBeatRequest::mutable_keybuf() {
  set_has_keybuf();
  if (keybuf_ == NULL) {
    keybuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.HeartBeatRequest.KeyBuf)
  return keybuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* HeartBeatRequest::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.HeartBeatRequest.KeyBuf)
  clear_has_keybuf();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuf_;
  keybuf_ = NULL;
  return temp;
}
inline void HeartBeatRequest::set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf) {
  delete keybuf_;
  keybuf_ = keybuf;
  if (keybuf) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.HeartBeatRequest.KeyBuf)
}

// optional .micromsg.SKBuiltinBuffer_t BlueToothBroadCastContent = 4;
inline bool HeartBeatRequest::has_bluetoothbroadcastcontent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeartBeatRequest::set_has_bluetoothbroadcastcontent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeartBeatRequest::clear_has_bluetoothbroadcastcontent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeartBeatRequest::clear_bluetoothbroadcastcontent() {
  if (bluetoothbroadcastcontent_ != NULL) bluetoothbroadcastcontent_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_bluetoothbroadcastcontent();
}
inline const ::micromsg::SKBuiltinBuffer_t& HeartBeatRequest::bluetoothbroadcastcontent() const {
  // @@protoc_insertion_point(field_get:micromsg.HeartBeatRequest.BlueToothBroadCastContent)
  return bluetoothbroadcastcontent_ != NULL ? *bluetoothbroadcastcontent_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* HeartBeatRequest::mutable_bluetoothbroadcastcontent() {
  set_has_bluetoothbroadcastcontent();
  if (bluetoothbroadcastcontent_ == NULL) {
    bluetoothbroadcastcontent_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.HeartBeatRequest.BlueToothBroadCastContent)
  return bluetoothbroadcastcontent_;
}
inline ::micromsg::SKBuiltinBuffer_t* HeartBeatRequest::release_bluetoothbroadcastcontent() {
  // @@protoc_insertion_point(field_release:micromsg.HeartBeatRequest.BlueToothBroadCastContent)
  clear_has_bluetoothbroadcastcontent();
  ::micromsg::SKBuiltinBuffer_t* temp = bluetoothbroadcastcontent_;
  bluetoothbroadcastcontent_ = NULL;
  return temp;
}
inline void HeartBeatRequest::set_allocated_bluetoothbroadcastcontent(::micromsg::SKBuiltinBuffer_t* bluetoothbroadcastcontent) {
  delete bluetoothbroadcastcontent_;
  bluetoothbroadcastcontent_ = bluetoothbroadcastcontent;
  if (bluetoothbroadcastcontent) {
    set_has_bluetoothbroadcastcontent();
  } else {
    clear_has_bluetoothbroadcastcontent();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.HeartBeatRequest.BlueToothBroadCastContent)
}

// optional uint32 Scene = 5;
inline bool HeartBeatRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeartBeatRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeartBeatRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeartBeatRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 HeartBeatRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.HeartBeatRequest.Scene)
  return scene_;
}
inline void HeartBeatRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HeartBeatRequest.Scene)
}

// -------------------------------------------------------------------

// HeartBeatResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool HeartBeatResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& HeartBeatResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.HeartBeatResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* HeartBeatResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.HeartBeatResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* HeartBeatResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.HeartBeatResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void HeartBeatResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.HeartBeatResponse.BaseResponse)
}

// required uint32 NextTime = 2;
inline bool HeartBeatResponse::has_nexttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeartBeatResponse::set_has_nexttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeartBeatResponse::clear_has_nexttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeartBeatResponse::clear_nexttime() {
  nexttime_ = 0u;
  clear_has_nexttime();
}
inline ::google::protobuf::uint32 HeartBeatResponse::nexttime() const {
  // @@protoc_insertion_point(field_get:micromsg.HeartBeatResponse.NextTime)
  return nexttime_;
}
inline void HeartBeatResponse::set_nexttime(::google::protobuf::uint32 value) {
  set_has_nexttime();
  nexttime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HeartBeatResponse.NextTime)
}

// optional uint32 Selector = 3;
inline bool HeartBeatResponse::has_selector() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeartBeatResponse::set_has_selector() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeartBeatResponse::clear_has_selector() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeartBeatResponse::clear_selector() {
  selector_ = 0u;
  clear_has_selector();
}
inline ::google::protobuf::uint32 HeartBeatResponse::selector() const {
  // @@protoc_insertion_point(field_get:micromsg.HeartBeatResponse.Selector)
  return selector_;
}
inline void HeartBeatResponse::set_selector(::google::protobuf::uint32 value) {
  set_has_selector();
  selector_ = value;
  // @@protoc_insertion_point(field_set:micromsg.HeartBeatResponse.Selector)
}

// optional .micromsg.SKBuiltinBuffer_t BlueToothBroadCastContent = 4;
inline bool HeartBeatResponse::has_bluetoothbroadcastcontent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartBeatResponse::set_has_bluetoothbroadcastcontent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartBeatResponse::clear_has_bluetoothbroadcastcontent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartBeatResponse::clear_bluetoothbroadcastcontent() {
  if (bluetoothbroadcastcontent_ != NULL) bluetoothbroadcastcontent_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_bluetoothbroadcastcontent();
}
inline const ::micromsg::SKBuiltinBuffer_t& HeartBeatResponse::bluetoothbroadcastcontent() const {
  // @@protoc_insertion_point(field_get:micromsg.HeartBeatResponse.BlueToothBroadCastContent)
  return bluetoothbroadcastcontent_ != NULL ? *bluetoothbroadcastcontent_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* HeartBeatResponse::mutable_bluetoothbroadcastcontent() {
  set_has_bluetoothbroadcastcontent();
  if (bluetoothbroadcastcontent_ == NULL) {
    bluetoothbroadcastcontent_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.HeartBeatResponse.BlueToothBroadCastContent)
  return bluetoothbroadcastcontent_;
}
inline ::micromsg::SKBuiltinBuffer_t* HeartBeatResponse::release_bluetoothbroadcastcontent() {
  // @@protoc_insertion_point(field_release:micromsg.HeartBeatResponse.BlueToothBroadCastContent)
  clear_has_bluetoothbroadcastcontent();
  ::micromsg::SKBuiltinBuffer_t* temp = bluetoothbroadcastcontent_;
  bluetoothbroadcastcontent_ = NULL;
  return temp;
}
inline void HeartBeatResponse::set_allocated_bluetoothbroadcastcontent(::micromsg::SKBuiltinBuffer_t* bluetoothbroadcastcontent) {
  delete bluetoothbroadcastcontent_;
  bluetoothbroadcastcontent_ = bluetoothbroadcastcontent;
  if (bluetoothbroadcastcontent) {
    set_has_bluetoothbroadcastcontent();
  } else {
    clear_has_bluetoothbroadcastcontent();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.HeartBeatResponse.BlueToothBroadCastContent)
}

// -------------------------------------------------------------------

// GetCliDBEncryptInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetCliDBEncryptInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCliDBEncryptInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCliDBEncryptInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCliDBEncryptInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetCliDBEncryptInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCliDBEncryptInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetCliDBEncryptInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCliDBEncryptInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetCliDBEncryptInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetCliDBEncryptInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetCliDBEncryptInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCliDBEncryptInfoRequest.BaseRequest)
}

// required uint32 CertVersion = 2;
inline bool GetCliDBEncryptInfoRequest::has_certversion() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetCliDBEncryptInfoRequest::set_has_certversion() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetCliDBEncryptInfoRequest::clear_has_certversion() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetCliDBEncryptInfoRequest::clear_certversion() {
  certversion_ = 0u;
  clear_has_certversion();
}
inline ::google::protobuf::uint32 GetCliDBEncryptInfoRequest::certversion() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCliDBEncryptInfoRequest.CertVersion)
  return certversion_;
}
inline void GetCliDBEncryptInfoRequest::set_certversion(::google::protobuf::uint32 value) {
  set_has_certversion();
  certversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetCliDBEncryptInfoRequest.CertVersion)
}

// required .micromsg.SKBuiltinBuffer_t CliDBEncryptKey = 3;
inline bool GetCliDBEncryptInfoRequest::has_clidbencryptkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCliDBEncryptInfoRequest::set_has_clidbencryptkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCliDBEncryptInfoRequest::clear_has_clidbencryptkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCliDBEncryptInfoRequest::clear_clidbencryptkey() {
  if (clidbencryptkey_ != NULL) clidbencryptkey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_clidbencryptkey();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetCliDBEncryptInfoRequest::clidbencryptkey() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCliDBEncryptInfoRequest.CliDBEncryptKey)
  return clidbencryptkey_ != NULL ? *clidbencryptkey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetCliDBEncryptInfoRequest::mutable_clidbencryptkey() {
  set_has_clidbencryptkey();
  if (clidbencryptkey_ == NULL) {
    clidbencryptkey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCliDBEncryptInfoRequest.CliDBEncryptKey)
  return clidbencryptkey_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetCliDBEncryptInfoRequest::release_clidbencryptkey() {
  // @@protoc_insertion_point(field_release:micromsg.GetCliDBEncryptInfoRequest.CliDBEncryptKey)
  clear_has_clidbencryptkey();
  ::micromsg::SKBuiltinBuffer_t* temp = clidbencryptkey_;
  clidbencryptkey_ = NULL;
  return temp;
}
inline void GetCliDBEncryptInfoRequest::set_allocated_clidbencryptkey(::micromsg::SKBuiltinBuffer_t* clidbencryptkey) {
  delete clidbencryptkey_;
  clidbencryptkey_ = clidbencryptkey;
  if (clidbencryptkey) {
    set_has_clidbencryptkey();
  } else {
    clear_has_clidbencryptkey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCliDBEncryptInfoRequest.CliDBEncryptKey)
}

// required .micromsg.SKBuiltinBuffer_t CliDBEncryptInfo = 4;
inline bool GetCliDBEncryptInfoRequest::has_clidbencryptinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCliDBEncryptInfoRequest::set_has_clidbencryptinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCliDBEncryptInfoRequest::clear_has_clidbencryptinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCliDBEncryptInfoRequest::clear_clidbencryptinfo() {
  if (clidbencryptinfo_ != NULL) clidbencryptinfo_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_clidbencryptinfo();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetCliDBEncryptInfoRequest::clidbencryptinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCliDBEncryptInfoRequest.CliDBEncryptInfo)
  return clidbencryptinfo_ != NULL ? *clidbencryptinfo_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetCliDBEncryptInfoRequest::mutable_clidbencryptinfo() {
  set_has_clidbencryptinfo();
  if (clidbencryptinfo_ == NULL) {
    clidbencryptinfo_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCliDBEncryptInfoRequest.CliDBEncryptInfo)
  return clidbencryptinfo_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetCliDBEncryptInfoRequest::release_clidbencryptinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetCliDBEncryptInfoRequest.CliDBEncryptInfo)
  clear_has_clidbencryptinfo();
  ::micromsg::SKBuiltinBuffer_t* temp = clidbencryptinfo_;
  clidbencryptinfo_ = NULL;
  return temp;
}
inline void GetCliDBEncryptInfoRequest::set_allocated_clidbencryptinfo(::micromsg::SKBuiltinBuffer_t* clidbencryptinfo) {
  delete clidbencryptinfo_;
  clidbencryptinfo_ = clidbencryptinfo;
  if (clidbencryptinfo) {
    set_has_clidbencryptinfo();
  } else {
    clear_has_clidbencryptinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCliDBEncryptInfoRequest.CliDBEncryptInfo)
}

// -------------------------------------------------------------------

// GetCliDBEncryptInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetCliDBEncryptInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCliDBEncryptInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCliDBEncryptInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCliDBEncryptInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetCliDBEncryptInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCliDBEncryptInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetCliDBEncryptInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCliDBEncryptInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetCliDBEncryptInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetCliDBEncryptInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetCliDBEncryptInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCliDBEncryptInfoResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t CliDBEncryptKey = 2;
inline bool GetCliDBEncryptInfoResponse::has_clidbencryptkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCliDBEncryptInfoResponse::set_has_clidbencryptkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCliDBEncryptInfoResponse::clear_has_clidbencryptkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCliDBEncryptInfoResponse::clear_clidbencryptkey() {
  if (clidbencryptkey_ != NULL) clidbencryptkey_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_clidbencryptkey();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetCliDBEncryptInfoResponse::clidbencryptkey() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCliDBEncryptInfoResponse.CliDBEncryptKey)
  return clidbencryptkey_ != NULL ? *clidbencryptkey_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetCliDBEncryptInfoResponse::mutable_clidbencryptkey() {
  set_has_clidbencryptkey();
  if (clidbencryptkey_ == NULL) {
    clidbencryptkey_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCliDBEncryptInfoResponse.CliDBEncryptKey)
  return clidbencryptkey_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetCliDBEncryptInfoResponse::release_clidbencryptkey() {
  // @@protoc_insertion_point(field_release:micromsg.GetCliDBEncryptInfoResponse.CliDBEncryptKey)
  clear_has_clidbencryptkey();
  ::micromsg::SKBuiltinBuffer_t* temp = clidbencryptkey_;
  clidbencryptkey_ = NULL;
  return temp;
}
inline void GetCliDBEncryptInfoResponse::set_allocated_clidbencryptkey(::micromsg::SKBuiltinBuffer_t* clidbencryptkey) {
  delete clidbencryptkey_;
  clidbencryptkey_ = clidbencryptkey;
  if (clidbencryptkey) {
    set_has_clidbencryptkey();
  } else {
    clear_has_clidbencryptkey();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCliDBEncryptInfoResponse.CliDBEncryptKey)
}

// required .micromsg.SKBuiltinBuffer_t CliDBEncryptInfo = 3;
inline bool GetCliDBEncryptInfoResponse::has_clidbencryptinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCliDBEncryptInfoResponse::set_has_clidbencryptinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCliDBEncryptInfoResponse::clear_has_clidbencryptinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCliDBEncryptInfoResponse::clear_clidbencryptinfo() {
  if (clidbencryptinfo_ != NULL) clidbencryptinfo_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_clidbencryptinfo();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetCliDBEncryptInfoResponse::clidbencryptinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCliDBEncryptInfoResponse.CliDBEncryptInfo)
  return clidbencryptinfo_ != NULL ? *clidbencryptinfo_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetCliDBEncryptInfoResponse::mutable_clidbencryptinfo() {
  set_has_clidbencryptinfo();
  if (clidbencryptinfo_ == NULL) {
    clidbencryptinfo_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCliDBEncryptInfoResponse.CliDBEncryptInfo)
  return clidbencryptinfo_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetCliDBEncryptInfoResponse::release_clidbencryptinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetCliDBEncryptInfoResponse.CliDBEncryptInfo)
  clear_has_clidbencryptinfo();
  ::micromsg::SKBuiltinBuffer_t* temp = clidbencryptinfo_;
  clidbencryptinfo_ = NULL;
  return temp;
}
inline void GetCliDBEncryptInfoResponse::set_allocated_clidbencryptinfo(::micromsg::SKBuiltinBuffer_t* clidbencryptinfo) {
  delete clidbencryptinfo_;
  clidbencryptinfo_ = clidbencryptinfo;
  if (clidbencryptinfo) {
    set_has_clidbencryptinfo();
  } else {
    clear_has_clidbencryptinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCliDBEncryptInfoResponse.CliDBEncryptInfo)
}

// -------------------------------------------------------------------

// GetImUnreadMsgCountRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetImUnreadMsgCountRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetImUnreadMsgCountRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetImUnreadMsgCountRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetImUnreadMsgCountRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetImUnreadMsgCountRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetImUnreadMsgCountRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetImUnreadMsgCountRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetImUnreadMsgCountRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetImUnreadMsgCountRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetImUnreadMsgCountRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetImUnreadMsgCountRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetImUnreadMsgCountRequest.BaseRequest)
}

// -------------------------------------------------------------------

// GetImUnreadMsgCountResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetImUnreadMsgCountResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetImUnreadMsgCountResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetImUnreadMsgCountResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetImUnreadMsgCountResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetImUnreadMsgCountResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetImUnreadMsgCountResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetImUnreadMsgCountResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetImUnreadMsgCountResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetImUnreadMsgCountResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetImUnreadMsgCountResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetImUnreadMsgCountResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetImUnreadMsgCountResponse.BaseResponse)
}

// optional string DisplayMsg = 2;
inline bool GetImUnreadMsgCountResponse::has_displaymsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetImUnreadMsgCountResponse::set_has_displaymsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetImUnreadMsgCountResponse::clear_has_displaymsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetImUnreadMsgCountResponse::clear_displaymsg() {
  displaymsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_displaymsg();
}
inline const ::std::string& GetImUnreadMsgCountResponse::displaymsg() const {
  // @@protoc_insertion_point(field_get:micromsg.GetImUnreadMsgCountResponse.DisplayMsg)
  return displaymsg_.GetNoArena();
}
inline void GetImUnreadMsgCountResponse::set_displaymsg(const ::std::string& value) {
  set_has_displaymsg();
  displaymsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetImUnreadMsgCountResponse.DisplayMsg)
}
#if LANG_CXX11
inline void GetImUnreadMsgCountResponse::set_displaymsg(::std::string&& value) {
  set_has_displaymsg();
  displaymsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetImUnreadMsgCountResponse.DisplayMsg)
}
#endif
inline void GetImUnreadMsgCountResponse::set_displaymsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_displaymsg();
  displaymsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetImUnreadMsgCountResponse.DisplayMsg)
}
inline void GetImUnreadMsgCountResponse::set_displaymsg(const char* value, size_t size) {
  set_has_displaymsg();
  displaymsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetImUnreadMsgCountResponse.DisplayMsg)
}
inline ::std::string* GetImUnreadMsgCountResponse::mutable_displaymsg() {
  set_has_displaymsg();
  // @@protoc_insertion_point(field_mutable:micromsg.GetImUnreadMsgCountResponse.DisplayMsg)
  return displaymsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetImUnreadMsgCountResponse::release_displaymsg() {
  // @@protoc_insertion_point(field_release:micromsg.GetImUnreadMsgCountResponse.DisplayMsg)
  clear_has_displaymsg();
  return displaymsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetImUnreadMsgCountResponse::set_allocated_displaymsg(::std::string* displaymsg) {
  if (displaymsg != NULL) {
    set_has_displaymsg();
  } else {
    clear_has_displaymsg();
  }
  displaymsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), displaymsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetImUnreadMsgCountResponse.DisplayMsg)
}

// optional string QQScheme = 3;
inline bool GetImUnreadMsgCountResponse::has_qqscheme() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetImUnreadMsgCountResponse::set_has_qqscheme() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetImUnreadMsgCountResponse::clear_has_qqscheme() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetImUnreadMsgCountResponse::clear_qqscheme() {
  qqscheme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qqscheme();
}
inline const ::std::string& GetImUnreadMsgCountResponse::qqscheme() const {
  // @@protoc_insertion_point(field_get:micromsg.GetImUnreadMsgCountResponse.QQScheme)
  return qqscheme_.GetNoArena();
}
inline void GetImUnreadMsgCountResponse::set_qqscheme(const ::std::string& value) {
  set_has_qqscheme();
  qqscheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetImUnreadMsgCountResponse.QQScheme)
}
#if LANG_CXX11
inline void GetImUnreadMsgCountResponse::set_qqscheme(::std::string&& value) {
  set_has_qqscheme();
  qqscheme_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetImUnreadMsgCountResponse.QQScheme)
}
#endif
inline void GetImUnreadMsgCountResponse::set_qqscheme(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_qqscheme();
  qqscheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetImUnreadMsgCountResponse.QQScheme)
}
inline void GetImUnreadMsgCountResponse::set_qqscheme(const char* value, size_t size) {
  set_has_qqscheme();
  qqscheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetImUnreadMsgCountResponse.QQScheme)
}
inline ::std::string* GetImUnreadMsgCountResponse::mutable_qqscheme() {
  set_has_qqscheme();
  // @@protoc_insertion_point(field_mutable:micromsg.GetImUnreadMsgCountResponse.QQScheme)
  return qqscheme_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetImUnreadMsgCountResponse::release_qqscheme() {
  // @@protoc_insertion_point(field_release:micromsg.GetImUnreadMsgCountResponse.QQScheme)
  clear_has_qqscheme();
  return qqscheme_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetImUnreadMsgCountResponse::set_allocated_qqscheme(::std::string* qqscheme) {
  if (qqscheme != NULL) {
    set_has_qqscheme();
  } else {
    clear_has_qqscheme();
  }
  qqscheme_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qqscheme);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetImUnreadMsgCountResponse.QQScheme)
}

// optional string DownloadUrl = 4;
inline bool GetImUnreadMsgCountResponse::has_downloadurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetImUnreadMsgCountResponse::set_has_downloadurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetImUnreadMsgCountResponse::clear_has_downloadurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetImUnreadMsgCountResponse::clear_downloadurl() {
  downloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadurl();
}
inline const ::std::string& GetImUnreadMsgCountResponse::downloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetImUnreadMsgCountResponse.DownloadUrl)
  return downloadurl_.GetNoArena();
}
inline void GetImUnreadMsgCountResponse::set_downloadurl(const ::std::string& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetImUnreadMsgCountResponse.DownloadUrl)
}
#if LANG_CXX11
inline void GetImUnreadMsgCountResponse::set_downloadurl(::std::string&& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetImUnreadMsgCountResponse.DownloadUrl)
}
#endif
inline void GetImUnreadMsgCountResponse::set_downloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetImUnreadMsgCountResponse.DownloadUrl)
}
inline void GetImUnreadMsgCountResponse::set_downloadurl(const char* value, size_t size) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetImUnreadMsgCountResponse.DownloadUrl)
}
inline ::std::string* GetImUnreadMsgCountResponse::mutable_downloadurl() {
  set_has_downloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GetImUnreadMsgCountResponse.DownloadUrl)
  return downloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetImUnreadMsgCountResponse::release_downloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.GetImUnreadMsgCountResponse.DownloadUrl)
  clear_has_downloadurl();
  return downloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetImUnreadMsgCountResponse::set_allocated_downloadurl(::std::string* downloadurl) {
  if (downloadurl != NULL) {
    set_has_downloadurl();
  } else {
    clear_has_downloadurl();
  }
  downloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetImUnreadMsgCountResponse.DownloadUrl)
}

// -------------------------------------------------------------------

// GetLocImgRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetLocImgRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLocImgRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLocImgRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLocImgRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetLocImgRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLocImgRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetLocImgRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLocImgRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetLocImgRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetLocImgRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetLocImgRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLocImgRequest.BaseRequest)
}

// required float Longitude = 2;
inline bool GetLocImgRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLocImgRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLocImgRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLocImgRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float GetLocImgRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLocImgRequest.Longitude)
  return longitude_;
}
inline void GetLocImgRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLocImgRequest.Longitude)
}

// required float Latitude = 3;
inline bool GetLocImgRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetLocImgRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetLocImgRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetLocImgRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float GetLocImgRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLocImgRequest.Latitude)
  return latitude_;
}
inline void GetLocImgRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLocImgRequest.Latitude)
}

// required uint32 Width = 4;
inline bool GetLocImgRequest::has_width() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetLocImgRequest::set_has_width() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetLocImgRequest::clear_has_width() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetLocImgRequest::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 GetLocImgRequest::width() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLocImgRequest.Width)
  return width_;
}
inline void GetLocImgRequest::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLocImgRequest.Width)
}

// required uint32 Height = 5;
inline bool GetLocImgRequest::has_height() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetLocImgRequest::set_has_height() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetLocImgRequest::clear_has_height() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetLocImgRequest::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 GetLocImgRequest::height() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLocImgRequest.Height)
  return height_;
}
inline void GetLocImgRequest::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLocImgRequest.Height)
}

// optional string Language = 6;
inline bool GetLocImgRequest::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLocImgRequest::set_has_language() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLocImgRequest::clear_has_language() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLocImgRequest::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
inline const ::std::string& GetLocImgRequest::language() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLocImgRequest.Language)
  return language_.GetNoArena();
}
inline void GetLocImgRequest::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLocImgRequest.Language)
}
#if LANG_CXX11
inline void GetLocImgRequest::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLocImgRequest.Language)
}
#endif
inline void GetLocImgRequest::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLocImgRequest.Language)
}
inline void GetLocImgRequest::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLocImgRequest.Language)
}
inline ::std::string* GetLocImgRequest::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLocImgRequest.Language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLocImgRequest::release_language() {
  // @@protoc_insertion_point(field_release:micromsg.GetLocImgRequest.Language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLocImgRequest::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLocImgRequest.Language)
}

// required uint32 MapType = 7;
inline bool GetLocImgRequest::has_maptype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetLocImgRequest::set_has_maptype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetLocImgRequest::clear_has_maptype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetLocImgRequest::clear_maptype() {
  maptype_ = 0u;
  clear_has_maptype();
}
inline ::google::protobuf::uint32 GetLocImgRequest::maptype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLocImgRequest.MapType)
  return maptype_;
}
inline void GetLocImgRequest::set_maptype(::google::protobuf::uint32 value) {
  set_has_maptype();
  maptype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLocImgRequest.MapType)
}

// required uint32 ZoomLevel = 8;
inline bool GetLocImgRequest::has_zoomlevel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetLocImgRequest::set_has_zoomlevel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetLocImgRequest::clear_has_zoomlevel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetLocImgRequest::clear_zoomlevel() {
  zoomlevel_ = 0u;
  clear_has_zoomlevel();
}
inline ::google::protobuf::uint32 GetLocImgRequest::zoomlevel() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLocImgRequest.ZoomLevel)
  return zoomlevel_;
}
inline void GetLocImgRequest::set_zoomlevel(::google::protobuf::uint32 value) {
  set_has_zoomlevel();
  zoomlevel_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLocImgRequest.ZoomLevel)
}

// -------------------------------------------------------------------

// GetLocImgResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetLocImgResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLocImgResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLocImgResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLocImgResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetLocImgResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLocImgResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetLocImgResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLocImgResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetLocImgResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetLocImgResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetLocImgResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLocImgResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t ImgBuf = 2;
inline bool GetLocImgResponse::has_imgbuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLocImgResponse::set_has_imgbuf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLocImgResponse::clear_has_imgbuf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLocImgResponse::clear_imgbuf() {
  if (imgbuf_ != NULL) imgbuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_imgbuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetLocImgResponse::imgbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLocImgResponse.ImgBuf)
  return imgbuf_ != NULL ? *imgbuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetLocImgResponse::mutable_imgbuf() {
  set_has_imgbuf();
  if (imgbuf_ == NULL) {
    imgbuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLocImgResponse.ImgBuf)
  return imgbuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetLocImgResponse::release_imgbuf() {
  // @@protoc_insertion_point(field_release:micromsg.GetLocImgResponse.ImgBuf)
  clear_has_imgbuf();
  ::micromsg::SKBuiltinBuffer_t* temp = imgbuf_;
  imgbuf_ = NULL;
  return temp;
}
inline void GetLocImgResponse::set_allocated_imgbuf(::micromsg::SKBuiltinBuffer_t* imgbuf) {
  delete imgbuf_;
  imgbuf_ = imgbuf;
  if (imgbuf) {
    set_has_imgbuf();
  } else {
    clear_has_imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLocImgResponse.ImgBuf)
}

// -------------------------------------------------------------------

// GetWeChatOutCouponsRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetWeChatOutCouponsRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetWeChatOutCouponsRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetWeChatOutCouponsRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetWeChatOutCouponsRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetWeChatOutCouponsRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetWeChatOutCouponsRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetWeChatOutCouponsRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetWeChatOutCouponsRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetWeChatOutCouponsRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetWeChatOutCouponsRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetWeChatOutCouponsRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetWeChatOutCouponsRequest.BaseRequest)
}

// -------------------------------------------------------------------

// GetWeChatOutCouponsResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetWeChatOutCouponsResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetWeChatOutCouponsResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetWeChatOutCouponsResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetWeChatOutCouponsResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetWeChatOutCouponsResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetWeChatOutCouponsResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetWeChatOutCouponsResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetWeChatOutCouponsResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetWeChatOutCouponsResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetWeChatOutCouponsResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetWeChatOutCouponsResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetWeChatOutCouponsResponse.BaseResponse)
}

// optional string Coupons = 2;
inline bool GetWeChatOutCouponsResponse::has_coupons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetWeChatOutCouponsResponse::set_has_coupons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetWeChatOutCouponsResponse::clear_has_coupons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetWeChatOutCouponsResponse::clear_coupons() {
  coupons_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_coupons();
}
inline const ::std::string& GetWeChatOutCouponsResponse::coupons() const {
  // @@protoc_insertion_point(field_get:micromsg.GetWeChatOutCouponsResponse.Coupons)
  return coupons_.GetNoArena();
}
inline void GetWeChatOutCouponsResponse::set_coupons(const ::std::string& value) {
  set_has_coupons();
  coupons_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetWeChatOutCouponsResponse.Coupons)
}
#if LANG_CXX11
inline void GetWeChatOutCouponsResponse::set_coupons(::std::string&& value) {
  set_has_coupons();
  coupons_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetWeChatOutCouponsResponse.Coupons)
}
#endif
inline void GetWeChatOutCouponsResponse::set_coupons(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_coupons();
  coupons_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetWeChatOutCouponsResponse.Coupons)
}
inline void GetWeChatOutCouponsResponse::set_coupons(const char* value, size_t size) {
  set_has_coupons();
  coupons_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetWeChatOutCouponsResponse.Coupons)
}
inline ::std::string* GetWeChatOutCouponsResponse::mutable_coupons() {
  set_has_coupons();
  // @@protoc_insertion_point(field_mutable:micromsg.GetWeChatOutCouponsResponse.Coupons)
  return coupons_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetWeChatOutCouponsResponse::release_coupons() {
  // @@protoc_insertion_point(field_release:micromsg.GetWeChatOutCouponsResponse.Coupons)
  clear_has_coupons();
  return coupons_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetWeChatOutCouponsResponse::set_allocated_coupons(::std::string* coupons) {
  if (coupons != NULL) {
    set_has_coupons();
  } else {
    clear_has_coupons();
  }
  coupons_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coupons);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetWeChatOutCouponsResponse.Coupons)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmweb_2eproto__INCLUDED
